CREATE OR REPLACE PACKAGE HRA_FOUNDATION_G
AS

-------------------------------------------------------------------------------
-- 연말정산 기초자료 SELECT.
-------------------------------------------------------------------------------
  PROCEDURE FOUNDATION_SELECT
            ( P_CURSOR            OUT TYPES.TCURSOR
            , P_STD_DATE          IN DATE
            , W_YEAR_YYYY         IN HRA_FOUNDATION.YEAR_YYYY%TYPE
            , W_PERSON_ID         IN HRA_FOUNDATION.PERSON_ID%TYPE
            , W_SOB_ID            IN HRA_FOUNDATION.SOB_ID%TYPE
            , W_ORG_ID            IN HRA_FOUNDATION.ORG_ID%TYPE
            );

-------------------------------------------------------------------------------
-- 연말정산 기초자료 INSERT.
-------------------------------------------------------------------------------
PROCEDURE FOUNDATION_INSERT
          ( P_YEAR_YYYY               IN HRA_FOUNDATION.YEAR_YYYY%TYPE
          , P_PERSON_ID               IN HRA_FOUNDATION.PERSON_ID%TYPE
          , P_SOB_ID                  IN HRA_FOUNDATION.SOB_ID%TYPE
          , P_ORG_ID                  IN HRA_FOUNDATION.ORG_ID%TYPE
          , P_ADD_BONUS_AMT           IN HRA_FOUNDATION.ADD_BONUS_AMT%TYPE
          , P_ADD_EDUCATION_AMT       IN HRA_FOUNDATION.ADD_EDUCATION_AMT%TYPE
          , P_ADD_ETC_AMT             IN HRA_FOUNDATION.ADD_ETC_AMT%TYPE
          , P_INCOME_OUTSIDE_AMT      IN HRA_FOUNDATION.INCOME_OUTSIDE_AMT%TYPE
          , P_NONTAX_OUTSIDE_AMT      IN HRA_FOUNDATION.NONTAX_OUTSIDE_AMT%TYPE
          , P_TAX_OUTSIDE_AMT         IN HRA_FOUNDATION.TAX_OUTSIDE_AMT%TYPE
          , P_IN_TAX_AMT              IN HRA_FOUNDATION.IN_TAX_AMT%TYPE
          , P_LOCAL_TAX_AMT           IN HRA_FOUNDATION.LOCAL_TAX_AMT%TYPE
          , P_ANNU_INSUR_AMT          IN HRA_FOUNDATION.ANNU_INSUR_AMT%TYPE
          , P_HIRE_MEDIC_INSUR_AMT    IN HRA_FOUNDATION.HIRE_MEDIC_INSUR_AMT%TYPE
          , P_HOUSE_SAVE_AMT          IN HRA_FOUNDATION.HOUSE_SAVE_AMT%TYPE
          , P_HOUSE_ADD_AMT           IN HRA_FOUNDATION.HOUSE_ADD_AMT%TYPE
          , P_LONG_HOUSE_INTER_AMT    IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT%TYPE
          , P_LONG_HOUSE_INTER_AMT_1  IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT_1%TYPE
          , P_LONG_HOUSE_INTER_AMT_2  IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT_2%TYPE
          , P_SMALL_CORPOR_DED_AMT    IN HRA_FOUNDATION.SMALL_CORPOR_DED_AMT%TYPE
          , P_LONG_STOCK_SAVING_AMT_1 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_1%TYPE
          , P_LONG_STOCK_SAVING_AMT_2 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_2%TYPE
          , P_LONG_STOCK_SAVING_AMT_3 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_3%TYPE
          , P_MARRY_COUNT             IN HRA_FOUNDATION.MARRY_COUNT%TYPE
          , P_FUNER_COUNT             IN HRA_FOUNDATION.FUNER_COUNT%TYPE
          , P_HOUSE_MOVE_COUNT        IN HRA_FOUNDATION.HOUSE_MOVE_COUNT%TYPE
          , P_PERSON_ANNU_AMT         IN HRA_FOUNDATION.PERSON_ANNU_AMT%TYPE
          , P_ANNU_BANK_AMT           IN HRA_FOUNDATION.ANNU_BANK_AMT%TYPE
          , P_RETR_ANNU_AMT           IN HRA_FOUNDATION.RETR_ANNU_AMT%TYPE
          , P_INVES_AMT               IN HRA_FOUNDATION.INVES_AMT%TYPE
          , P_EMPL_STOCK_AMT          IN HRA_FOUNDATION.EMPL_STOCK_AMT%TYPE
          , P_HOUSE_DEBT_BEN_AMT      IN HRA_FOUNDATION.HOUSE_DEBT_BEN_AMT%TYPE
          , P_USER_ID                 IN HRA_FOUNDATION.CREATED_BY%TYPE
          , P_HOUSE_APP_DEPOSIT_AMT   IN HRA_FOUNDATION.HOUSE_APP_DEPOSIT_AMT%TYPE
          , P_HOUSE_MONTHLY_AMT       IN HRA_FOUNDATION.HOUSE_MONTHLY_AMT%TYPE
          , P_LOW_HOUSE_ADD_AMT       IN HRA_FOUNDATION.LOW_HOUSE_ADD_AMT%TYPE 
          );

-------------------------------------------------------------------------------
-- 연말정산 기초자료 UPDATE.
-------------------------------------------------------------------------------
PROCEDURE FOUNDATION_UPDATE
          ( W_YEAR_YYYY               IN HRA_FOUNDATION.YEAR_YYYY%TYPE
          , W_PERSON_ID               IN HRA_FOUNDATION.PERSON_ID%TYPE
          , W_SOB_ID                  IN HRA_FOUNDATION.SOB_ID%TYPE
          , W_ORG_ID                  IN HRA_FOUNDATION.ORG_ID%TYPE
          , P_ADD_BONUS_AMT           IN HRA_FOUNDATION.ADD_BONUS_AMT%TYPE
          , P_ADD_EDUCATION_AMT       IN HRA_FOUNDATION.ADD_EDUCATION_AMT%TYPE
          , P_ADD_ETC_AMT             IN HRA_FOUNDATION.ADD_ETC_AMT%TYPE
          , P_INCOME_OUTSIDE_AMT      IN HRA_FOUNDATION.INCOME_OUTSIDE_AMT%TYPE
          , P_NONTAX_OUTSIDE_AMT      IN HRA_FOUNDATION.NONTAX_OUTSIDE_AMT%TYPE
          , P_TAX_OUTSIDE_AMT         IN HRA_FOUNDATION.TAX_OUTSIDE_AMT%TYPE
          , P_IN_TAX_AMT              IN HRA_FOUNDATION.IN_TAX_AMT%TYPE
          , P_LOCAL_TAX_AMT           IN HRA_FOUNDATION.LOCAL_TAX_AMT%TYPE
          , P_ANNU_INSUR_AMT          IN HRA_FOUNDATION.ANNU_INSUR_AMT%TYPE
          , P_HIRE_MEDIC_INSUR_AMT    IN HRA_FOUNDATION.HIRE_MEDIC_INSUR_AMT%TYPE
          , P_HOUSE_SAVE_AMT          IN HRA_FOUNDATION.HOUSE_SAVE_AMT%TYPE
          , P_HOUSE_ADD_AMT           IN HRA_FOUNDATION.HOUSE_ADD_AMT%TYPE
          , P_LONG_HOUSE_INTER_AMT    IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT%TYPE
          , P_LONG_HOUSE_INTER_AMT_1  IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT_1%TYPE
          , P_LONG_HOUSE_INTER_AMT_2  IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT_2%TYPE
          , P_SMALL_CORPOR_DED_AMT    IN HRA_FOUNDATION.SMALL_CORPOR_DED_AMT%TYPE
          , P_LONG_STOCK_SAVING_AMT_1 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_1%TYPE
          , P_LONG_STOCK_SAVING_AMT_2 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_2%TYPE
          , P_LONG_STOCK_SAVING_AMT_3 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_3%TYPE
          , P_MARRY_COUNT             IN HRA_FOUNDATION.MARRY_COUNT%TYPE
          , P_FUNER_COUNT             IN HRA_FOUNDATION.FUNER_COUNT%TYPE
          , P_HOUSE_MOVE_COUNT        IN HRA_FOUNDATION.HOUSE_MOVE_COUNT%TYPE
          , P_PERSON_ANNU_AMT         IN HRA_FOUNDATION.PERSON_ANNU_AMT%TYPE
          , P_ANNU_BANK_AMT           IN HRA_FOUNDATION.ANNU_BANK_AMT%TYPE
          , P_RETR_ANNU_AMT           IN HRA_FOUNDATION.RETR_ANNU_AMT%TYPE
          , P_INVES_AMT               IN HRA_FOUNDATION.INVES_AMT%TYPE
          , P_EMPL_STOCK_AMT          IN HRA_FOUNDATION.EMPL_STOCK_AMT%TYPE
          , P_HOUSE_DEBT_BEN_AMT      IN HRA_FOUNDATION.HOUSE_DEBT_BEN_AMT%TYPE
          , P_USER_ID                 IN HRA_FOUNDATION.CREATED_BY%TYPE
          , P_HOUSE_APP_DEPOSIT_AMT   IN HRA_FOUNDATION.HOUSE_APP_DEPOSIT_AMT%TYPE
          , P_HOUSE_MONTHLY_AMT       IN HRA_FOUNDATION.HOUSE_MONTHLY_AMT%TYPE
          , P_LOW_HOUSE_ADD_AMT       IN HRA_FOUNDATION.LOW_HOUSE_ADD_AMT%TYPE 
          );
          
-------------------------------------------------------------------------------
-- 연말정산 기초자료 DELETE.
-------------------------------------------------------------------------------
PROCEDURE FOUNDATION_DELETE
          ( W_YEAR_YYYY  HRA_FOUNDATION.YEAR_YYYY%TYPE
          , W_PERSON_ID  HRA_FOUNDATION.PERSON_ID%TYPE
          , W_SOB_ID     HRA_FOUNDATION.SOB_ID%TYPE
          , W_ORG_ID     HRA_FOUNDATION.ORG_ID%TYPE 
          );
          
END HRA_FOUNDATION_G;
/
CREATE OR REPLACE PACKAGE BODY HRA_FOUNDATION_G
AS
/******************************************************************************/
/* Project      : FPCB ERP
/* Module       : FCM
/* Program Name : HRA_FOUNDATION_G
/* Description  : 연말정산 기초자료 관리.
/*
/* Reference by :    
/* Program History :
/*------------------------------------------------------------------------------
/*   Date       In Charge          Description
/*------------------------------------------------------------------------------
/* 18-MAR-2011  Lee Sun Hee        Initialize
/******************************************************************************/

----------------------------------------------------------------------------------
-- 연말정산 기초자료 SELECT
----------------------------------------------------------------------------------
  PROCEDURE FOUNDATION_SELECT
            ( P_CURSOR            OUT TYPES.TCURSOR
            , P_STD_DATE          IN DATE
            , W_YEAR_YYYY         IN HRA_FOUNDATION.YEAR_YYYY%TYPE
            , W_PERSON_ID         IN HRA_FOUNDATION.PERSON_ID%TYPE
            , W_SOB_ID            IN HRA_FOUNDATION.SOB_ID%TYPE
            , W_ORG_ID            IN HRA_FOUNDATION.ORG_ID%TYPE
            )
  AS
    V_MANY_CHILD_DED_AGE          NUMBER := 0;
    
  BEGIN
    BEGIN
      SELECT ITS.MANY_CHILD_DED_AGE
        INTO V_MANY_CHILD_DED_AGE
        FROM HRA_INCOME_TAX_STANDARD ITS
       WHERE ITS.NATION_CODE      = '101'
         AND ITS.YEAR_YYYY        = W_YEAR_YYYY
       ;    
    EXCEPTION
      WHEN OTHERS THEN
        V_MANY_CHILD_DED_AGE := 20;
    END;
    
    OPEN P_CURSOR FOR
      SELECT PM.NAME AS PERSON_NAME,
             PM.PERSON_NUM,
             PM.JOIN_DATE AS JOIN_DATE,
             PM.RETIRE_DATE AS RETIRE_DATE,
             PM.REPRE_NUM,
             EAPP_REGISTER_AGE_F(PM.REPRE_NUM, P_STD_DATE, 0) AS AGE,
             DM.DEPT_NAME AS DEPT_NAME,
             DM.DEPT_CODE,
             HRM_COMMON_G.ID_NAME_F(PM.FLOOR_ID) AS FLOOR_NAME,
             PM.FLOOR_ID,
             NVL(HF1.YEAR_YYYY, W_YEAR_YYYY) AS YEAR_YYYY,
             NVL(HF1.PERSON_ID, W_PERSON_ID) PERSON_ID,
             --> 기초정보.
             NVL(HF1.ADD_BONUS_AMT, 0) ADD_BONUS_AMT,
             NVL(HF1.ADD_EDUCATION_AMT, 0) ADD_EDUCATION_AMT,
             NVL(HF1.ADD_ETC_AMT, 0) ADD_ETC_AMT,
             NVL(HF1.INCOME_OUTSIDE_AMT, 0) INCOME_OUTSIDE_AMT,
             NVL(HF1.NONTAX_OUTSIDE_AMT, 0) NONTAX_OUTSIDE_AMT,
             NVL(HF1.TAX_OUTSIDE_AMT, 0) TAX_OUTSIDE_AMT,
             NVL(HF1.ANNU_INSUR_AMT, 0) ANNU_INSUR_AMT,
             NVL(HF1.HIRE_MEDIC_INSUR_AMT, 0) HIRE_MEDIC_INSUR_AMT,
             NVL(HF1.HOUSE_SAVE_AMT, 0) HOUSE_SAVE_AMT,
             NVL(HF1.HOUSE_ADD_AMT, 0) HOUSE_ADD_AMT,
             NVL(HF1.LONG_HOUSE_INTER_AMT, 0) LONG_HOUSE_INTER_AMT,
             NVL(HSF1.DONAT_ALL, 0) DONAT_ALL,
             NVL(HSF1.DONAT_50P, 0) DONAT_50P,
             NVL(HSF1.DONAT_30P, 0) DONAT_30P,
             NVL(HSF1.DONAT_10P, 0) DONAT_10P,
             NVL(HSF1.DONAT_POLI, 0) DONAT_POLI,
             NVL(HF1.MARRY_COUNT, 0) MARRY_COUNT,
             NVL(HF1.FUNER_COUNT, 0) FUNER_COUNT,
             NVL(HF1.HOUSE_MOVE_COUNT, 0) HOUSE_MOVE_COUNT,
             NVL(HF1.PERSON_ANNU_AMT, 0) PERSON_ANNU_AMT,
             NVL(HF1.ANNU_BANK_AMT, 0) ANNU_BANK_AMT,
             NVL(HF1.RETR_ANNU_AMT, 0) RETR_ANNU_AMT,
             NVL(HF1.INVES_AMT, 0) INVES_AMT,
             NVL(HF1.EMPL_STOCK_AMT, 0) EMPL_STOCK_AMT,
             --> 인적공제;
             NVL(HSF1.BASE_COUNT, 0) BASE_COUNT,
             NVL(HSF1.SPOUSE_COUNT, 0) SPOUSE_COUNT,
             NVL(HSF1.OLD_COUNT, 0) OLD_COUNT,
             NVL(HSF1.OLD1_COUNT, 0) OLD1_COUNT,
             NVL(HSF1.DEFORM_COUNT, 0) DEFORM_COUNT,
             NVL(HSF1.WOMAN_COUNT, 0) WOMAN_COUNT,
             NVL(HSF1.CHILD_COUNT, 0) CHILD_COUNT,
             CASE
               WHEN NVL(HSF1.MANY_CHILD_DED_COUNT, 0) > 1 THEN NVL(HSF1.MANY_CHILD_DED_COUNT, 0)
               ELSE 0
             END MANY_CHILD_DED_COUNT,
             NVL(HSF1.INSURE_SUM, 0) INSURE_SUM,
             NVL(HSF1.DEFORM_INSURE_SUM, 0) DEFORM_INSURE_SUM,
             NVL(HSF1.PER_MEDI_SUM, 0) PER_MEDI_SUM,
             NVL(HSF1.OLD_MEDI_SUM, 0) OLD_MEDI_SUM,
             NVL(HSF1.DEFORM_MEDI_SUM, 0) DEFORM_MEDI_SUM,
             NVL(HSF1.SUPP_MEDI_SUM, 0) SUPP_MEDI_SUM,
             NVL(HSF1.PER_EDU_COUNT, 0) PER_EDU_COUNT,
             NVL(HSF1.PER_EDU_AMT, 0) PER_EDU_AMT,
             NVL(HSF1.DEFORM_EDU_COUNT, 0) DEFORM_EDU_COUNT,
             NVL(HSF1.DEFORM_EDU_AMT, 0) DEFORM_EDU_AMT,
             NVL(HSF1.CHILD_EDU_COUNT, 0) CHILD_EDU_COUNT,
             NVL(HSF1.CHILD_EDU_AMT, 0) CHILD_EDU_AMT,
             NVL(HSF1.HIGH_EDU_COUNT, 0) HIGH_EDU_COUNT,
             NVL(HSF1.HIGH_EDU_AMT, 0) HIGH_EDU_AMT,
             NVL(HSF1.COLL_EDU_COUNT, 0) COLL_EDU_COUNT,
             NVL(HSF1.COLL_EDU_AMT, 0) COLL_EDU_AMT,
             NVL(HSF1.CREDIT_SUM, 0) CREDIT_SUM,
             NVL(HSF1.ACADE_GIRO_SUM, 0) ACADE_GIRO_SUM,
             NVL(HSF1.CASH_SUM, 0) CASH_SUM,
             ------> 추가            
             NVL(HF1.HOUSE_DEBT_BEN_AMT, 0) HOUSE_DEBT_BEN_AMT,
             ------> 2008년도 추가;
             NVL(HSF1.DONAT_10P_RELIGION, 0) DONAT_10P_RELIGION,
             NVL(HF1.SMALL_CORPOR_DED_AMT, 0) SMALL_CORPOR_DED_AMT,
             NVL(HF1.LONG_STOCK_SAVING_AMT_1, 0) LONG_STOCK_SAVING_AMT_1,
             NVL(HF1.LONG_STOCK_SAVING_AMT_2, 0) LONG_STOCK_SAVING_AMT_2,
             NVL(HF1.LONG_STOCK_SAVING_AMT_3, 0) LONG_STOCK_SAVING_AMT_3,
             NVL(HSF1.BIRTH_COUNT, 0) BIRTH_COUNT,
             NVL(HF1.LONG_HOUSE_INTER_AMT_1, 0) LONG_HOUSE_INTER_AMT_1,
             NVL(HF1.LONG_HOUSE_INTER_AMT_2, 0) LONG_HOUSE_INTER_AMT_2,
             NVL(HF1.IN_TAX_AMT, 0) IN_TAX_AMT,
             NVL(HF1.LOCAL_TAX_AMT, 0) LOCAL_TAX_AMT,
             --> 2011.01.17,           
             NVL(HSF1.CHECK_CREDIT_SUM, 0) CHECK_CREDIT_SUM,
             NVL(HF1.HOUSE_APP_DEPOSIT_AMT , 0) HOUSE_APP_DEPOSIT_AMT ,
             NVL(HF1.HOUSE_MONTHLY_AMT , 0) HOUSE_MONTHLY_AMT ,
             NVL(HF1.LOW_HOUSE_ADD_AMT , 0) LOW_HOUSE_ADD_AMT 
        FROM HRM_PERSON_MASTER PM
          , HRM_DEPT_MASTER DM
          , ( --> 기초자료 조회  
            SELECT HF.YEAR_YYYY,
                  HF.PERSON_ID,
                  HF.SOB_ID,
                  HF.ORG_ID,
                  HF.ADD_BONUS_AMT,
                  HF.ADD_EDUCATION_AMT,
                  HF.ADD_ETC_AMT,
                  HF.INCOME_OUTSIDE_AMT,
                  HF.NONTAX_OUTSIDE_AMT,
                  HF.TAX_OUTSIDE_AMT,
                  HF.ANNU_INSUR_AMT,
                  HF.HIRE_MEDIC_INSUR_AMT,
                  HF.HOUSE_SAVE_AMT,
                  HF.HOUSE_ADD_AMT,
                  HF.LONG_HOUSE_INTER_AMT,
                  HF.LONG_HOUSE_INTER_AMT_1,
                  --> 2009.12.30  ADD LONG_HOUSE_INTER_AMT_2 FIELD
                  HF.LONG_HOUSE_INTER_AMT_2
                  /* -- 2008년 수정 -> 부양가족에서 입력;                
                  , HF.DONAT_ALL, HF.ETC_DONAT_ALL
                  , HF.DONAT_50P, HF.ETC_DONAT_50P
                  , HF.DONAT_30P, HF.ETC_DONAT_30P
                  , HF.DONAT_10P, HF.ETC_DONAT_10P
                  , HF.DONAT_POLI, HF.ETC_DONAT_POLI
                  */,
                  HF.MARRY_COUNT,
                  HF.FUNER_COUNT,
                  HF.HOUSE_MOVE_COUNT,
                  HF.PERSON_ANNU_AMT,
                  HF.ANNU_BANK_AMT,
                  HF.RETR_ANNU_AMT,
                  HF.INVES_AMT,
                  HF.EMPL_STOCK_AMT,
                  HF.HOUSE_DEBT_BEN_AMT,
                  --> 이하 2008년도 추가;
                  HF.SMALL_CORPOR_DED_AMT,
                  HF.LONG_STOCK_SAVING_AMT_1,
                  HF.LONG_STOCK_SAVING_AMT_2,
                  HF.LONG_STOCK_SAVING_AMT_3,
                  HF.IN_TAX_AMT,
                  HF.LOCAL_TAX_AMT,
                  HF.HOUSE_APP_DEPOSIT_AMT,
                  HF.HOUSE_MONTHLY_AMT,
                  HF.LOW_HOUSE_ADD_AMT
              FROM HRA_FOUNDATION HF
            WHERE HF.YEAR_YYYY    = W_YEAR_YYYY
              AND HF.PERSON_ID    = W_PERSON_ID
            ) HF1
          , ( --> 부양가족 내역 조인  
            SELECT HSF.YEAR_YYYY,
                  HSF.PERSON_ID,
                  HSF.SOB_ID,
                  HSF.ORG_ID,                  
                  SUM(DECODE(HSF.BASE_YN, 'Y', 1, 0)) BASE_COUNT,
                  SUM(CASE 
                        WHEN HSF.RELATION_CODE = '3' AND HSF.SPOUSE_YN = 'Y' THEN 1
                        ELSE 0
                      END) SPOUSE_COUNT,
                  SUM(DECODE(HSF.OLD_YN, 'Y', 1, 0)) OLD_COUNT,
                  SUM(DECODE(HSF.OLD1_YN, 'Y', 1, 0)) OLD1_COUNT,
                  SUM(DECODE(HSF.DEFORM_YN, 'Y', 1, 0)) DEFORM_COUNT,
                  SUM(DECODE(HSF.WOMAN_YN, 'Y', 1, 0)) WOMAN_COUNT,
                  SUM(DECODE(HSF.BIRTH_YN, 'Y', 1, 0)) BIRTH_COUNT,  
                  --> 2008년도 추가;
                  SUM(DECODE(HSF.CHILD_YN, 'Y', 1, 0)) CHILD_COUNT,
                  SUM(CASE
                        WHEN HSF.BASE_YN = 'Y' AND HSF.RELATION_CODE = '4' AND
                             EAPP_REGISTER_AGE_F(HSF.REPRE_NUM, P_STD_DATE, 0) <= V_MANY_CHILD_DED_AGE THEN 1
                        ELSE 0
                      END) MANY_CHILD_DED_COUNT,
                  SUM(NVL(HSF.INSURE_AMT, 0) + NVL(HSF.ETC_INSURE_AMT, 0)) INSURE_SUM,
                  SUM(NVL(HSF.DEFORM_INSURE_AMT, 0) +
                      NVL(HSF.ETC_DEFORM_INSURE_AMT, 0)) DEFORM_INSURE_SUM,
                  SUM(DECODE(HSF.RELATION_CODE, '0', NVL(HSF.MEDICAL_AMT, 0) + NVL(HSF.ETC_MEDICAL_AMT, 0), 0)) PER_MEDI_SUM,
                  SUM(CASE
                        WHEN HSF.RELATION_CODE = '0' THEN 0
                        WHEN 'Y' IN (HSF.OLD_YN, HSF.OLD1_YN) AND HSF.DEFORM_YN <> 'Y' THEN NVL(HSF.MEDICAL_AMT, 0) + NVL(HSF.ETC_MEDICAL_AMT, 0)
                        ELSE 0
                      END) OLD_MEDI_SUM,
                  SUM(CASE
                        WHEN HSF.RELATION_CODE = '0' THEN 0
                        WHEN HSF.DEFORM_YN = 'Y' THEN NVL(HSF.MEDICAL_AMT, 0) + NVL(HSF.ETC_MEDICAL_AMT, 0)
                        ELSE 0
                      END) DEFORM_MEDI_SUM,
                  SUM(CASE
                        WHEN HSF.RELATION_CODE = '0' THEN 0
                        WHEN 'Y' IN (HSF.OLD_YN, HSF.OLD1_YN) THEN 0
                        WHEN HSF.DEFORM_YN = 'Y' THEN 0
                        ELSE NVL(HSF.MEDICAL_AMT, 0) + NVL(HSF.ETC_MEDICAL_AMT, 0)
                      END) SUPP_MEDI_SUM,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '10', 1, 0)) PER_EDU_COUNT,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '10', NVL(HSF.EDUCATION_AMT, 0) + NVL(HSF.ETC_EDUCATION_AMT, 0), 0)) PER_EDU_AMT,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '20', 1, 0)) DEFORM_EDU_COUNT,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '20', NVL(HSF.EDUCATION_AMT, 0) + NVL(HSF.ETC_EDUCATION_AMT, 0), 0)) DEFORM_EDU_AMT,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '30', 1, 0)) CHILD_EDU_COUNT,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '30', NVL(HSF.EDUCATION_AMT, 0) + NVL(HSF.ETC_EDUCATION_AMT, 0), 0)) CHILD_EDU_AMT,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '40', 1, 0)) HIGH_EDU_COUNT,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '40', NVL(HSF.EDUCATION_AMT, 0) + NVL(HSF.ETC_EDUCATION_AMT, 0), 0)) HIGH_EDU_AMT,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '50', 1, 0)) COLL_EDU_COUNT,
                  SUM(DECODE(HSF.EDUCATION_TYPE, '50', NVL(HSF.EDUCATION_AMT, 0) + NVL(HSF.ETC_EDUCATION_AMT, 0), 0)) COLL_EDU_AMT,
                  SUM(NVL(HSF.CREDIT_AMT, 0) + NVL(HSF.ETC_CREDIT_AMT, 0)) CREDIT_SUM,
                  --> 2011.01.17 BY YOUNGMIN.                
                  SUM(NVL(HSF.CHECK_CREDIT_AMT, 0) +
                      NVL(HSF.ETC_CHECK_CREDIT_AMT, 0)) CHECK_CREDIT_SUM,
                  SUM(NVL(HSF.ACADE_GIRO_AMT, 0) +
                      NVL(HSF.ETC_ACADE_GIRO_AMT, 0)) ACADE_GIRO_SUM,
                  SUM(NVL(HSF.CASH_AMT, 0) + NVL(HSF.ETC_CASH_AMT, 0)) CASH_SUM,
                  --> 2008년 추가;                
                  SUM(NVL(HSF.DONAT_POLI, 0) + NVL(HSF.ETC_DONAT_POLI, 0)) DONAT_POLI,
                  SUM(NVL(HSF.DONAT_ALL, 0) + NVL(HSF.ETC_DONAT_ALL, 0)) DONAT_ALL,
                  SUM(NVL(HSF.DONAT_50P, 0) + NVL(HSF.ETC_DONAT_50P, 0)) DONAT_50P,
                  SUM(NVL(HSF.DONAT_30P, 0) + NVL(HSF.ETC_DONAT_30P, 0)) DONAT_30P,
                  SUM(NVL(HSF.DONAT_10P, 0) + NVL(HSF.ETC_DONAT_10P, 0)) DONAT_10P,
                  SUM(NVL(HSF.DONAT_10P_RELIGION, 0) +
                      NVL(HSF.ETC_DONAT_10P_RELIGION, 0)) DONAT_10P_RELIGION              
              FROM HRA_SUPPORT_FAMILY HSF
            WHERE HSF.YEAR_YYYY     = W_YEAR_YYYY
              AND HSF.PERSON_ID     = W_PERSON_ID
            GROUP BY HSF.YEAR_YYYY, HSF.PERSON_ID, HSF.SOB_ID, HSF.ORG_ID
            ) HSF1
       WHERE PM.DEPT_ID           = DM.DEPT_ID
         AND PM.PERSON_ID         = HSF1.PERSON_ID(+)
         AND PM.PERSON_ID         = HF1.PERSON_ID(+)
         AND PM.PERSON_ID         = W_PERSON_ID
         AND PM.SOB_ID            = W_SOB_ID
         AND PM.ORG_ID            = W_ORG_ID
       ;
       
  END FOUNDATION_SELECT;
  
  
----------------------------------------------------------------------------------
-- 연말정산 기초자료 INSERT
----------------------------------------------------------------------------------
PROCEDURE FOUNDATION_INSERT
          ( P_YEAR_YYYY               IN HRA_FOUNDATION.YEAR_YYYY%TYPE
          , P_PERSON_ID               IN HRA_FOUNDATION.PERSON_ID%TYPE
          , P_SOB_ID                  IN HRA_FOUNDATION.SOB_ID%TYPE
          , P_ORG_ID                  IN HRA_FOUNDATION.ORG_ID%TYPE
          , P_ADD_BONUS_AMT           IN HRA_FOUNDATION.ADD_BONUS_AMT%TYPE
          , P_ADD_EDUCATION_AMT       IN HRA_FOUNDATION.ADD_EDUCATION_AMT%TYPE
          , P_ADD_ETC_AMT             IN HRA_FOUNDATION.ADD_ETC_AMT%TYPE
          , P_INCOME_OUTSIDE_AMT      IN HRA_FOUNDATION.INCOME_OUTSIDE_AMT%TYPE
          , P_NONTAX_OUTSIDE_AMT      IN HRA_FOUNDATION.NONTAX_OUTSIDE_AMT%TYPE
          , P_TAX_OUTSIDE_AMT         IN HRA_FOUNDATION.TAX_OUTSIDE_AMT%TYPE
          , P_IN_TAX_AMT              IN HRA_FOUNDATION.IN_TAX_AMT%TYPE
          , P_LOCAL_TAX_AMT           IN HRA_FOUNDATION.LOCAL_TAX_AMT%TYPE
          , P_ANNU_INSUR_AMT          IN HRA_FOUNDATION.ANNU_INSUR_AMT%TYPE
          , P_HIRE_MEDIC_INSUR_AMT    IN HRA_FOUNDATION.HIRE_MEDIC_INSUR_AMT%TYPE
          , P_HOUSE_SAVE_AMT          IN HRA_FOUNDATION.HOUSE_SAVE_AMT%TYPE
          , P_HOUSE_ADD_AMT           IN HRA_FOUNDATION.HOUSE_ADD_AMT%TYPE
          , P_LONG_HOUSE_INTER_AMT    IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT%TYPE
          , P_LONG_HOUSE_INTER_AMT_1  IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT_1%TYPE
          , P_LONG_HOUSE_INTER_AMT_2  IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT_2%TYPE
          , P_SMALL_CORPOR_DED_AMT    IN HRA_FOUNDATION.SMALL_CORPOR_DED_AMT%TYPE
          , P_LONG_STOCK_SAVING_AMT_1 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_1%TYPE
          , P_LONG_STOCK_SAVING_AMT_2 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_2%TYPE
          , P_LONG_STOCK_SAVING_AMT_3 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_3%TYPE
          , P_MARRY_COUNT             IN HRA_FOUNDATION.MARRY_COUNT%TYPE
          , P_FUNER_COUNT             IN HRA_FOUNDATION.FUNER_COUNT%TYPE
          , P_HOUSE_MOVE_COUNT        IN HRA_FOUNDATION.HOUSE_MOVE_COUNT%TYPE
          , P_PERSON_ANNU_AMT         IN HRA_FOUNDATION.PERSON_ANNU_AMT%TYPE
          , P_ANNU_BANK_AMT           IN HRA_FOUNDATION.ANNU_BANK_AMT%TYPE
          , P_RETR_ANNU_AMT           IN HRA_FOUNDATION.RETR_ANNU_AMT%TYPE
          , P_INVES_AMT               IN HRA_FOUNDATION.INVES_AMT%TYPE
          , P_EMPL_STOCK_AMT          IN HRA_FOUNDATION.EMPL_STOCK_AMT%TYPE
          , P_HOUSE_DEBT_BEN_AMT      IN HRA_FOUNDATION.HOUSE_DEBT_BEN_AMT%TYPE
          , P_USER_ID                 IN HRA_FOUNDATION.CREATED_BY%TYPE
          , P_HOUSE_APP_DEPOSIT_AMT   IN HRA_FOUNDATION.HOUSE_APP_DEPOSIT_AMT%TYPE
          , P_HOUSE_MONTHLY_AMT       IN HRA_FOUNDATION.HOUSE_MONTHLY_AMT%TYPE
          , P_LOW_HOUSE_ADD_AMT       IN HRA_FOUNDATION.LOW_HOUSE_ADD_AMT%TYPE 
          )
  IS

          V_SYSDATE DATE := GET_LOCAL_DATE(P_SOB_ID);
  BEGIN

   INSERT INTO HRA_FOUNDATION
   ( YEAR_YYYY
   , PERSON_ID 
   , SOB_ID 
   , ORG_ID 
   , ADD_BONUS_AMT 
   , ADD_EDUCATION_AMT 
   , ADD_ETC_AMT 
   , INCOME_OUTSIDE_AMT 
   , NONTAX_OUTSIDE_AMT 
   , TAX_OUTSIDE_AMT 
   , IN_TAX_AMT 
   , LOCAL_TAX_AMT 
   , ANNU_INSUR_AMT
   , HIRE_MEDIC_INSUR_AMT
   , HOUSE_SAVE_AMT 
   , HOUSE_ADD_AMT 
   , LONG_HOUSE_INTER_AMT 
   , LONG_HOUSE_INTER_AMT_1 
   , LONG_HOUSE_INTER_AMT_2 
   , SMALL_CORPOR_DED_AMT 
   , LONG_STOCK_SAVING_AMT_1 
   , LONG_STOCK_SAVING_AMT_2 
   , LONG_STOCK_SAVING_AMT_3 
   , MARRY_COUNT 
   , FUNER_COUNT 
   , HOUSE_MOVE_COUNT 
   , PERSON_ANNU_AMT 
   , ANNU_BANK_AMT 
   , RETR_ANNU_AMT 
   , INVES_AMT 
   , EMPL_STOCK_AMT 
   , HOUSE_DEBT_BEN_AMT 
   , CREATION_DATE 
   , CREATED_BY 
   , LAST_UPDATE_DATE 
   , LAST_UPDATED_BY 
   , HOUSE_APP_DEPOSIT_AMT 
   , HOUSE_MONTHLY_AMT 
   , LOW_HOUSE_ADD_AMT 
   )
   VALUES
   ( P_YEAR_YYYY
   , P_PERSON_ID
   , P_SOB_ID
   , P_ORG_ID
   , P_ADD_BONUS_AMT
   , P_ADD_EDUCATION_AMT
   , P_ADD_ETC_AMT
   , P_INCOME_OUTSIDE_AMT
   , P_NONTAX_OUTSIDE_AMT
   , P_TAX_OUTSIDE_AMT
   , P_IN_TAX_AMT
   , P_LOCAL_TAX_AMT
   , P_ANNU_INSUR_AMT
   , P_HIRE_MEDIC_INSUR_AMT
   , P_HOUSE_SAVE_AMT
   , P_HOUSE_ADD_AMT
   , P_LONG_HOUSE_INTER_AMT
   , P_LONG_HOUSE_INTER_AMT_1
   , P_LONG_HOUSE_INTER_AMT_2
   , P_SMALL_CORPOR_DED_AMT
   , P_LONG_STOCK_SAVING_AMT_1
   , P_LONG_STOCK_SAVING_AMT_2
   , P_LONG_STOCK_SAVING_AMT_3
   , P_MARRY_COUNT
   , P_FUNER_COUNT
   , P_HOUSE_MOVE_COUNT
   , P_PERSON_ANNU_AMT
   , P_ANNU_BANK_AMT
   , P_RETR_ANNU_AMT
   , P_INVES_AMT
   , P_EMPL_STOCK_AMT
   , P_HOUSE_DEBT_BEN_AMT
   , V_SYSDATE
   , P_USER_ID
   , V_SYSDATE
   , P_USER_ID
   , P_HOUSE_APP_DEPOSIT_AMT
   , P_HOUSE_MONTHLY_AMT
   , P_LOW_HOUSE_ADD_AMT );   

END FOUNDATION_INSERT;


----------------------------------------------------------------------------------
-- 연말정산 기초자료 UPDATE
----------------------------------------------------------------------------------
PROCEDURE FOUNDATION_UPDATE
          ( W_YEAR_YYYY               IN HRA_FOUNDATION.YEAR_YYYY%TYPE
          , W_PERSON_ID               IN HRA_FOUNDATION.PERSON_ID%TYPE
          , W_SOB_ID                  IN HRA_FOUNDATION.SOB_ID%TYPE
          , W_ORG_ID                  IN HRA_FOUNDATION.ORG_ID%TYPE
          , P_ADD_BONUS_AMT           IN HRA_FOUNDATION.ADD_BONUS_AMT%TYPE
          , P_ADD_EDUCATION_AMT       IN HRA_FOUNDATION.ADD_EDUCATION_AMT%TYPE
          , P_ADD_ETC_AMT             IN HRA_FOUNDATION.ADD_ETC_AMT%TYPE
          , P_INCOME_OUTSIDE_AMT      IN HRA_FOUNDATION.INCOME_OUTSIDE_AMT%TYPE
          , P_NONTAX_OUTSIDE_AMT      IN HRA_FOUNDATION.NONTAX_OUTSIDE_AMT%TYPE
          , P_TAX_OUTSIDE_AMT         IN HRA_FOUNDATION.TAX_OUTSIDE_AMT%TYPE
          , P_IN_TAX_AMT              IN HRA_FOUNDATION.IN_TAX_AMT%TYPE
          , P_LOCAL_TAX_AMT           IN HRA_FOUNDATION.LOCAL_TAX_AMT%TYPE
          , P_ANNU_INSUR_AMT          IN HRA_FOUNDATION.ANNU_INSUR_AMT%TYPE
          , P_HIRE_MEDIC_INSUR_AMT    IN HRA_FOUNDATION.HIRE_MEDIC_INSUR_AMT%TYPE
          , P_HOUSE_SAVE_AMT          IN HRA_FOUNDATION.HOUSE_SAVE_AMT%TYPE
          , P_HOUSE_ADD_AMT           IN HRA_FOUNDATION.HOUSE_ADD_AMT%TYPE
          , P_LONG_HOUSE_INTER_AMT    IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT%TYPE
          , P_LONG_HOUSE_INTER_AMT_1  IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT_1%TYPE
          , P_LONG_HOUSE_INTER_AMT_2  IN HRA_FOUNDATION.LONG_HOUSE_INTER_AMT_2%TYPE
          , P_SMALL_CORPOR_DED_AMT    IN HRA_FOUNDATION.SMALL_CORPOR_DED_AMT%TYPE
          , P_LONG_STOCK_SAVING_AMT_1 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_1%TYPE
          , P_LONG_STOCK_SAVING_AMT_2 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_2%TYPE
          , P_LONG_STOCK_SAVING_AMT_3 IN HRA_FOUNDATION.LONG_STOCK_SAVING_AMT_3%TYPE
          , P_MARRY_COUNT             IN HRA_FOUNDATION.MARRY_COUNT%TYPE
          , P_FUNER_COUNT             IN HRA_FOUNDATION.FUNER_COUNT%TYPE
          , P_HOUSE_MOVE_COUNT        IN HRA_FOUNDATION.HOUSE_MOVE_COUNT%TYPE
          , P_PERSON_ANNU_AMT         IN HRA_FOUNDATION.PERSON_ANNU_AMT%TYPE
          , P_ANNU_BANK_AMT           IN HRA_FOUNDATION.ANNU_BANK_AMT%TYPE
          , P_RETR_ANNU_AMT           IN HRA_FOUNDATION.RETR_ANNU_AMT%TYPE
          , P_INVES_AMT               IN HRA_FOUNDATION.INVES_AMT%TYPE
          , P_EMPL_STOCK_AMT          IN HRA_FOUNDATION.EMPL_STOCK_AMT%TYPE
          , P_HOUSE_DEBT_BEN_AMT      IN HRA_FOUNDATION.HOUSE_DEBT_BEN_AMT%TYPE
          , P_USER_ID                 IN HRA_FOUNDATION.CREATED_BY%TYPE
          , P_HOUSE_APP_DEPOSIT_AMT   IN HRA_FOUNDATION.HOUSE_APP_DEPOSIT_AMT%TYPE
          , P_HOUSE_MONTHLY_AMT       IN HRA_FOUNDATION.HOUSE_MONTHLY_AMT%TYPE
          , P_LOW_HOUSE_ADD_AMT       IN HRA_FOUNDATION.LOW_HOUSE_ADD_AMT%TYPE 
          )
  IS
          V_SYSDATE DATE := GET_LOCAL_DATE(W_SOB_ID);
  BEGIN

   UPDATE HRA_FOUNDATION
      SET ADD_BONUS_AMT           = P_ADD_BONUS_AMT
        , ADD_EDUCATION_AMT       = P_ADD_EDUCATION_AMT
        , ADD_ETC_AMT             = P_ADD_ETC_AMT
        , INCOME_OUTSIDE_AMT      = P_INCOME_OUTSIDE_AMT
        , NONTAX_OUTSIDE_AMT      = P_NONTAX_OUTSIDE_AMT
        , TAX_OUTSIDE_AMT         = P_TAX_OUTSIDE_AMT
        , IN_TAX_AMT              = P_IN_TAX_AMT        
        , LOCAL_TAX_AMT           = P_LOCAL_TAX_AMT
        , ANNU_INSUR_AMT          = P_ANNU_INSUR_AMT
        , HIRE_MEDIC_INSUR_AMT    = P_HIRE_MEDIC_INSUR_AMT
        , HOUSE_SAVE_AMT          = P_HOUSE_SAVE_AMT
        , HOUSE_ADD_AMT           = P_HOUSE_ADD_AMT
        , LONG_HOUSE_INTER_AMT    = P_LONG_HOUSE_INTER_AMT
        , LONG_HOUSE_INTER_AMT_1  = P_LONG_HOUSE_INTER_AMT_1
        , LONG_HOUSE_INTER_AMT_2  = P_LONG_HOUSE_INTER_AMT_2
        , SMALL_CORPOR_DED_AMT    = P_SMALL_CORPOR_DED_AMT
        , LONG_STOCK_SAVING_AMT_1 = P_LONG_STOCK_SAVING_AMT_1
        , LONG_STOCK_SAVING_AMT_2 = P_LONG_STOCK_SAVING_AMT_2
        , LONG_STOCK_SAVING_AMT_3 = P_LONG_STOCK_SAVING_AMT_3
        , MARRY_COUNT             = P_MARRY_COUNT
        , FUNER_COUNT             = P_FUNER_COUNT
        , HOUSE_MOVE_COUNT        = P_HOUSE_MOVE_COUNT
        , PERSON_ANNU_AMT         = P_PERSON_ANNU_AMT
        , ANNU_BANK_AMT           = P_ANNU_BANK_AMT
        , RETR_ANNU_AMT           = P_RETR_ANNU_AMT
        , INVES_AMT               = P_INVES_AMT
        , EMPL_STOCK_AMT          = P_EMPL_STOCK_AMT
        , HOUSE_DEBT_BEN_AMT      = P_HOUSE_DEBT_BEN_AMT
        , LAST_UPDATE_DATE        = V_SYSDATE
        , LAST_UPDATED_BY         = P_USER_ID
        , HOUSE_APP_DEPOSIT_AMT   = P_HOUSE_APP_DEPOSIT_AMT
        , HOUSE_MONTHLY_AMT       = P_HOUSE_MONTHLY_AMT
        , LOW_HOUSE_ADD_AMT       = P_LOW_HOUSE_ADD_AMT
    WHERE YEAR_YYYY               = W_YEAR_YYYY
      AND PERSON_ID               = W_PERSON_ID
      AND SOB_ID                  = W_SOB_ID
      AND ORG_ID                  = W_ORG_ID;
    
    IF SQL%ROWCOUNT = 0 THEN
      FOUNDATION_INSERT
      ( W_YEAR_YYYY
      , W_PERSON_ID
      , W_SOB_ID
      , W_ORG_ID
      , P_ADD_BONUS_AMT
      , P_ADD_EDUCATION_AMT
      , P_ADD_ETC_AMT
      , P_INCOME_OUTSIDE_AMT
      , P_NONTAX_OUTSIDE_AMT
      , P_TAX_OUTSIDE_AMT
      , P_IN_TAX_AMT
      , P_LOCAL_TAX_AMT
      , P_ANNU_INSUR_AMT
      , P_HIRE_MEDIC_INSUR_AMT
      , P_HOUSE_SAVE_AMT
      , P_HOUSE_ADD_AMT
      , P_LONG_HOUSE_INTER_AMT
      , P_LONG_HOUSE_INTER_AMT_1
      , P_LONG_HOUSE_INTER_AMT_2
      , P_SMALL_CORPOR_DED_AMT
      , P_LONG_STOCK_SAVING_AMT_1
      , P_LONG_STOCK_SAVING_AMT_2
      , P_LONG_STOCK_SAVING_AMT_3
      , P_MARRY_COUNT
      , P_FUNER_COUNT
      , P_HOUSE_MOVE_COUNT
      , P_PERSON_ANNU_AMT
      , P_ANNU_BANK_AMT
      , P_RETR_ANNU_AMT
      , P_INVES_AMT
      , P_EMPL_STOCK_AMT
      , P_HOUSE_DEBT_BEN_AMT
      , P_USER_ID
      , P_HOUSE_APP_DEPOSIT_AMT
      , P_HOUSE_MONTHLY_AMT
      , P_LOW_HOUSE_ADD_AMT
      );
    END IF;
    
  END FOUNDATION_UPDATE;         


----------------------------------------------------------------------------------
-- 연말정산 기초자료 DELETE
----------------------------------------------------------------------------------
PROCEDURE FOUNDATION_DELETE
          ( W_YEAR_YYYY  HRA_FOUNDATION.YEAR_YYYY%TYPE
          , W_PERSON_ID  HRA_FOUNDATION.PERSON_ID%TYPE
          , W_SOB_ID     HRA_FOUNDATION.SOB_ID%TYPE
          , W_ORG_ID     HRA_FOUNDATION.ORG_ID%TYPE 
          )
  IS

  BEGIN

   DELETE HRA_FOUNDATION
    WHERE YEAR_YYYY = W_YEAR_YYYY
      AND PERSON_ID = W_PERSON_ID
      AND SOB_ID = W_SOB_ID
      AND ORG_ID = W_ORG_ID;   

  END FOUNDATION_DELETE;         

END HRA_FOUNDATION_G;
/
