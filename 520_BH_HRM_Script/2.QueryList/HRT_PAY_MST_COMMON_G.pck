CREATE OR REPLACE PACKAGE HRT_PAY_MST_COMMON_G
AS

-- 급여마스터 헤더 조회.
  PROCEDURE SELECT_HEADER
            ( P_CURSOR              OUT TYPES.TCURSOR
            , W_CORP_ID             IN HRT_PAY_MST_COMMON_HEADER.CORP_ID%TYPE
            , W_STD_YYYYMM          IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , W_SOB_ID              IN HRT_PAY_MST_COMMON_HEADER.SOB_ID%TYPE
            , W_ORG_ID              IN HRT_PAY_MST_COMMON_HEADER.ORG_ID%TYPE
            );

-- 급여마스터 라인조회-지급항목.
  PROCEDURE SELECT_ALLOWANCE
            ( P_CURSOR2             OUT TYPES.TCURSOR2
            , W_COMMON_HEADER_ID    IN HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            );

-- 급여마스터 라인조회-공제항목.
  PROCEDURE SELECT_DEDUCTION
            ( P_CURSOR2             OUT TYPES.TCURSOR2
            , W_COMMON_HEADER_ID    IN HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            );

-- 급여마스터 헤더 저장(INSERT/UPDATE) 제어.
  PROCEDURE SAVE_COMMON_HEADER
            ( P_COMMON_HEADER_ID    OUT HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            , P_CORP_ID             IN HRT_PAY_MST_COMMON_HEADER.CORP_ID%TYPE
            , P_STD_YYYYMM          IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , P_PRINT_TYPE          IN HRT_PAY_MST_COMMON_HEADER.PRINT_TYPE%TYPE
            , P_PAY_TYPE            IN HRT_PAY_MST_COMMON_HEADER.PAY_TYPE%TYPE
            , P_PAY_PROVIDE_YN      IN HRT_PAY_MST_COMMON_HEADER.PAY_PROVIDE_YN%TYPE
            , P_BONUS_PROVIDE_YN    IN HRT_PAY_MST_COMMON_HEADER.BONUS_PROVIDE_YN%TYPE
            , P_YEAR_PROVIDE_YN     IN HRT_PAY_MST_COMMON_HEADER.YEAR_PROVIDE_YN%TYPE
            , P_INSUR_YN            IN HRT_PAY_MST_COMMON_HEADER.INSUR_YN%TYPE
            , P_DESCRIPTION         IN HRT_PAY_MST_COMMON_HEADER.DESCRIPTION%TYPE
            , P_SOB_ID              IN HRT_PAY_MST_COMMON_HEADER.SOB_ID%TYPE
            , P_ORG_ID              IN HRT_PAY_MST_COMMON_HEADER.ORG_ID%TYPE
            , P_USER_ID             IN HRT_PAY_MST_COMMON_HEADER.CREATED_BY%TYPE
            );

-- HRT_PAY_MST_COMMON_HEADER
  PROCEDURE COMMON_HEADER_INSERT
            ( P_COMMON_HEADER_ID    OUT HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            , P_CORP_ID             IN HRT_PAY_MST_COMMON_HEADER.CORP_ID%TYPE
            , P_START_YYYYMM        IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , P_PRINT_TYPE          IN HRT_PAY_MST_COMMON_HEADER.PRINT_TYPE%TYPE
            , P_PAY_TYPE            IN HRT_PAY_MST_COMMON_HEADER.PAY_TYPE%TYPE
            , P_PAY_PROVIDE_YN      IN HRT_PAY_MST_COMMON_HEADER.PAY_PROVIDE_YN%TYPE
            , P_BONUS_PROVIDE_YN    IN HRT_PAY_MST_COMMON_HEADER.BONUS_PROVIDE_YN%TYPE
            , P_YEAR_PROVIDE_YN     IN HRT_PAY_MST_COMMON_HEADER.YEAR_PROVIDE_YN%TYPE
            , P_INSUR_YN            IN HRT_PAY_MST_COMMON_HEADER.INSUR_YN%TYPE
            , P_DESCRIPTION         IN HRT_PAY_MST_COMMON_HEADER.DESCRIPTION%TYPE
            , P_SOB_ID              IN HRT_PAY_MST_COMMON_HEADER.SOB_ID%TYPE
            , P_ORG_ID              IN HRT_PAY_MST_COMMON_HEADER.ORG_ID%TYPE
            , P_USER_ID             IN HRT_PAY_MST_COMMON_HEADER.CREATED_BY%TYPE
            );

---------------------------------------------------------------------------------------------------
-- 급여마스터 라인 저장.
  PROCEDURE SAVE_COMMON_LINE
            ( P_COMMON_LINE_ID      OUT HRT_PAY_MST_COMMON_LINE.COMMON_LINE_ID%TYPE
            , P_COMMON_HEADER_ID    IN HRT_PAY_MST_COMMON_LINE.COMMON_HEADER_ID%TYPE
            , P_ALLOWANCE_TYPE      IN HRT_PAY_MST_COMMON_LINE.ALLOWANCE_TYPE%TYPE
            , P_ALLOWANCE_ID        IN HRT_PAY_MST_COMMON_LINE.ALLOWANCE_ID%TYPE
            , P_ALLOWANCE_AMOUNT    IN HRT_PAY_MST_COMMON_LINE.ALLOWANCE_AMOUNT%TYPE
            , P_SOB_ID              IN NUMBER
            , P_ORG_ID              IN NUMBER
            , P_USER_ID             IN HRT_PAY_MST_COMMON_LINE.CREATED_BY%TYPE
            );

-- 급여마스터 라인 수정.
  PROCEDURE COMMON_LINE_UPDATE
            ( W_COMMON_LINE_ID      IN HRT_PAY_MST_COMMON_LINE.COMMON_LINE_ID%TYPE
            , P_ALLOWANCE_AMOUNT    IN HRT_PAY_MST_COMMON_LINE.ALLOWANCE_AMOUNT%TYPE
            , P_SOB_ID              IN NUMBER
            , P_USER_ID             IN HRT_PAY_MST_COMMON_LINE.CREATED_BY%TYPE
            );

-- 급여마스터 라인 삭제.
  PROCEDURE COMMON_LINE_DELETE
            ( W_COMMON_LINE_ID      IN HRT_PAY_MST_COMMON_LINE.COMMON_LINE_ID%TYPE
            );
            
---------------------------------------------------------------------------------------------------
-- 급여마스터 백업.
  PROCEDURE COMMON_HEADER_BACKUP
            ( W_COMMON_HEADER_ID    IN HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            , P_END_YYYYMM          IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , P_USER_ID             IN HRT_PAY_MST_COMMON_HEADER.CREATED_BY%TYPE
            );

-- 급여마스터 라인 복사.
  PROCEDURE COMMON_LINE_COPY
            ( P_COMMON_HEADER_ID      IN HRT_PAY_MST_COMMON_LINE.COMMON_HEADER_ID%TYPE
            , P_NEW_COMMON_HEADER_ID  IN HRT_PAY_MST_COMMON_LINE.COMMON_HEADER_ID%TYPE
            , P_SOB_ID                IN NUMBER
            , P_USER_ID               IN HRT_PAY_MST_COMMON_LINE.CREATED_BY%TYPE
            );

-- 급여마스터 헤더 최종여부 리턴.
  FUNCTION COMMON_HEADER_LAST_CHECK_F
            ( P_CORP_ID          IN HRT_PAY_MST_COMMON_HEADER.CORP_ID%TYPE
            , P_START_YYYYMM     IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , P_SOB_ID           IN HRT_PAY_MST_COMMON_HEADER.SOB_ID%TYPE
            , P_ORG_ID           IN HRT_PAY_MST_COMMON_HEADER.ORG_ID%TYPE
            ) RETURN VARCHAR2;

END HRT_PAY_MST_COMMON_G;
/
CREATE OR REPLACE PACKAGE BODY HRT_PAY_MST_COMMON_G
AS
/******************************************************************************/
/* PROJECT      : FPCB ERP
/* MODULE       : EAPP
/* PROGRAM NAME : HRT_PAY_MST_COMMON_G
/* DESCRIPTION  : 급여 마스터 관리.
/* REFERENCE BY :
/* PROGRAM HISTORY : 신규 생성
/*------------------------------------------------------------------------------
/*   DATE       IN CHARGE          DESCRIPTION
/*------------------------------------------------------------------------------
/* 20-JUN-2010  JEON HO SU          INITIALIZE
/******************************************************************************/
-- 급여마스터 헤더 조회.
  PROCEDURE SELECT_HEADER
            ( P_CURSOR              OUT TYPES.TCURSOR
            , W_CORP_ID             IN HRT_PAY_MST_COMMON_HEADER.CORP_ID%TYPE
            , W_STD_YYYYMM          IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , W_SOB_ID              IN HRT_PAY_MST_COMMON_HEADER.SOB_ID%TYPE
            , W_ORG_ID              IN HRT_PAY_MST_COMMON_HEADER.ORG_ID%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR FOR
      SELECT PMH.COMMON_HEADER_ID
           , PMH.CORP_ID
           , HRM_CORP_MASTER_G.CORP_NAME_F(PMH.CORP_ID) AS CORP_NAME
           , PMH.START_YYYYMM
           , PMH.END_YYYYMM
           , PMH.PRINT_TYPE
           , HRM_COMMON_G.CODE_NAME_F('PRINT_TYPE', PMH.PRINT_TYPE, PMH.SOB_ID, PMH.ORG_ID) AS PRINT_TYPE_NAME
           , PMH.PAY_TYPE
           , HRM_COMMON_G.CODE_NAME_F('PAY_TYPE', PMH.PAY_TYPE, PMH.SOB_ID, PMH.ORG_ID) AS PAY_TYPE_NAME
           , PMH.PAY_PROVIDE_YN
           , PMH.BONUS_PROVIDE_YN
           , PMH.YEAR_PROVIDE_YN
           , PMH.INSUR_YN
           , PMH.DESCRIPTION
           , EAPP_USER_G.USER_NAME_F(PMH.LAST_UPDATED_BY) AS LAST_UPDATE_PERSON
        FROM HRT_PAY_MST_COMMON_HEADER PMH
          , HRM_CORP_MASTER CM
       WHERE PMH.CORP_ID              = CM.CORP_ID
         AND PMH.CORP_ID              = NVL(W_CORP_ID, PMH.CORP_ID)
         AND PMH.START_YYYYMM         <= W_STD_YYYYMM
         AND (PMH.END_YYYYMM IS NULL OR PMH.END_YYYYMM >= W_STD_YYYYMM)
         AND PMH.SOB_ID               = W_SOB_ID
         AND PMH.ORG_ID               = W_ORG_ID
      ;
  END SELECT_HEADER;

-- 급여마스터 라인조회-지급항목.
  PROCEDURE SELECT_ALLOWANCE
            ( P_CURSOR2             OUT TYPES.TCURSOR2
            , W_COMMON_HEADER_ID    IN HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR2 FOR
      SELECT PML.COMMON_LINE_ID
           , PML.COMMON_HEADER_ID
           , PML.ALLOWANCE_TYPE
           , PML.ALLOWANCE_ID
           , HA.ALLOWANCE_NAME
           , PML.ALLOWANCE_AMOUNT
           , PML.ENABLED_FLAG
        FROM HRT_PAY_MST_COMMON_LINE PML
          , HRM_ALLOWANCE_V HA
      WHERE PML.ALLOWANCE_ID          = HA.ALLOWANCE_ID
        AND PML.COMMON_HEADER_ID      = W_COMMON_HEADER_ID
        AND PML.ALLOWANCE_TYPE        = 'A'
      ORDER BY HA.SORT_NUM
      ;
  END SELECT_ALLOWANCE;

-- 급여마스터 라인조회-공제항목.
  PROCEDURE SELECT_DEDUCTION
            ( P_CURSOR2             OUT TYPES.TCURSOR2
            , W_COMMON_HEADER_ID    IN HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR2 FOR
      SELECT PML.COMMON_LINE_ID
           , PML.COMMON_HEADER_ID
           , PML.ALLOWANCE_TYPE
           , PML.ALLOWANCE_ID
           , HD.DEDUCTION_NAME
           , PML.ALLOWANCE_AMOUNT
           , PML.ENABLED_FLAG
        FROM HRT_PAY_MST_COMMON_LINE PML
          , HRM_DEDUCTION_V HD
      WHERE PML.ALLOWANCE_ID          = HD.DEDUCTION_ID
        AND PML.COMMON_HEADER_ID      = W_COMMON_HEADER_ID
        AND PML.ALLOWANCE_TYPE        = 'D'
      ORDER BY HD.SORT_NUM
      ;
  END SELECT_DEDUCTION;

-- 급여마스터 헤더 저장(INSERT/UPDATE) 제어.
  PROCEDURE SAVE_COMMON_HEADER
            ( P_COMMON_HEADER_ID    OUT HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            , P_CORP_ID             IN HRT_PAY_MST_COMMON_HEADER.CORP_ID%TYPE
            , P_STD_YYYYMM          IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , P_PRINT_TYPE          IN HRT_PAY_MST_COMMON_HEADER.PRINT_TYPE%TYPE
            , P_PAY_TYPE            IN HRT_PAY_MST_COMMON_HEADER.PAY_TYPE%TYPE
            , P_PAY_PROVIDE_YN      IN HRT_PAY_MST_COMMON_HEADER.PAY_PROVIDE_YN%TYPE
            , P_BONUS_PROVIDE_YN    IN HRT_PAY_MST_COMMON_HEADER.BONUS_PROVIDE_YN%TYPE
            , P_YEAR_PROVIDE_YN     IN HRT_PAY_MST_COMMON_HEADER.YEAR_PROVIDE_YN%TYPE
            , P_INSUR_YN            IN HRT_PAY_MST_COMMON_HEADER.INSUR_YN%TYPE
            , P_DESCRIPTION         IN HRT_PAY_MST_COMMON_HEADER.DESCRIPTION%TYPE
            , P_SOB_ID              IN HRT_PAY_MST_COMMON_HEADER.SOB_ID%TYPE
            , P_ORG_ID              IN HRT_PAY_MST_COMMON_HEADER.ORG_ID%TYPE
            , P_USER_ID             IN HRT_PAY_MST_COMMON_HEADER.CREATED_BY%TYPE
            )
  AS
    V_COMMON_HEADER_ID  HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE;
    V_START_YYYYMM      HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE;
    V_END_YYYYMM        HRT_PAY_MST_COMMON_HEADER.END_YYYYMM%TYPE;
    V_LAST_YN           HRT_PAY_MST_COMMON_HEADER.LAST_YN%TYPE;
  BEGIN
    IF COMMON_HEADER_LAST_CHECK_F
          ( P_CORP_ID
          , P_STD_YYYYMM
          , P_SOB_ID
          , P_ORG_ID) = 'N' THEN
      RAISE_APPLICATION_ERROR(-20001, EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10293', NULL));
      RETURN;
    END IF;
    BEGIN
      SELECT PMH.COMMON_HEADER_ID, PMH.START_YYYYMM, PMH.END_YYYYMM, PMH.LAST_YN
        INTO V_COMMON_HEADER_ID, V_START_YYYYMM, V_END_YYYYMM, V_LAST_YN
        FROM HRT_PAY_MST_COMMON_HEADER PMH
      WHERE PMH.CORP_ID           = P_CORP_ID
        AND PMH.START_YYYYMM      <= P_STD_YYYYMM
        AND PMH.END_YYYYMM        >= P_STD_YYYYMM
        AND PMH.SOB_ID            = P_SOB_ID
        AND PMH.ORG_ID            = P_ORG_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      V_COMMON_HEADER_ID := -1;
      V_LAST_YN := 'Y';
      V_START_YYYYMM := NULL;
      V_END_YYYYMM := NULL;
    END;
    IF V_LAST_YN = 'N' THEN
      RAISE_APPLICATION_ERROR(-20001, EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10293', NULL));
      RETURN;
    END IF;
/*raise_application_error(-20001, 'header id ' || V_PAY_HEADER_ID || ', start ' || V_START_YYYYMM || ', END ' || V_END_YYYYMM);*/
    IF V_START_YYYYMM IS NULL OR V_START_YYYYMM < P_STD_YYYYMM THEN
/*Raise_application_error(-20001, 'header id ' || V_PAY_HEADER_ID || ', start ' || V_START_YYYYMM || ', END ' || V_END_YYYYMM);*/
      -- 신규 INSERT.
      COMMON_HEADER_INSERT
        ( P_COMMON_HEADER_ID
        , P_CORP_ID
        , P_STD_YYYYMM
        , P_PRINT_TYPE
        , P_PAY_TYPE
        , P_PAY_PROVIDE_YN
        , P_BONUS_PROVIDE_YN
        , P_YEAR_PROVIDE_YN
        , P_INSUR_YN
        , P_DESCRIPTION
        , P_SOB_ID
        , P_ORG_ID
        , P_USER_ID
        );
      IF V_START_YYYYMM < P_STD_YYYYMM THEN
        -- 헤더 백업.
        COMMON_HEADER_BACKUP
          ( W_COMMON_HEADER_ID => V_COMMON_HEADER_ID
          , P_END_YYYYMM => TO_CHAR(ADD_MONTHS(TO_DATE(P_STD_YYYYMM, 'YYYY-MM'), -1), 'YYYY-MM')
          , P_USER_ID => P_USER_ID
          );
        -- 라인 COPY.
        COMMON_LINE_COPY
          ( V_COMMON_HEADER_ID
          , P_COMMON_HEADER_ID
          , P_SOB_ID
          , P_USER_ID
          );
      END IF;
    ELSIF V_START_YYYYMM = P_STD_YYYYMM THEN
    -- 수정.
      UPDATE HRT_PAY_MST_COMMON_HEADER
        SET PRINT_TYPE       = P_PRINT_TYPE
          , PAY_TYPE         = P_PAY_TYPE
          , PAY_PROVIDE_YN   = NVL(P_PAY_PROVIDE_YN, 'N')
          , BONUS_PROVIDE_YN = NVL(P_BONUS_PROVIDE_YN, 'N')
          , YEAR_PROVIDE_YN  = NVL(P_YEAR_PROVIDE_YN, 'N')
          , INSUR_YN         = NVL(P_INSUR_YN, 'N')
          , DESCRIPTION      = P_DESCRIPTION
          , LAST_UPDATE_DATE = GET_LOCAL_DATE(SOB_ID)
          , LAST_UPDATED_BY  = P_USER_ID
      WHERE COMMON_HEADER_ID = V_COMMON_HEADER_ID
      ;
      P_COMMON_HEADER_ID := V_COMMON_HEADER_ID;
    END IF;
  END SAVE_COMMON_HEADER;

-- HRT_PAY_MST_COMMON_HEADER
  PROCEDURE COMMON_HEADER_INSERT
            ( P_COMMON_HEADER_ID    OUT HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            , P_CORP_ID             IN HRT_PAY_MST_COMMON_HEADER.CORP_ID%TYPE
            , P_START_YYYYMM        IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , P_PRINT_TYPE          IN HRT_PAY_MST_COMMON_HEADER.PRINT_TYPE%TYPE
            , P_PAY_TYPE            IN HRT_PAY_MST_COMMON_HEADER.PAY_TYPE%TYPE
            , P_PAY_PROVIDE_YN      IN HRT_PAY_MST_COMMON_HEADER.PAY_PROVIDE_YN%TYPE
            , P_BONUS_PROVIDE_YN    IN HRT_PAY_MST_COMMON_HEADER.BONUS_PROVIDE_YN%TYPE
            , P_YEAR_PROVIDE_YN     IN HRT_PAY_MST_COMMON_HEADER.YEAR_PROVIDE_YN%TYPE
            , P_INSUR_YN            IN HRT_PAY_MST_COMMON_HEADER.INSUR_YN%TYPE
            , P_DESCRIPTION         IN HRT_PAY_MST_COMMON_HEADER.DESCRIPTION%TYPE
            , P_SOB_ID              IN HRT_PAY_MST_COMMON_HEADER.SOB_ID%TYPE
            , P_ORG_ID              IN HRT_PAY_MST_COMMON_HEADER.ORG_ID%TYPE
            , P_USER_ID             IN HRT_PAY_MST_COMMON_HEADER.CREATED_BY%TYPE
            )
  AS
    V_SYSDATE                    DATE := GET_LOCAL_DATE(P_SOB_ID);
  BEGIN
    SELECT HRT_PAY_MST_COMMON_HEADER_S1.NEXTVAL
      INTO P_COMMON_HEADER_ID
      FROM DUAL;
    INSERT INTO HRT_PAY_MST_COMMON_HEADER
    ( COMMON_HEADER_ID
    , CORP_ID
    , START_YYYYMM
    , PRINT_TYPE
    , PAY_TYPE
    , PAY_PROVIDE_YN
    , BONUS_PROVIDE_YN
    , YEAR_PROVIDE_YN
    , INSUR_YN
    , DESCRIPTION
    , SOB_ID
    , ORG_ID
    , CREATION_DATE
    , CREATED_BY
    , LAST_UPDATE_DATE
    , LAST_UPDATED_BY
    ) VALUES
    ( P_COMMON_HEADER_ID
    , P_CORP_ID
    , P_START_YYYYMM  -- 적용 시작일자.
    , P_PRINT_TYPE
    , P_PAY_TYPE
    , NVL(P_PAY_PROVIDE_YN, 'N')
    , NVL(P_BONUS_PROVIDE_YN, 'N')
    , NVL(P_YEAR_PROVIDE_YN, 'N')
    , NVL(P_INSUR_YN, 'N')
    , P_DESCRIPTION
    , P_SOB_ID
    , P_ORG_ID
    , V_SYSDATE
    , P_USER_ID
    , V_SYSDATE
    , P_USER_ID
    );
  END COMMON_HEADER_INSERT;

---------------------------------------------------------------------------------------------------
-- 급여마스터 라인 저장.
  PROCEDURE SAVE_COMMON_LINE
            ( P_COMMON_LINE_ID      OUT HRT_PAY_MST_COMMON_LINE.COMMON_LINE_ID%TYPE
            , P_COMMON_HEADER_ID    IN HRT_PAY_MST_COMMON_LINE.COMMON_HEADER_ID%TYPE
            , P_ALLOWANCE_TYPE      IN HRT_PAY_MST_COMMON_LINE.ALLOWANCE_TYPE%TYPE
            , P_ALLOWANCE_ID        IN HRT_PAY_MST_COMMON_LINE.ALLOWANCE_ID%TYPE
            , P_ALLOWANCE_AMOUNT    IN HRT_PAY_MST_COMMON_LINE.ALLOWANCE_AMOUNT%TYPE
            , P_SOB_ID              IN NUMBER
            , P_ORG_ID              IN NUMBER
            , P_USER_ID             IN HRT_PAY_MST_COMMON_LINE.CREATED_BY%TYPE
            )
  AS
    V_SYSDATE           DATE := GET_LOCAL_DATE(P_SOB_ID);
    V_LAST_YN           VARCHAR2(1) := 'N';
    V_PERSON_ID         NUMBER;
    V_CORP_ID           NUMBER;
    V_STD_YYYYMM        VARCHAR2(10);
  BEGIN
    --RAISE_APPLICATION_ERROR(-20001, P_PAY_HEADER_ID);
    BEGIN
      SELECT PMH.CORP_ID
           , PMH.START_YYYYMM
        INTO V_CORP_ID
           , V_STD_YYYYMM
        FROM HRT_PAY_MST_COMMON_HEADER PMH
      WHERE PMH.COMMON_HEADER_ID  = P_COMMON_HEADER_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      V_LAST_YN := 'N';
    END;
    V_LAST_YN := COMMON_HEADER_LAST_CHECK_F
                  ( V_CORP_ID
                  , V_STD_YYYYMM
                  , P_SOB_ID
                  , P_ORG_ID);
    IF V_LAST_YN = 'N' THEN
      RAISE_APPLICATION_ERROR(-20001, EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10293', NULL));
      RETURN;
    END IF;

    P_COMMON_LINE_ID := 0;
    BEGIN
      SELECT PML.COMMON_LINE_ID
        INTO P_COMMON_LINE_ID
        FROM HRT_PAY_MST_COMMON_LINE PML
       WHERE PML.COMMON_HEADER_ID = P_COMMON_HEADER_ID
         AND PML.ALLOWANCE_TYPE   = P_ALLOWANCE_TYPE
         AND PML.ALLOWANCE_ID     = P_ALLOWANCE_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      P_COMMON_LINE_ID := 0;
    END;

    IF P_COMMON_LINE_ID = 0 THEN
    -- 신규 생성.
      BEGIN
        SELECT HRT_PAY_MST_COMMON_LINE_S1.NEXTVAL
        INTO P_COMMON_LINE_ID
        FROM DUAL;
      EXCEPTION WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(ERRNUMS.Invalid_Sequence_Code, ERRNUMS.Invalid_Sequence_Desc);
        RETURN;
      END;

      INSERT INTO HRT_PAY_MST_COMMON_LINE
      ( COMMON_LINE_ID
      , COMMON_HEADER_ID
      , ALLOWANCE_TYPE
      , ALLOWANCE_ID
      , ALLOWANCE_AMOUNT
      , CREATION_DATE
      , CREATED_BY
      , LAST_UPDATE_DATE
      , LAST_UPDATED_BY
      ) VALUES
      ( P_COMMON_LINE_ID
      , P_COMMON_HEADER_ID
      , P_ALLOWANCE_TYPE
      , P_ALLOWANCE_ID
      , P_ALLOWANCE_AMOUNT
      , V_SYSDATE
      , P_USER_ID
      , V_SYSDATE
      , P_USER_ID
      );
    ELSE
    -- 기존 자료 UPDATE.
      COMMON_LINE_UPDATE 
        ( W_COMMON_LINE_ID => P_COMMON_LINE_ID
        , P_ALLOWANCE_AMOUNT => P_ALLOWANCE_AMOUNT
        , P_SOB_ID => P_SOB_ID
        , P_USER_ID => P_USER_ID
        );
    END IF;
    /*RAISE_APPLICATION_ERROR(ERRNUMS.Exist_Data_Code, ERRNUMS.Exist_Data_Desc);*/
  END SAVE_COMMON_LINE;

-- 급여마스터 라인 수정.
  PROCEDURE COMMON_LINE_UPDATE
            ( W_COMMON_LINE_ID      IN HRT_PAY_MST_COMMON_LINE.COMMON_LINE_ID%TYPE
            , P_ALLOWANCE_AMOUNT    IN HRT_PAY_MST_COMMON_LINE.ALLOWANCE_AMOUNT%TYPE
            , P_SOB_ID              IN NUMBER
            , P_USER_ID             IN HRT_PAY_MST_COMMON_LINE.CREATED_BY%TYPE
            )
  AS
  BEGIN
--    RAISE_APPLICATION_ERROR(-20001, 'UPDATE');
    UPDATE HRT_PAY_MST_COMMON_LINE
      SET ALLOWANCE_AMOUNT = P_ALLOWANCE_AMOUNT
        , LAST_UPDATE_DATE = GET_LOCAL_DATE(P_SOB_ID)
        , LAST_UPDATED_BY  = P_USER_ID
    WHERE COMMON_LINE_ID   = W_COMMON_LINE_ID
    ;
  END COMMON_LINE_UPDATE;

-- 급여마스터 라인 삭제.
  PROCEDURE COMMON_LINE_DELETE
            ( W_COMMON_LINE_ID      IN HRT_PAY_MST_COMMON_LINE.COMMON_LINE_ID%TYPE
            )
  AS
    V_LAST_YN           VARCHAR2(1) := 'N';
    V_CORP_ID           NUMBER;
    V_STD_YYYYMM        VARCHAR2(10);
    V_SOB_ID            NUMBER;
    V_ORG_ID            NUMBER;
  BEGIN
    --RAISE_APPLICATION_ERROR(-20001, P_PAY_HEADER_ID);
    BEGIN
      SELECT PMH.CORP_ID
           , PMH.START_YYYYMM
           , PMH.SOB_ID
           , PMH.ORG_ID
        INTO V_CORP_ID
           , V_STD_YYYYMM
           , V_SOB_ID
           , V_ORG_ID
        FROM HRT_PAY_MST_COMMON_HEADER PMH
      WHERE EXISTS
              ( SELECT 'X'
                  FROM HRT_PAY_MST_COMMON_LINE PML
                WHERE PML.COMMON_HEADER_ID  = PMH.COMMON_HEADER_ID
                  AND PML.COMMON_LINE_ID    = W_COMMON_LINE_ID
              )
      ;
    EXCEPTION WHEN OTHERS THEN
      V_LAST_YN := 'N';
    END;
    V_LAST_YN := COMMON_HEADER_LAST_CHECK_F
                  ( V_CORP_ID
                  , V_STD_YYYYMM
                  , V_SOB_ID
                  , V_ORG_ID);
    IF V_LAST_YN = 'N' THEN
      RAISE_APPLICATION_ERROR(-20001, EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10293', NULL));
      RETURN;
    END IF;
    
    DELETE FROM HRT_PAY_MST_COMMON_LINE
    WHERE COMMON_LINE_ID   = W_COMMON_LINE_ID
    ;
  END COMMON_LINE_DELETE;
  
---------------------------------------------------------------------------------------------------
-- 급여마스터 백업.
  PROCEDURE COMMON_HEADER_BACKUP
            ( W_COMMON_HEADER_ID    IN HRT_PAY_MST_COMMON_HEADER.COMMON_HEADER_ID%TYPE
            , P_END_YYYYMM          IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , P_USER_ID             IN HRT_PAY_MST_COMMON_HEADER.CREATED_BY%TYPE
            )
  AS
  BEGIN
    -- 기존 자료 존재시 BACKUP 후 INSERT.
    BEGIN
      UPDATE HRT_PAY_MST_COMMON_HEADER PMH
        SET PMH.END_YYYYMM        = P_END_YYYYMM
          , PMH.LAST_YN           = 'N'
          , PMH.LAST_UPDATE_DATE  = GET_LOCAL_DATE(PMH.SOB_ID)
          , PMH.LAST_UPDATED_BY   = P_USER_ID
        WHERE PMH.COMMON_HEADER_ID  = W_COMMON_HEADER_ID
       ;
    END;
  END COMMON_HEADER_BACKUP;

-- 급여마스터 라인 복사.
  PROCEDURE COMMON_LINE_COPY
            ( P_COMMON_HEADER_ID      IN HRT_PAY_MST_COMMON_LINE.COMMON_HEADER_ID%TYPE
            , P_NEW_COMMON_HEADER_ID  IN HRT_PAY_MST_COMMON_LINE.COMMON_HEADER_ID%TYPE
            , P_SOB_ID                IN NUMBER
            , P_USER_ID               IN HRT_PAY_MST_COMMON_LINE.CREATED_BY%TYPE
            )
  AS
    V_SYSDATE                     DATE := GET_LOCAL_DATE(P_SOB_ID);
  BEGIN
    INSERT INTO HRT_PAY_MST_COMMON_LINE
    ( COMMON_LINE_ID
    , COMMON_HEADER_ID
    , ALLOWANCE_TYPE
    , ALLOWANCE_ID
    , ALLOWANCE_AMOUNT
    , DESCRIPTION
    , CREATION_DATE
    , CREATED_BY
    , LAST_UPDATE_DATE
    , LAST_UPDATED_BY)
    ( SELECT HRT_PAY_MST_COMMON_LINE_S1.NEXTVAL AS COMMON_LINE_ID
           , P_NEW_COMMON_HEADER_ID
           , PML.ALLOWANCE_TYPE
           , PML.ALLOWANCE_ID
           , PML.ALLOWANCE_AMOUNT
           , PML.DESCRIPTION
           , V_SYSDATE
           , P_USER_ID
           , V_SYSDATE
           , P_USER_ID
        FROM HRT_PAY_MST_COMMON_LINE PML
       WHERE PML.COMMON_HEADER_ID     = P_COMMON_HEADER_ID
    );
  END COMMON_LINE_COPY;

-- 급여마스터 헤더 최종여부 리턴.
  FUNCTION COMMON_HEADER_LAST_CHECK_F
            ( P_CORP_ID          IN HRT_PAY_MST_COMMON_HEADER.CORP_ID%TYPE
            , P_START_YYYYMM     IN HRT_PAY_MST_COMMON_HEADER.START_YYYYMM%TYPE
            , P_SOB_ID           IN HRT_PAY_MST_COMMON_HEADER.SOB_ID%TYPE
            , P_ORG_ID           IN HRT_PAY_MST_COMMON_HEADER.ORG_ID%TYPE
            ) RETURN VARCHAR2
  AS
    V_LAST_YN           HRT_PAY_MST_COMMON_HEADER.LAST_YN%TYPE := 'N';
  BEGIN
    BEGIN
      SELECT PMH.LAST_YN
        INTO V_LAST_YN
        FROM HRT_PAY_MST_COMMON_HEADER PMH
      WHERE PMH.CORP_ID           = P_CORP_ID
        AND PMH.START_YYYYMM      <= P_START_YYYYMM
        AND PMH.END_YYYYMM        >= P_START_YYYYMM
        AND PMH.SOB_ID            = P_SOB_ID
        AND PMH.ORG_ID            = P_ORG_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      V_LAST_YN := '-';
    END;
    IF V_LAST_YN = '-' THEN
      BEGIN
        SELECT 'N' AS LAST_YN    -- 입력값보다 큰 일자 존재 : 무조건 최종자료 아님.
          INTO V_LAST_YN
          FROM HRT_PAY_MST_COMMON_HEADER PMH
        WHERE PMH.CORP_ID           = P_CORP_ID
          AND PMH.START_YYYYMM      > P_START_YYYYMM
          AND PMH.SOB_ID            = P_SOB_ID
          AND PMH.ORG_ID            = P_ORG_ID
          AND ROWNUM                <= 1
        ;
      EXCEPTION WHEN OTHERS THEN
        V_LAST_YN := 'Y';
      END;
    END IF;
    RETURN V_LAST_YN;
  END COMMON_HEADER_LAST_CHECK_F;

END HRT_PAY_MST_COMMON_G;
/
