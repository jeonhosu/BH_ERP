/*
-- 급여마스터 최초 등록시 적용 -- 
SELECT PM.PERSON_NUM
     , PM.NAME
     , PM.START_YYYYMM
     , PM.END_YYYYMM
     , PM.PRINT_TYPE
     , PM.BANK_CODE
     , PM.BANK_NAME
     , PM.BANK_ACCOUNTS
     , PM.PAY_TYPE
     , PM.PAY_TYPE_NAME
     , PM.CORP_CAR_YN
     , PM.PAY_PROVIDE_YN
     , PM.BONUS_PROVIDE_YN
     , PM.HIRE_INSUR_YN
     , PM.DED_FAMILY_COUNT
     , PM.SOB_ID
     , PM.ORG_ID
     , PM.USER_ID
     , PM.DED_CHILD_COUNT
     , PM.YEAR_PROVIDE_YN
     , PM.LAST_YN
     , PM.A01
     , PM.A05
     , PM.A16
     , PM.A21
     , PM.A26
  FROM HRP_PAY_MASTER_TEMP PM
FOR UPDATE
;


-- 급여마스터 헤더 백업
CREATE TABLE HRP_PAY_MASTER_HEADER_20140131
AS 
SELECT *
  FROM HRP_PAY_MASTER_HEADER
;  

-- 급여마스터 라인 백업
CREATE TABLE HRP_PAY_MASTER_LINE_20140131
AS 
SELECT *
  FROM HRP_PAY_MASTER_LINE
;  

DELETE FROM HRP_PAY_MASTER_TEMP MT
 WHERE MT.START_YYYYMM       = '2014-01'
;


-- 1. 급여 변경 내역 임시테이블 UPLOAD.
SELECT MT.START_YYYYMM 
     , MT.PERSON_NUM 
     , MT.NAME 
     , MT.A_TOTAL 
     , MT.A01 
     , MT.A02 
     , MT.A03 
     , MT.A04 
     , MT.A05 
     , MT.A06 
     , MT.A07 
     , MT.A08 
     , MT.A09 
     , MT.A10 
     , MT.A11 
     , MT.A12 
     , MT.A13 
     , MT.A14 
     , MT.A15 
     , MT.A16 
     , MT.A17 
     , MT.A18 
     , MT.A19 
     , MT.A20 
     , MT.A21 
     , MT.A22 
     , MT.A23 
     , MT.A24 
     , MT.A25 
     , MT.A26 
     , MT.A27 
     , MT.A28 
     , MT.A29 
     , MT.A30 
     , MT.A31 
     , MT.A32 
     , MT.A33 
     , MT.A34 
     , MT.A35   
  FROM HRP_PAY_MASTER_TEMP MT
 WHERE MT.START_YYYYMM       = '2014-01'
   AND MT.PERSON_NUM         = 'B11062'
FOR UPDATE 
 ;

-- 1.1 금액 검증
SELECT MT.START_YYYYMM 
     , SUM(MT.A_TOTAL) AS SUMMARY
  FROM HRP_PAY_MASTER_TEMP MT
     , HRM_PERSON_MASTER    PM
 WHERE MT.PERSON_NUM        = PM.PERSON_NUM
   AND MT.START_YYYYMM      = '2014-01'
   AND PM.SOB_ID            = 10
   AND PM.ORG_ID            = 101
GROUP BY MT.START_YYYYMM 
;

-- 2. 급여마스터 UPDATE OR INSERT 
SELECT PM.PERSON_ID
     , PM.PERSON_NUM
     , PM.NAME
     , MT.PERSON_NUM  AS T_PERSON_NUM
  FROM HRP_PAY_MASTER_TEMP MT
     , HRM_PERSON_MASTER    PM
 WHERE MT.PERSON_NUM      = PM.PERSON_NUM
   AND MT.START_YYYYMM    = '2014-01'
   AND PM.SOB_ID          = 10
   AND PM.ORG_ID          = 101
;     

-- 2.1 중복자 검증 
SELECT PM.PERSON_ID
     , PM.PERSON_NUM
     , PM.NAME
     , COUNT(MT.PERSON_NUM) AS PERSON_COUNT
  FROM HRP_PAY_MASTER_TEMP MT
     , HRM_PERSON_MASTER    PM
 WHERE MT.PERSON_NUM      = PM.PERSON_NUM
   AND MT.START_YYYYMM    = '2014-01'
   AND PM.SOB_ID          = 10
   AND PM.ORG_ID          = 101
HAVING COUNT(MT.PERSON_NUM) > 1
GROUP BY PM.PERSON_ID
       , PM.PERSON_NUM
       , PM.NAME 
;                     

-- 2. 사원번호 검증 
SELECT MT.PERSON_NUM
     , MT.NAME
  FROM HRP_PAY_MASTER_TEMP MT
 WHERE MT.START_YYYYMM    = '2014-01'
   AND NOT EXISTS
         ( SELECT 'X'
             FROM HRM_PERSON_MASTER PM
            WHERE PM.PERSON_NUM    = MT.PERSON_NUM
              AND PM.SOB_ID        = 10
              AND PM.ORG_ID        = 101
         ) 
;     

-- 2. 인사마스터 존재, 급여마스터 미존재 사원번호 검증 
SELECT PM.PERSON_NUM
     , PM.NAME
     , PM.JOIN_DATE
     , PM.RETIRE_DATE 
  FROM HRM_PERSON_MASTER PM
 WHERE PM.SOB_ID        = 10
   AND PM.ORG_ID        = 101
   AND PM.CORP_ID       = 65
   AND PM.CORP_TYPE     = 1
   AND PM.JOIN_DATE     <= '2014-01-31'
   AND (PM.RETIRE_DATE   >= '2014-01-01' OR PM.RETIRE_DATE IS NULL)
   AND NOT EXISTS
         ( SELECT 'X'
             FROM HRP_PAY_MASTER_TEMP MT
            WHERE MT.PERSON_NUM  = PM.PERSON_NUM                
              AND MT.START_YYYYMM    = '2014-01'
         ) 
;   

-- 급여마스터 존재 여부 체크 --
SELECT PM.PERSON_ID
     , PM.PERSON_NUM
     , PM.NAME
     , SUM(MT.A_TOTAL) AS AMOUNT
  FROM HRP_PAY_MASTER_TEMP MT
     , HRM_PERSON_MASTER PM
 WHERE MT.PERSON_NUM    = PM.PERSON_NUM
   AND MT.START_YYYYMM  = '2014-01'
   AND PM.SOB_ID        = 10
   AND PM.ORG_ID        = 101
   AND NOT EXISTS 
         (SELECT 'X'
            FROM HRP_PAY_MASTER_HEADER PMH
           WHERE PMH.PERSON_ID        = PM.PERSON_ID
             AND PMH.START_YYYYMM     <= MT.START_YYYYMM
             AND PMH.END_YYYYMM       >= MT.START_YYYYMM
         )
GROUP BY PM.PERSON_ID
       , PM.PERSON_NUM
       , PM.NAME   
;       
*/


DECLARE
  V_PAY_HEADER_ID                 NUMBER;
  V_PAY_LINE_ID                   NUMBER;
  V_SYSDATE                       DATE := TO_DATE('2014-02-05 10:10:10', 'YYYY-MM-DD HH24:MI:SS');
  V_USER_ID                       NUMBER := -10;
  
  V_PRE_END_YYYYMM                VARCHAR2(7) := '2013-12';
  V_START_YYYYMM                  VARCHAR2(7) := '2014-01';
  
  V_SOB_ID                        NUMBER := 10;
  V_ORG_ID                        NUMBER := 101;  
  V_ALLOWANCE_ID                  NUMBER;
BEGIN
  
  FOR C1 IN ( SELECT PM.CORP_ID
                   , PM.PERSON_ID
                   , PM.PERSON_NUM
                   , PM.NAME
                   
                   /*, PMT.END_YYYYMM
                   , PMT.PRINT_TYPE
                   , HRM_COMMON_G.GET_ID_F('PRINT_TYPE', 'CODE = ''' || PMT.PRINT_TYPE || '''', PM.SOB_ID, PM.ORG_ID) AS PRINT_TYPE_CHECK
                   , PMT.BANK_CODE
                   , HRM_COMMON_G.GET_ID_F('BANK', 'CODE = ''' || PMT.BANK_CODE || '''', PM.SOB_ID, PM.ORG_ID) AS BANK_ID
                   , PMT.BANK_NAME
                   , PMT.BANK_ACCOUNTS
                   , PMT.PAY_TYPE
                   , HRM_COMMON_G.GET_ID_F('PAY_TYPE', 'CODE = ''' || PMT.PAY_TYPE || '''', PM.SOB_ID, PM.ORG_ID) AS PAY_TYPE_CHECK
                   , PMT.PAY_TYPE_NAME
                   , PM.PAY_GRADE_ID
                   , PMT.GRADE_STEP
                   , PMT.CORP_CAR_YN
                   , PMT.PAY_PROVIDE_YN
                   , PMT.BONUS_PROVIDE_YN
                   , PMT.HIRE_INSUR_YN
                   , PMT.DED_FAMILY_COUNT                   
                   , PMT.USER_ID
                   , PMT.DED_CHILD_COUNT
                   , PMT.YEAR_PROVIDE_YN
                   , PMT.LAST_YN*/
                   , PM.JOIN_DATE
                   , PM.RETIRE_DATE
                   , PM.SOB_ID
                   , PM.ORG_ID
                   
                   , P1.PAY_HEADER_ID 
                   , P1.START_YYYYMM AS PAY_MASTER_START_YYYYMM
                   , P1.END_YYYYMM AS PAY_MASTER_END_YYYYMM
                   , P1.PRINT_TYPE 
                   , P1.BANK_ID 
                   , P1.BANK_ACCOUNTS 
                   , P1.PAY_TYPE 
                   , P1.PAY_GRADE_ID 
                   , P1.GRADE_STEP 
                   , P1.CORP_CAR_YN 
                   , P1.PAY_PROVIDE_YN 
                   , P1.BONUS_PROVIDE_YN 
                   , P1.YEAR_PROVIDE_YN
                   , P1.HIRE_INSUR_YN 
                   , P1.DED_FAMILY_COUNT 
                   , P1.DED_CHILD_COUNT 
                   , P1.DESCRIPTION 
                   
                   , V_USER_ID AS USER_ID 
                   , PMT.START_YYYYMM        
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A01''', PM.SOB_ID, PM.ORG_ID) AS A01_ID
                   , CEIL(PMT.A01) AS A01
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A02''', PM.SOB_ID, PM.ORG_ID) AS A02_ID
                   , CEIL(PMT.A02) AS A02
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A03''', PM.SOB_ID, PM.ORG_ID) AS A03_ID
                   , CEIL(PMT.A03) AS A03
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A04''', PM.SOB_ID, PM.ORG_ID) AS A04_ID
                   , CEIL(PMT.A04) AS A04
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A05''', PM.SOB_ID, PM.ORG_ID) AS A05_ID
                   , CEIL(PMT.A05) AS A05
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A06''', PM.SOB_ID, PM.ORG_ID) AS A06_ID
                   , CEIL(PMT.A06) AS A06
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A07''', PM.SOB_ID, PM.ORG_ID) AS A07_ID
                   , CEIL(PMT.A07) AS A07
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A08''', PM.SOB_ID, PM.ORG_ID) AS A08_ID
                   , CEIL(PMT.A08) AS A08
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A09''', PM.SOB_ID, PM.ORG_ID) AS A09_ID
                   , CEIL(PMT.A09) AS A09
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A10''', PM.SOB_ID, PM.ORG_ID) AS A10_ID
                   , CEIL(PMT.A10) AS A10
                   
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A11''', PM.SOB_ID, PM.ORG_ID) AS A11_ID
                   , CEIL(PMT.A11) AS A11
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A12''', PM.SOB_ID, PM.ORG_ID) AS A12_ID
                   , CEIL(PMT.A12) AS A12
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A13''', PM.SOB_ID, PM.ORG_ID) AS A13_ID
                   , CEIL(PMT.A13) AS A13
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A14''', PM.SOB_ID, PM.ORG_ID) AS A14_ID
                   , CEIL(PMT.A14) AS A14
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A15''', PM.SOB_ID, PM.ORG_ID) AS A15_ID
                   , CEIL(PMT.A15) AS A15
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A16''', PM.SOB_ID, PM.ORG_ID) AS A16_ID
                   , CEIL(PMT.A16) AS A16
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A17''', PM.SOB_ID, PM.ORG_ID) AS A17_ID
                   , CEIL(PMT.A17) AS A17
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A18''', PM.SOB_ID, PM.ORG_ID) AS A18_ID
                   , CEIL(PMT.A18) AS A18
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A19''', PM.SOB_ID, PM.ORG_ID) AS A19_ID
                   , CEIL(PMT.A19) AS A19
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A20''', PM.SOB_ID, PM.ORG_ID) AS A20_ID
                   , CEIL(PMT.A20) AS A20
                   
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A21''', PM.SOB_ID, PM.ORG_ID) AS A21_ID
                   , CEIL(PMT.A21) AS A21
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A22''', PM.SOB_ID, PM.ORG_ID) AS A22_ID
                   , CEIL(PMT.A22) AS A22
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A23''', PM.SOB_ID, PM.ORG_ID) AS A23_ID
                   , CEIL(PMT.A23) AS A23
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A24''', PM.SOB_ID, PM.ORG_ID) AS A24_ID
                   , CEIL(PMT.A24) AS A24
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A25''', PM.SOB_ID, PM.ORG_ID) AS A25_ID
                   , CEIL(PMT.A25) AS A25
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A26''', PM.SOB_ID, PM.ORG_ID) AS A26_ID
                   , CEIL(PMT.A26) AS A26
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A27''', PM.SOB_ID, PM.ORG_ID) AS A27_ID
                   , CEIL(PMT.A27) AS A27
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A28''', PM.SOB_ID, PM.ORG_ID) AS A28_ID
                   , CEIL(PMT.A28) AS A28
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A29''', PM.SOB_ID, PM.ORG_ID) AS A29_ID
                   , CEIL(PMT.A29) AS A29
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A30''', PM.SOB_ID, PM.ORG_ID) AS A30_ID
                   , CEIL(PMT.A30) AS A30
                   
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A31''', PM.SOB_ID, PM.ORG_ID) AS A31_ID
                   , CEIL(PMT.A31) AS A31
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A32''', PM.SOB_ID, PM.ORG_ID) AS A32_ID
                   , CEIL(PMT.A32) AS A32
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A33''', PM.SOB_ID, PM.ORG_ID) AS A33_ID
                   , CEIL(PMT.A33) AS A33
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A34''', PM.SOB_ID, PM.ORG_ID) AS A34_ID
                   , CEIL(PMT.A34) AS A34
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A35''', PM.SOB_ID, PM.ORG_ID) AS A35_ID
                   , CEIL(PMT.A35) AS A35
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A36''', PM.SOB_ID, PM.ORG_ID) AS A36_ID
                   , CEIL(PMT.A36) AS A36
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A37''', PM.SOB_ID, PM.ORG_ID) AS A37_ID
                   , CEIL(PMT.A37) AS A37
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A38''', PM.SOB_ID, PM.ORG_ID) AS A38_ID
                   , CEIL(PMT.A38) AS A38
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A39''', PM.SOB_ID, PM.ORG_ID) AS A39_ID
                   , CEIL(PMT.A39) AS A39
                   , HRM_COMMON_G.GET_ID_F('ALLOWANCE', 'CODE = ''A40''', PM.SOB_ID, PM.ORG_ID) AS A40_ID
                   , CEIL(PMT.A40) AS A40
                FROM HRM_PERSON_MASTER  PM
                  , HRP_PAY_MASTER_TEMP PMT
                  , ( SELECT MH.PAY_HEADER_ID 
                           , MH.PERSON_ID 
                           , MH.CORP_ID 
                           , MH.START_YYYYMM 
                           , MH.END_YYYYMM 
                           , MH.PRINT_TYPE 
                           , MH.BANK_ID 
                           , MH.BANK_ACCOUNTS 
                           , MH.PAY_TYPE 
                           , MH.PAY_GRADE_ID 
                           , MH.GRADE_STEP 
                           , MH.CORP_CAR_YN 
                           , MH.PAY_PROVIDE_YN 
                           , MH.BONUS_PROVIDE_YN 
                           , MH.YEAR_PROVIDE_YN 
                           , MH.HIRE_INSUR_YN 
                           , MH.DED_FAMILY_COUNT 
                           , MH.DED_CHILD_COUNT 
                           , MH.DESCRIPTION 
                           , MH.SOB_ID 
                           , MH.ORG_ID 
                        FROM HRP_PAY_MASTER_HEADER MH
                       WHERE MH.START_YYYYMM       <= V_START_YYYYMM
                         AND (MH.END_YYYYMM        >= V_START_YYYYMM OR MH.END_YYYYMM IS NULL)
                         AND MH.SOB_ID             =  V_SOB_ID 
                         AND MH.ORG_ID             =  V_ORG_ID 
                    ) P1
              WHERE PM.PERSON_ID            = P1.PERSON_ID 
                AND PM.PERSON_NUM           = LPAD(PMT.PERSON_NUM, 6, '0')
   /*             AND PM.SOB_ID               = PMT.SOB_ID
                AND PM.ORG_ID               = PMT.ORG_ID*/
                AND PM.SOB_ID               = V_SOB_ID
                AND PM.ORG_ID               = V_ORG_ID
              ORDER BY PM.PERSON_NUM
             )
  LOOP
    IF C1.BANK_ID IS NULL THEN
      DBMS_OUTPUT.PUT_LINE('BANK CODE ERROR : (' || C1.PERSON_NUM || ') ' || C1.NAME );
    END IF;
    
    V_PAY_HEADER_ID := C1.PAY_HEADER_ID;
    
    /*
    IF C1.PRINT_TYPE_CHECK IS NULL THEN
      DBMS_OUTPUT.PUT_LINE('PRINT TYPE ERROR : (' || C1.PERSON_NUM || ') ' || C1.NAME );
    END IF;
    
    IF C1.PAY_TYPE_CHECK IS NULL THEN
      DBMS_OUTPUT.PUT_LINE('PAY TYPE ERROR : (' || C1.PERSON_NUM || ') ' || C1.NAME );
    END IF;
    
    
    V_START_YYYYMM := TO_CHAR(C1.JOIN_DATE, 'YYYY-MM');
    */
    
    /*-- 기존자료 백업 --
    UPDATE HRP_PAY_MASTER_HEADER MH
       SET MH.END_YYYYMM         = V_PRE_END_YYYYMM
         , MH.LAST_YN            = 'N'
     WHERE MH.PAY_HEADER_ID      = C1.PAY_HEADER_ID 
    ;
    
    -- 신규자료 INSERT -- 
    -- PAY HEADER_ID 채번 --
    SELECT HRP_PAY_MASTER_HEADER_S1.NEXTVAL
      INTO V_PAY_HEADER_ID
      FROM DUAL;

\*    DBMS_OUTPUT.PUT_LINE('NAME : ' || C1.NAME || '(' || C1.PERSON_ID || '), PAY_HEADER_ID : ' || V_PAY_HEADER_ID);*\
    INSERT INTO HRP_PAY_MASTER_HEADER
    ( PAY_HEADER_ID
    , PERSON_ID 
    , CORP_ID 
    , START_YYYYMM 
    , PRINT_TYPE 
    , BANK_ID 
    , BANK_ACCOUNTS 
    , PAY_TYPE 
    , PAY_GRADE_ID 
    , GRADE_STEP 
    , CORP_CAR_YN 
    , PAY_PROVIDE_YN 
    , BONUS_PROVIDE_YN 
    , YEAR_PROVIDE_YN
    , HIRE_INSUR_YN 
    , DED_FAMILY_COUNT
    , DED_CHILD_COUNT
    , SOB_ID 
    , ORG_ID 
    , CREATION_DATE 
    , CREATED_BY 
    , LAST_UPDATE_DATE 
    , LAST_UPDATED_BY 
    ) VALUES
    ( V_PAY_HEADER_ID
    , C1.PERSON_ID
    , C1.CORP_ID
    , C1.START_YYYYMM  -- 적용 시작일자.
    , C1.PRINT_TYPE
    , C1.BANK_ID
    , C1.BANK_ACCOUNTS
    , C1.PAY_TYPE
    , C1.PAY_GRADE_ID
    , C1.GRADE_STEP
    , NVL(C1.CORP_CAR_YN, 'N')
    , NVL(C1.PAY_PROVIDE_YN, 'N')
    , NVL(C1.BONUS_PROVIDE_YN, 'N')
    , NVL(C1.YEAR_PROVIDE_YN, 'N')
    , NVL(C1.HIRE_INSUR_YN, 'N')
    , NVL(C1.DED_FAMILY_COUNT, 1)
    , NVL(C1.DED_CHILD_COUNT, 0)
    , C1.SOB_ID
    , C1.ORG_ID
    , V_SYSDATE
    , C1.USER_ID
    , V_SYSDATE
    , C1.USER_ID 
    );
    */
    
-- 해당 PAY MASTER HEADER ID 에 대한 LINE 급여 마스터 정보 삭제  
    DELETE FROM HRP_PAY_MASTER_LINE ML
     WHERE ML.PAY_HEADER_ID         = V_PAY_HEADER_ID
    ;
    
-- A01 - ALLOWANCE INSERT.
    IF NVL(C1.A01, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY 
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A01_ID, C1.A01 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A02 - ALLOWANCE INSERT.
    IF NVL(C1.A02, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A02_ID, C1.A02 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A03 - ALLOWANCE INSERT.
    IF NVL(C1.A03, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A03_ID, C1.A03 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A04 - ALLOWANCE INSERT.
    IF NVL(C1.A04, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A04_ID, C1.A04 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A05 - ALLOWANCE INSERT.
    IF NVL(C1.A05, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A05_ID, C1.A05 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A06 - ALLOWANCE INSERT.
    IF NVL(C1.A06, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A06_ID, C1.A06 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A07 - ALLOWANCE INSERT.
    IF NVL(C1.A07, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A07_ID, C1.A07 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A08 - ALLOWANCE INSERT.
    IF NVL(C1.A08, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A08_ID, C1.A08 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A09 - ALLOWANCE INSERT.
    IF NVL(C1.A09, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A09_ID, C1.A09 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A10 - ALLOWANCE INSERT.
    IF NVL(C1.A10, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A10_ID, C1.A10 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
-- A11 - ALLOWANCE INSERT.
    IF NVL(C1.A11, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A11_ID, C1.A11 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A12 - ALLOWANCE INSERT.
    IF NVL(C1.A12, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A12_ID, C1.A12 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A13 - ALLOWANCE INSERT.
    IF NVL(C1.A13, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A13_ID, C1.A13 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A14 - ALLOWANCE INSERT.
    IF NVL(C1.A14, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A14_ID, C1.A14 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A15 - ALLOWANCE INSERT.
    IF NVL(C1.A15, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A15_ID, C1.A15 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A16 - ALLOWANCE INSERT.
    IF NVL(C1.A16, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A16_ID, C1.A16 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A17 - ALLOWANCE INSERT.
    IF NVL(C1.A17, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A17_ID, C1.A17 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A18 - ALLOWANCE INSERT.
    IF NVL(C1.A18, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A18_ID, C1.A18 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A19 - ALLOWANCE INSERT.
    IF NVL(C1.A19, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A19_ID, C1.A19 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
-- A20 - ALLOWANCE INSERT.
    IF NVL(C1.A20, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A20_ID, C1.A20 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
-- A21 - ALLOWANCE INSERT.
    IF NVL(C1.A21, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A21_ID, C1.A21 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A22 - ALLOWANCE INSERT.
    IF NVL(C1.A22, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A22_ID, C1.A22 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A23 - ALLOWANCE INSERT.
    IF NVL(C1.A23, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A23_ID, C1.A23 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A24 - ALLOWANCE INSERT.
    IF NVL(C1.A24, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A24_ID, C1.A24 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A25 - ALLOWANCE INSERT.
    IF NVL(C1.A25, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A25_ID, C1.A25 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A26 - ALLOWANCE INSERT.
    IF NVL(C1.A26, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A26_ID, C1.A26 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A27 - ALLOWANCE INSERT.
    IF NVL(C1.A27, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A27_ID, C1.A27 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A28 - ALLOWANCE INSERT.
    IF NVL(C1.A28, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A28_ID, C1.A28 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A29 - ALLOWANCE INSERT.
    IF NVL(C1.A29, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A29_ID, C1.A29 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A30 - ALLOWANCE INSERT.
    IF NVL(C1.A30, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A30_ID, C1.A30 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
-- A31 - ALLOWANCE INSERT.
    IF NVL(C1.A31, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A31_ID, C1.A31 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A32 - ALLOWANCE INSERT.
    IF NVL(C1.A32, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A32_ID, C1.A32 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A33 - ALLOWANCE INSERT.
    IF NVL(C1.A33, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A33_ID, C1.A33 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A34 - ALLOWANCE INSERT.
    IF NVL(C1.A34, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A34_ID, C1.A34 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A35 - ALLOWANCE INSERT.
    IF NVL(C1.A35, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A35_ID, C1.A35 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A36 - ALLOWANCE INSERT.
    IF NVL(C1.A36, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A36_ID, C1.A36 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A27 - ALLOWANCE INSERT.
    IF NVL(C1.A37, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A37_ID, C1.A37 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A38 - ALLOWANCE INSERT.
    IF NVL(C1.A38, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A38_ID, C1.A38 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A39 - ALLOWANCE INSERT.
    IF NVL(C1.A39, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A39_ID, C1.A39 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
    -- A40 - ALLOWANCE INSERT.
    IF NVL(C1.A40, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID, PAY_HEADER_ID, ALLOWANCE_TYPE, ALLOWANCE_ID, ALLOWANCE_AMOUNT, ENABLED_FLAG, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY
      ) VALUES
      ( V_PAY_LINE_ID, V_PAY_HEADER_ID, 'A'
      , C1.A40_ID, C1.A40 , 'Y', V_SYSDATE, C1.USER_ID, V_SYSDATE, C1.USER_ID);
    END IF;
            
-----------------------------------------------------------------------------------------
    -- 공제.
    /*-- D01 - DEDUCTION INSERT.
    IF NVL(C1.D01, 0) <> 0 THEN
      SELECT HRP_PAY_MASTER_LINE_S1.NEXTVAL
        INTO V_PAY_LINE_ID
        FROM DUAL;

      INSERT INTO HRP_PAY_MASTER_LINE
      ( PAY_LINE_ID
      , PAY_HEADER_ID 
      , ALLOWANCE_TYPE 
      , ALLOWANCE_ID 
      , ALLOWANCE_AMOUNT 
      , ENABLED_FLAG 
      , CREATION_DATE 
      , CREATED_BY 
      , LAST_UPDATE_DATE 
      , LAST_UPDATED_BY 
      ) VALUES
      ( V_PAY_LINE_ID
      , V_PAY_HEADER_ID
      , 'A'
      , C1.D01_ID
      , C1.D01
      , 'Y'
      , V_SYSDATE
      , C1.USER_ID
      , V_SYSDATE
      , C1.USER_ID 
      );
    END IF;
    */
  END LOOP C1;
END;

/*
SELECT MH.PAY_HEADER_ID 
     , MH.PERSON_ID 
     , MH.CORP_ID 
     , MH.START_YYYYMM 
     , MH.END_YYYYMM 
     , MH.PRINT_TYPE 
     , MH.BANK_ID 
     , MH.BANK_ACCOUNTS 
     , MH.PAY_TYPE 
     , MH.PAY_GRADE_ID 
     , MH.GRADE_STEP 
     , MH.CORP_CAR_YN 
     , MH.PAY_PROVIDE_YN 
     , MH.BONUS_PROVIDE_YN 
     , MH.YEAR_PROVIDE_YN 
     , MH.HIRE_INSUR_YN 
     , MH.DED_FAMILY_COUNT 
     , MH.DED_CHILD_COUNT 
     , MH.DESCRIPTION 
     , MH.SOB_ID 
     , MH.ORG_ID 
  FROM HRP_PAY_MASTER_HEADER MH
 WHERE MH.START_YYYYMM       <= &V_START_YYYYMM
   AND (MH.END_YYYYMM        >= &V_START_YYYYMM OR MH.END_YYYYMM IS NULL)
   AND MH.SOB_ID             = &V_SOB_ID 
   AND MH.ORG_ID             = &V_ORG_ID 
   AND MH.PERSON_ID          IN ( SELECT PERSON_ID FROM HRM_PERSON_MASTER PM WHERE PM.PERSON_NUM  = 'B11099') 
  
 */
 /*
SELECT   PM.NAME
       , PM.PERSON_NUM
       , T1.FLOOR_NAME
       , T1.POST_NAME
       , T1.JOB_CATEGORY_NAME
       , SUM(PML.ALLOWANCE_AMOUNT) AS TOTAL_AMOUNT
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A01', PML.ALLOWANCE_AMOUNT)) AS A01
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A02', PML.ALLOWANCE_AMOUNT)) AS A02
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A03', PML.ALLOWANCE_AMOUNT)) AS A03
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A04', PML.ALLOWANCE_AMOUNT)) AS A04
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A05', PML.ALLOWANCE_AMOUNT)) AS A05
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A06', PML.ALLOWANCE_AMOUNT)) AS A06
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A07', PML.ALLOWANCE_AMOUNT)) AS A07
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A08', PML.ALLOWANCE_AMOUNT)) AS A08
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A09', PML.ALLOWANCE_AMOUNT)) AS A09
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A10', PML.ALLOWANCE_AMOUNT)) AS A10
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A11', PML.ALLOWANCE_AMOUNT)) AS A11
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A12', PML.ALLOWANCE_AMOUNT)) AS A12
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A13', PML.ALLOWANCE_AMOUNT)) AS A13
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A14', PML.ALLOWANCE_AMOUNT)) AS A14
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A15', PML.ALLOWANCE_AMOUNT)) AS A15
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A16', PML.ALLOWANCE_AMOUNT)) AS A16
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A17', PML.ALLOWANCE_AMOUNT)) AS A17
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A18', PML.ALLOWANCE_AMOUNT)) AS A18
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A19', PML.ALLOWANCE_AMOUNT)) AS A19
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A20', PML.ALLOWANCE_AMOUNT)) AS A20
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A21', PML.ALLOWANCE_AMOUNT)) AS A21
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A22', PML.ALLOWANCE_AMOUNT)) AS A22
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A23', PML.ALLOWANCE_AMOUNT)) AS A23
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A24', PML.ALLOWANCE_AMOUNT)) AS A24
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A25', PML.ALLOWANCE_AMOUNT)) AS A25
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A26', PML.ALLOWANCE_AMOUNT)) AS A26
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A27', PML.ALLOWANCE_AMOUNT)) AS A27
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A28', PML.ALLOWANCE_AMOUNT)) AS A28
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A29', PML.ALLOWANCE_AMOUNT)) AS A29
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A30', PML.ALLOWANCE_AMOUNT)) AS A30
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A31', PML.ALLOWANCE_AMOUNT)) AS A31
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A32', PML.ALLOWANCE_AMOUNT)) AS A32
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A33', PML.ALLOWANCE_AMOUNT)) AS A33
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A34', PML.ALLOWANCE_AMOUNT)) AS A34
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A35', PML.ALLOWANCE_AMOUNT)) AS A35
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A36', PML.ALLOWANCE_AMOUNT)) AS A36
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A37', PML.ALLOWANCE_AMOUNT)) AS A37
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A38', PML.ALLOWANCE_AMOUNT)) AS A38
       , SUM(DECODE(HA.ALLOWANCE_CODE, 'A39', PML.ALLOWANCE_AMOUNT)) AS A39
       , PMH.START_YYYYMM
       , PMH.END_YYYYMM
       , T1.DEPT_NAME
       , NVL(PM.JOIN_DATE, NULL) AS JOIN_DATE
       , NVL(PM.RETIRE_DATE, NULL) AS RETIRE_DATE
    FROM HRM_PERSON_MASTER      PM
      , HRP_PAY_MASTER_HEADER   PMH
      , HRP_PAY_MASTER_LINE     PML
      , HRM_ALLOWANCE_V         HA
      , (-- 시점 인사내역.
          SELECT HL.PERSON_ID
               , DM.DEPT_NAME
               , HL.POST_ID
               , PC.POST_CODE
               , PC.POST_NAME
               , PC.SORT_NUM AS POST_SORT_NUM
               , HL.FLOOR_ID
               , HF.FLOOR_CODE
               , HF.FLOOR_NAME
               , HF.SORT_NUM AS FLOOR_SORT_NUM
               , HL.JOB_CATEGORY_ID
               , JC.JOB_CATEGORY_NAME
            FROM HRM_HISTORY_HEADER      HH
               , HRM_HISTORY_LINE        HL 
               , HRM_DEPT_MASTER         DM
               , HRM_POST_CODE_V         PC
               , HRM_FLOOR_V             HF
               , HRM_JOB_CATEGORY_CODE_V JC
           WHERE HH.HISTORY_HEADER_ID   = HL.HISTORY_HEADER_ID
             AND HL.DEPT_ID             = DM.DEPT_ID
             AND HL.POST_ID             = PC.POST_ID
             AND HL.FLOOR_ID            = HF.FLOOR_ID
             AND HL.JOB_CATEGORY_ID     = JC.JOB_CATEGORY_ID
             AND HH.CHARGE_SEQ          IN 
                  (SELECT MAX(S_HH.CHARGE_SEQ) AS CHARGE_SEQ
                      FROM HRM_HISTORY_HEADER S_HH
                         , HRM_HISTORY_LINE   S_HL
                     WHERE S_HH.HISTORY_HEADER_ID = S_HL.HISTORY_HEADER_ID
                       AND S_HH.CHARGE_DATE       <= LAST_DAY(TO_DATE(&W_PAY_YYYYMM, 'YYYY-MM'))
                       AND S_HL.PERSON_ID         = HL.PERSON_ID
                     GROUP BY S_HL.PERSON_ID
                   )      
        ) T1            
  WHERE PM.PERSON_ID                = PMH.PERSON_ID
    AND PMH.PAY_HEADER_ID           = PML.PAY_HEADER_ID
    AND PML.ALLOWANCE_ID            = HA.ALLOWANCE_ID
    AND PM.PERSON_ID                = T1.PERSON_ID
        
    AND PM.CORP_ID                  = &W_CORP_ID
    AND PM.SOB_ID                   = &W_SOB_ID
    AND PM.ORG_ID                   = &W_ORG_ID
    AND PM.JOIN_DATE                <= LAST_DAY(TO_DATE(&W_PAY_YYYYMM, 'YYYY-MM'))
    AND (PM.RETIRE_DATE             >= TRUNC(TO_DATE(&W_PAY_YYYYMM, 'YYYY-MM')) OR PM.RETIRE_DATE IS NULL)
        
    AND PMH.START_YYYYMM            <= &W_PAY_YYYYMM
    AND (PMH.END_YYYYMM             >= &W_PAY_YYYYMM OR PMH.END_YYYYMM IS NULL)
    AND PMH.SOB_ID                  = &W_SOB_ID
    AND PMH.ORG_ID                  = &W_ORG_ID
    AND PML.ALLOWANCE_TYPE          = 'A'  -- 지급 --
    AND PML.ENABLED_FLAG            = 'Y'  
    AND HA.ENABLED_FLAG             = 'Y'
    AND HA.EFFECTIVE_DATE_FR        <= LAST_DAY(TO_DATE(&W_PAY_YYYYMM, 'YYYY-MM'))
    AND (HA.EFFECTIVE_DATE_TO IS NULL OR HA.EFFECTIVE_DATE_TO >= TRUNC(TO_DATE(&W_PAY_YYYYMM, 'YYYY-MM')))
  GROUP BY ROLLUP((PMH.START_YYYYMM
       , PMH.END_YYYYMM
       , PM.NAME
       , PM.PERSON_NUM
       , T1.DEPT_NAME
       , T1.FLOOR_SORT_NUM
       , T1.FLOOR_CODE
       , T1.FLOOR_NAME
       , T1.POST_SORT_NUM
       , T1.POST_CODE
       , T1.POST_NAME
       , T1.JOB_CATEGORY_NAME
       , PM.JOIN_DATE
       , PM.RETIRE_DATE))
   ORDER BY T1.POST_SORT_NUM, T1.POST_CODE, T1.FLOOR_SORT_NUM, T1.FLOOR_CODE, PM.PERSON_NUM
  ;

*/
