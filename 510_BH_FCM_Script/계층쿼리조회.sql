SELECT SYS_CONNECT_BY_PATH (SLIP, '/') AS PATH_A
  FROM (
        SELECT DECODE(MOD(SX.RNK, 3), 0, CONCAT(SUBSTR(&P_AMOUNT, SX.RNK, 1), ','), SUBSTR(&P_AMOUNT, SX.RNK, 1)) AS SLIP
             , SUBSTR(&P_AMOUNT, SX.RNK, 1)
             
             , SX.RNK
             , MOD(SX.RNK, 3)
          FROM (SELECT LEVEL AS RNK
                  FROM DUAL
                 CONNECT BY LEVEL <= LENGTH(&P_AMOUNT)
               ) SX
        ORDER BY SX.RNK DESC
       ) XX
--         ORDER SIBLINGS BY LEVEL
;

SELECT * --SUBSTR(MAX(SYS_CONNECT_BY_PATH (SLIP, ',')), +1) AS SSS
  FROM (SELECT DECODE(MOD(ROWNUM, 3), 0, CONCAT(SUBSTR(&P_AMOUNT, SX.RNK, 1), ','), SUBSTR(&P_AMOUNT, SX.RNK, 1)) AS SLIP
             , SX.RNK
             , ROWNUM
             , MOD(ROWNUM, 3)
          FROM (SELECT LEVEL AS RNK
                  FROM DUAL
                 CONNECT BY LEVEL <= LENGTH(&P_AMOUNT)
               ) SX
--        ORDER BY SX.RNK DESC
        ) XX
  CONNECT BY ROWNUM = ROWNUM -1        
;


SELECT SUBSTR(MAX(SYS_CONNECT_BY_PATH( B, ' > ' )),4) 
FROM 
( 
SELECT F.FORM_LINE_ID A , F.FORM_HEADER_ID B , ROWNUM RNUM 
FROM FI_FORM_LINE F 
) 
START WITH RNUM = 1 
CONNECT BY PRIOR RNUM = RNUM-1 
;

SELECT SYS_CONNECT_BY_PATH (SUBSTR(&P_AMOUNT, LEVEL, 1), '/') AS SPLIT_AMOUNT      
       , CONCAT(SUBSTR(&P_AMOUNT, LEVEL, 1), DECODE(MOD(LEVEL - 1, 3), 0, DECODE(LEVEL, LENGTH(&P_AMOUNT), NULL, ','), NULL)) AS SPLIT_AMOUNT
       , SUBSTR(&P_AMOUNT, LEVEL, 1) AS SPLIT_AMOUNT
       , DECODE(MOD(LENGTH(&P_AMOUNT) - LEVEL, 3), 0, DECODE(LEVEL, LENGTH(&P_AMOUNT), NULL, ','), NULL) AS K
       , LEVEL
       , MOD(LENGTH(&P_AMOUNT) - LEVEL, 3) AS MOD_V
    FROM DUAL
  CONNECT BY LEVEL <= LENGTH(&P_AMOUNT);
;

  SELECT /*SYS_CONNECT_BY_PATH (SUBSTR(&P_AMOUNT, LEVEL, 1), '/') AS SPLIT_AMOUNT
       , */REPLACE(MAX(SYS_CONNECT_BY_PATH (CONCAT(SUBSTR(&P_AMOUNT, LEVEL, 1), DECODE(MOD(LENGTH(&P_AMOUNT) - LEVEL, 4), 0, DECODE(LEVEL, LENGTH(&P_AMOUNT), NULL, ','), NULL)), 'X')), 'X') AS PATH_X
      /* , CONCAT(SUBSTR(&P_AMOUNT, LEVEL, 1), DECODE(MOD(LEVEL - 1, 3), 0, DECODE(LEVEL, LENGTH(&P_AMOUNT), NULL, ','), NULL)) AS SPLIT_AMOUNT
       , SUBSTR(&P_AMOUNT, LEVEL, 1) AS SPLIT_AMOUNT
       , DECODE(MOD(LEVEL - 1, 3), 0, DECODE(LEVEL, LENGTH(&P_AMOUNT), NULL, ','), NULL) AS K
       , LEVEL*/
    FROM DUAL
--  START WITH LENGTH(&P_AMOUNT)
  CONNECT BY LEVEL <= LENGTH(&P_AMOUNT);


