CREATE OR REPLACE PACKAGE FI_ACCOUNT_CONTROL_G
AS

-- 회계 계정통제관리 조회.
  PROCEDURE SELECT_ACCOUNT_CONTROL
            ( P_CURSOR               OUT TYPES.TCURSOR
            , W_ACCOUNT_SET_ID       IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , W_ACCOUNT_GROUP_ID     IN FI_ACCOUNT_CONTROL.ACCOUNT_GROUP_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ORG_ID               IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            );

-- 회계 계정통제관리 삽입.
  PROCEDURE INSERT_ACCOUNT_CONTROL
            ( P_ACCOUNT_CONTROL_ID OUT FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE       IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            , P_ACCOUNT_DESC       IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE
            , P_ACCOUNT_DESC_S     IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC_S%TYPE
            , P_ACCOUNT_SET_ID     IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , P_ACCOUNT_GROUP_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_GROUP_ID%TYPE
            , P_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , P_ACCOUNT_GL_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_GL_ID%TYPE
            , P_ACCOUNT_FS_TYPE    IN FI_ACCOUNT_CONTROL.ACCOUNT_FS_TYPE%TYPE
            , P_CUSTOMER_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CUSTOMER_ENABLED_FLAG%TYPE
            , P_ACCOUNT_ENABLED_FLAG  IN FI_ACCOUNT_CONTROL.ACCOUNT_ENABLED_FLAG%TYPE
            , P_BANK_ACCOUNT_FLAG     IN FI_ACCOUNT_CONTROL.BANK_ACCOUNT_FLAG%TYPE
            , P_CURRENCY_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CURRENCY_ENABLED_FLAG%TYPE
            , P_ACCOUNT_MICH_YN    IN FI_ACCOUNT_CONTROL.ACCOUNT_MICH_YN%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.VAT_ENABLED_FLAG%TYPE
            , P_BUDGET_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_ENABLED_FLAG%TYPE
            , P_BUDGET_CONTROL_FLAG    IN FI_ACCOUNT_CONTROL.BUDGET_CONTROL_FLAG%TYPE
            , P_BUDGET_BELONG_FLAG IN FI_ACCOUNT_CONTROL.BUDGET_BELONG_FLAG%TYPE
            , P_COST_CENTER_FLAG   IN FI_ACCOUNT_CONTROL.COST_CENTER_FLAG%TYPE
            , P_LIQUIDATE_METHOD_TYPE IN FI_ACCOUNT_CONTROL.LIQUIDATE_METHOD_TYPE%TYPE
            , P_ACCOUNT_CLASS_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_CLASS_ID%TYPE
            , P_REMARK             IN FI_ACCOUNT_CONTROL.REMARK%TYPE
            , P_ENABLED_FLAG       IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            , P_EFFECTIVE_DATE_FR  IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_FR%TYPE
            , P_EFFECTIVE_DATE_TO  IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_TO%TYPE
            , P_SOB_ID             IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , P_ORG_ID             IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            , P_USER_ID            IN FI_ACCOUNT_CONTROL.CREATED_BY%TYPE
            );

-- 회계 계정통제관리 수정.
  PROCEDURE UPDATE_ACCOUNT_CONTROL
            ( W_ACCOUNT_CONTROL_ID IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_DESC       IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE
            , P_ACCOUNT_DESC_S     IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC_S%TYPE
            , P_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , P_ACCOUNT_GL_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_GL_ID%TYPE
            , P_ACCOUNT_FS_TYPE    IN FI_ACCOUNT_CONTROL.ACCOUNT_FS_TYPE%TYPE
            , P_CUSTOMER_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CUSTOMER_ENABLED_FLAG%TYPE
            , P_ACCOUNT_ENABLED_FLAG  IN FI_ACCOUNT_CONTROL.ACCOUNT_ENABLED_FLAG%TYPE
            , P_BANK_ACCOUNT_FLAG     IN FI_ACCOUNT_CONTROL.BANK_ACCOUNT_FLAG%TYPE
            , P_CURRENCY_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CURRENCY_ENABLED_FLAG%TYPE
            , P_ACCOUNT_MICH_YN    IN FI_ACCOUNT_CONTROL.ACCOUNT_MICH_YN%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.VAT_ENABLED_FLAG%TYPE
            , P_BUDGET_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_ENABLED_FLAG%TYPE
            , P_BUDGET_CONTROL_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_CONTROL_FLAG%TYPE
            , P_BUDGET_BELONG_FLAG IN FI_ACCOUNT_CONTROL.BUDGET_BELONG_FLAG%TYPE
            , P_COST_CENTER_FLAG   IN FI_ACCOUNT_CONTROL.COST_CENTER_FLAG%TYPE
            , P_LIQUIDATE_METHOD_TYPE IN FI_ACCOUNT_CONTROL.LIQUIDATE_METHOD_TYPE%TYPE
            , P_ACCOUNT_CLASS_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_CLASS_ID%TYPE
            , P_REMARK             IN FI_ACCOUNT_CONTROL.REMARK%TYPE
            , P_ENABLED_FLAG       IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            , P_EFFECTIVE_DATE_FR  IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_FR%TYPE
            , P_EFFECTIVE_DATE_TO  IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_TO%TYPE
            , P_USER_ID            IN FI_ACCOUNT_CONTROL.CREATED_BY%TYPE
            );

---------------------------------------------------------------------------------------------------
-- 계정 조회.
  PROCEDURE SELECT_ACCOUNT_CODE
            ( P_CURSOR                OUT TYPES.TCURSOR
            , W_ACCOUNT_CODE_FR       IN VARCHAR2
            , W_ACCOUNT_CODE_TO       IN VARCHAR2
            , W_SOB_ID                IN NUMBER
            , W_ORG_ID                IN NUMBER
            );

---------------------------------------------------------------------------------------------------
-- 회계계정관리 LOOKUP 조회.
  PROCEDURE LU_ACCOUNT_CONTROL
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_SET_ID       IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE DEFAULT NULL
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            );

-- 회계계정관리 LOOKUP 조회.
  PROCEDURE LU_ACCOUNT_CONTROL_CODE
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            );

-- 회계계정관리 LOOKUP 조회 ~ TO.
  PROCEDURE LU_ACCOUNT_CONTROL_FROM_TO
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_CODE_FR      IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            );

-- 회계계정관리 - 원장 연동 조회.
  PROCEDURE LU_LEDGER_ACCOUNT_CONTROL
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_CODE_FR      IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            , W_LEDGER_CODE          IN FI_COMMON.CODE%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            );


-- 회계계정관리 및 통제 LOOKUP 조회.
  PROCEDURE LU_JOURNAL_ACCOUNT_CONTROL
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_JOURNAL_HEADER_ID    IN FI_AUTO_JOURNAL_HEADER.JOURNAL_HEADER_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            );

-- 회계계정관리 및 통제 LOOKUP - 예산 연동 조회.
  PROCEDURE LU_BUDGET_ACCOUNT_CONTROL
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_DR_CR        IN VARCHAR2
            , W_CONNECT_PERSON_ID    IN FI_BUDGET_CONTROL.PERSON_ID%TYPE
            , W_BUDGET_DEPT_ID       IN FI_BUDGET.DEPT_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            );

---------------------------------------------------------------------------------------------------
-- 회계계정 코드.
    FUNCTION ACCOUNT_CODE_F
              ( W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
              , W_SOB_ID              IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
              ) RETURN VARCHAR2;





--계정명 반환
  FUNCTION ACCOUNT_DESC_F
            ( W_ACCOUNT_CONTROL_ID    IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID                IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            ) RETURN VARCHAR2;


  --계정명 반환(계정세트와 계정코드를 바탕으로 계정명 반환함); 2011-08-11, 임동언
  FUNCTION ACCOUNT_DESC_F2
            ( W_SOB_ID          IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ORG_ID          IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            , W_ACCOUNT_SET_ID  IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , W_ACCOUNT_CODE    IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            ) RETURN VARCHAR2;

-- 회계계정 분류 타입.
  PROCEDURE ACCOUNT_CLASS_TYPE_P
            ( W_ACCOUNT_BOOK_ID      IN FI_ACCOUNT_BOOK.ACCOUNT_BOOK_ID%TYPE
            , W_ACCOUNT_DR_CR        IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ORG_ID               IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            , O_ACCOUNT_CLASS_YN     OUT VARCHAR2
            , O_ACCOUNT_CLASS_TYPE   OUT VARCHAR2
            , O_BTN_CAPTION          OUT VARCHAR2
            );

-- 회계계정의 반제처리 방법.
  PROCEDURE LIQUIDATE_METHOD_TYPE_P
            ( W_ACCOUNT_CONTROL_ID          IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID                      IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , O_LIQUIDATE_METHOD_TYPE       OUT VARCHAR2
            , O_LIQUIDATE_METHOD_TYPE_FLAG  OUT VARCHAR2
            );

---------------------------------------------------------------------------------------------------
-- 회계 계정통제관리 조회.
  PROCEDURE ACCOUNT_CONTROL_SELECT
            ( P_CURSOR               OUT TYPES.TCURSOR
            , W_ACCOUNT_SET_ID       IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ORG_ID               IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            );

-- 회계 계정통제관리 삽입.
  PROCEDURE ACCOUNT_CONTROL_INSERT
            ( P_ACCOUNT_CONTROL_ID    OUT FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID                IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , P_ORG_ID                IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            , P_ACCOUNT_CODE          IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            , P_ACCOUNT_DESC          IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE
            , P_ACCOUNT_DESC_S        IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC_S%TYPE
            , P_ACCOUNT_SET_ID        IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , P_ACCOUNT_DR_CR         IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , P_ACCOUNT_GL_ID         IN FI_ACCOUNT_CONTROL.ACCOUNT_GL_ID%TYPE
            , P_ACCOUNT_FS_TYPE       IN FI_ACCOUNT_CONTROL.ACCOUNT_FS_TYPE%TYPE
            , P_CUSTOMER_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CUSTOMER_ENABLED_FLAG%TYPE
            , P_ACCOUNT_ENABLED_FLAG  IN FI_ACCOUNT_CONTROL.ACCOUNT_ENABLED_FLAG%TYPE
            , P_BANK_ACCOUNT_FLAG     IN FI_ACCOUNT_CONTROL.BANK_ACCOUNT_FLAG%TYPE
            , P_CURRENCY_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CURRENCY_ENABLED_FLAG%TYPE
            , P_ACCOUNT_MICH_YN       IN FI_ACCOUNT_CONTROL.ACCOUNT_MICH_YN%TYPE
            , P_VAT_ENABLED_FLAG      IN FI_ACCOUNT_CONTROL.VAT_ENABLED_FLAG%TYPE
            , P_BUDGET_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_ENABLED_FLAG%TYPE
            , P_BUDGET_CONTROL_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_CONTROL_FLAG%TYPE
            , P_BUDGET_BELONG_FLAG    IN FI_ACCOUNT_CONTROL.BUDGET_BELONG_FLAG%TYPE
            , P_COST_CENTER_FLAG      IN FI_ACCOUNT_CONTROL.COST_CENTER_FLAG%TYPE
            , P_LIQUIDATE_METHOD_TYPE IN FI_ACCOUNT_CONTROL.LIQUIDATE_METHOD_TYPE%TYPE
            , P_ACCOUNT_CLASS_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_CLASS_ID%TYPE
            , P_REMARK                IN FI_ACCOUNT_CONTROL.REMARK%TYPE
            , P_ENABLED_FLAG          IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            , P_EFFECTIVE_DATE_FR     IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_FR%TYPE
            , P_EFFECTIVE_DATE_TO     IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_TO%TYPE
            , P_USER_ID               IN FI_ACCOUNT_CONTROL.CREATED_BY%TYPE
            , P_UP_ACCOUNT_CODE       IN FI_ACCOUNT_CONTROL.UP_ACCOUNT_CODE%TYPE
            , P_REFER1_ID             IN FI_ACCOUNT_CONTROL.REFER1_ID%TYPE
            , P_REFER2_ID             IN FI_ACCOUNT_CONTROL.REFER2_ID%TYPE
            , P_REFER3_ID             IN FI_ACCOUNT_CONTROL.REFER3_ID%TYPE
            , P_REFER4_ID             IN FI_ACCOUNT_CONTROL.REFER4_ID%TYPE
            , P_REFER5_ID             IN FI_ACCOUNT_CONTROL.REFER5_ID%TYPE
            , P_REFER6_ID             IN FI_ACCOUNT_CONTROL.REFER6_ID%TYPE
            , P_REFER7_ID             IN FI_ACCOUNT_CONTROL.REFER7_ID%TYPE
            , P_REFER8_ID             IN FI_ACCOUNT_CONTROL.REFER8_ID%TYPE
            , P_REFER9_ID             IN FI_ACCOUNT_CONTROL.REFER9_ID%TYPE
            , P_REFER10_ID            IN FI_ACCOUNT_CONTROL.REFER10_ID%TYPE
            , P_REFER11_ID            IN FI_ACCOUNT_CONTROL.REFER11_ID%TYPE
            , P_REFER12_ID            IN FI_ACCOUNT_CONTROL.REFER12_ID%TYPE
            , P_REFER13_ID            IN FI_ACCOUNT_CONTROL.REFER13_ID%TYPE
            , P_REFER14_ID            IN FI_ACCOUNT_CONTROL.REFER14_ID%TYPE
            , P_DR_NEED_YN1           IN FI_ACCOUNT_CONTROL.DR_NEED_YN1%TYPE
            , P_DR_NEED_YN2           IN FI_ACCOUNT_CONTROL.DR_NEED_YN2%TYPE
            , P_DR_NEED_YN3           IN FI_ACCOUNT_CONTROL.DR_NEED_YN3%TYPE
            , P_DR_NEED_YN4           IN FI_ACCOUNT_CONTROL.DR_NEED_YN4%TYPE
            , P_DR_NEED_YN5           IN FI_ACCOUNT_CONTROL.DR_NEED_YN5%TYPE
            , P_DR_NEED_YN6           IN FI_ACCOUNT_CONTROL.DR_NEED_YN6%TYPE
            , P_DR_NEED_YN7           IN FI_ACCOUNT_CONTROL.DR_NEED_YN7%TYPE
            , P_DR_NEED_YN8           IN FI_ACCOUNT_CONTROL.DR_NEED_YN8%TYPE
            , P_DR_NEED_YN9           IN FI_ACCOUNT_CONTROL.DR_NEED_YN9%TYPE
            , P_DR_NEED_YN10          IN FI_ACCOUNT_CONTROL.DR_NEED_YN10%TYPE
            , P_DR_NEED_YN11          IN FI_ACCOUNT_CONTROL.DR_NEED_YN11%TYPE
            , P_DR_NEED_YN12          IN FI_ACCOUNT_CONTROL.DR_NEED_YN12%TYPE
            , P_DR_NEED_YN13          IN FI_ACCOUNT_CONTROL.DR_NEED_YN13%TYPE
            , P_DR_NEED_YN14          IN FI_ACCOUNT_CONTROL.DR_NEED_YN14%TYPE
            , P_CR_NEED_YN1           IN FI_ACCOUNT_CONTROL.CR_NEED_YN1%TYPE
            , P_CR_NEED_YN2           IN FI_ACCOUNT_CONTROL.CR_NEED_YN2%TYPE
            , P_CR_NEED_YN3           IN FI_ACCOUNT_CONTROL.CR_NEED_YN3%TYPE
            , P_CR_NEED_YN4           IN FI_ACCOUNT_CONTROL.CR_NEED_YN4%TYPE
            , P_CR_NEED_YN5           IN FI_ACCOUNT_CONTROL.CR_NEED_YN5%TYPE
            , P_CR_NEED_YN6           IN FI_ACCOUNT_CONTROL.CR_NEED_YN6%TYPE
            , P_CR_NEED_YN7           IN FI_ACCOUNT_CONTROL.CR_NEED_YN7%TYPE
            , P_CR_NEED_YN8           IN FI_ACCOUNT_CONTROL.CR_NEED_YN8%TYPE
            , P_CR_NEED_YN9           IN FI_ACCOUNT_CONTROL.CR_NEED_YN9%TYPE
            , P_CR_NEED_YN10          IN FI_ACCOUNT_CONTROL.CR_NEED_YN10%TYPE
            , P_CR_NEED_YN11          IN FI_ACCOUNT_CONTROL.CR_NEED_YN11%TYPE
            , P_CR_NEED_YN12          IN FI_ACCOUNT_CONTROL.CR_NEED_YN12%TYPE
            , P_CR_NEED_YN13          IN FI_ACCOUNT_CONTROL.CR_NEED_YN13%TYPE
            , P_CR_NEED_YN14          IN FI_ACCOUNT_CONTROL.CR_NEED_YN14%TYPE
            , P_MNS_ACCOUNT_FLAG      IN FI_ACCOUNT_CONTROL.MNS_ACCOUNT_FLAG%TYPE
            , P_RELATE_ACCOUNT_CODE   IN FI_ACCOUNT_CONTROL.RELATE_ACCOUNT_CODE%TYPE
            );

-- 회계 계정통제관리 수정.
  PROCEDURE ACCOUNT_CONTROL_UPDATE
            ( W_ACCOUNT_CONTROL_ID    IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID                IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , P_ACCOUNT_DESC          IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE
            , P_ACCOUNT_DESC_S        IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC_S%TYPE
            , P_ACCOUNT_DR_CR         IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , P_ACCOUNT_GL_ID         IN FI_ACCOUNT_CONTROL.ACCOUNT_GL_ID%TYPE
            , P_ACCOUNT_FS_TYPE       IN FI_ACCOUNT_CONTROL.ACCOUNT_FS_TYPE%TYPE
            , P_CUSTOMER_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CUSTOMER_ENABLED_FLAG%TYPE
            , P_ACCOUNT_ENABLED_FLAG  IN FI_ACCOUNT_CONTROL.ACCOUNT_ENABLED_FLAG%TYPE
            , P_BANK_ACCOUNT_FLAG     IN FI_ACCOUNT_CONTROL.BANK_ACCOUNT_FLAG%TYPE
            , P_CURRENCY_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CURRENCY_ENABLED_FLAG%TYPE
            , P_ACCOUNT_MICH_YN       IN FI_ACCOUNT_CONTROL.ACCOUNT_MICH_YN%TYPE
            , P_VAT_ENABLED_FLAG      IN FI_ACCOUNT_CONTROL.VAT_ENABLED_FLAG%TYPE
            , P_BUDGET_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_ENABLED_FLAG%TYPE
            , P_BUDGET_CONTROL_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_CONTROL_FLAG%TYPE
            , P_BUDGET_BELONG_FLAG    IN FI_ACCOUNT_CONTROL.BUDGET_BELONG_FLAG%TYPE
            , P_COST_CENTER_FLAG      IN FI_ACCOUNT_CONTROL.COST_CENTER_FLAG%TYPE
            , P_LIQUIDATE_METHOD_TYPE IN FI_ACCOUNT_CONTROL.LIQUIDATE_METHOD_TYPE%TYPE
            , P_ACCOUNT_CLASS_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_CLASS_ID%TYPE
            , P_REMARK                IN FI_ACCOUNT_CONTROL.REMARK%TYPE
            , P_ENABLED_FLAG          IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            , P_EFFECTIVE_DATE_FR     IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_FR%TYPE
            , P_EFFECTIVE_DATE_TO     IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_TO%TYPE
            , P_USER_ID               IN FI_ACCOUNT_CONTROL.CREATED_BY%TYPE
            , P_UP_ACCOUNT_CODE       IN FI_ACCOUNT_CONTROL.UP_ACCOUNT_CODE%TYPE
            , P_REFER1_ID             IN FI_ACCOUNT_CONTROL.REFER1_ID%TYPE
            , P_REFER2_ID             IN FI_ACCOUNT_CONTROL.REFER2_ID%TYPE
            , P_REFER3_ID             IN FI_ACCOUNT_CONTROL.REFER3_ID%TYPE
            , P_REFER4_ID             IN FI_ACCOUNT_CONTROL.REFER4_ID%TYPE
            , P_REFER5_ID             IN FI_ACCOUNT_CONTROL.REFER5_ID%TYPE
            , P_REFER6_ID             IN FI_ACCOUNT_CONTROL.REFER6_ID%TYPE
            , P_REFER7_ID             IN FI_ACCOUNT_CONTROL.REFER7_ID%TYPE
            , P_REFER8_ID             IN FI_ACCOUNT_CONTROL.REFER8_ID%TYPE
            , P_REFER9_ID             IN FI_ACCOUNT_CONTROL.REFER9_ID%TYPE
            , P_REFER10_ID            IN FI_ACCOUNT_CONTROL.REFER10_ID%TYPE
            , P_REFER11_ID            IN FI_ACCOUNT_CONTROL.REFER11_ID%TYPE
            , P_REFER12_ID            IN FI_ACCOUNT_CONTROL.REFER12_ID%TYPE
            , P_REFER13_ID            IN FI_ACCOUNT_CONTROL.REFER13_ID%TYPE
            , P_REFER14_ID            IN FI_ACCOUNT_CONTROL.REFER14_ID%TYPE
            , P_DR_NEED_YN1           IN FI_ACCOUNT_CONTROL.DR_NEED_YN1%TYPE
            , P_DR_NEED_YN2           IN FI_ACCOUNT_CONTROL.DR_NEED_YN2%TYPE
            , P_DR_NEED_YN3           IN FI_ACCOUNT_CONTROL.DR_NEED_YN3%TYPE
            , P_DR_NEED_YN4           IN FI_ACCOUNT_CONTROL.DR_NEED_YN4%TYPE
            , P_DR_NEED_YN5           IN FI_ACCOUNT_CONTROL.DR_NEED_YN5%TYPE
            , P_DR_NEED_YN6           IN FI_ACCOUNT_CONTROL.DR_NEED_YN6%TYPE
            , P_DR_NEED_YN7           IN FI_ACCOUNT_CONTROL.DR_NEED_YN7%TYPE
            , P_DR_NEED_YN8           IN FI_ACCOUNT_CONTROL.DR_NEED_YN8%TYPE
            , P_DR_NEED_YN9           IN FI_ACCOUNT_CONTROL.DR_NEED_YN9%TYPE
            , P_DR_NEED_YN10          IN FI_ACCOUNT_CONTROL.DR_NEED_YN10%TYPE
            , P_DR_NEED_YN11          IN FI_ACCOUNT_CONTROL.DR_NEED_YN11%TYPE
            , P_DR_NEED_YN12          IN FI_ACCOUNT_CONTROL.DR_NEED_YN12%TYPE
            , P_DR_NEED_YN13          IN FI_ACCOUNT_CONTROL.DR_NEED_YN13%TYPE
            , P_DR_NEED_YN14          IN FI_ACCOUNT_CONTROL.DR_NEED_YN14%TYPE
            , P_CR_NEED_YN1           IN FI_ACCOUNT_CONTROL.CR_NEED_YN1%TYPE
            , P_CR_NEED_YN2           IN FI_ACCOUNT_CONTROL.CR_NEED_YN2%TYPE
            , P_CR_NEED_YN3           IN FI_ACCOUNT_CONTROL.CR_NEED_YN3%TYPE
            , P_CR_NEED_YN4           IN FI_ACCOUNT_CONTROL.CR_NEED_YN4%TYPE
            , P_CR_NEED_YN5           IN FI_ACCOUNT_CONTROL.CR_NEED_YN5%TYPE
            , P_CR_NEED_YN6           IN FI_ACCOUNT_CONTROL.CR_NEED_YN6%TYPE
            , P_CR_NEED_YN7           IN FI_ACCOUNT_CONTROL.CR_NEED_YN7%TYPE
            , P_CR_NEED_YN8           IN FI_ACCOUNT_CONTROL.CR_NEED_YN8%TYPE
            , P_CR_NEED_YN9           IN FI_ACCOUNT_CONTROL.CR_NEED_YN9%TYPE
            , P_CR_NEED_YN10          IN FI_ACCOUNT_CONTROL.CR_NEED_YN10%TYPE
            , P_CR_NEED_YN11          IN FI_ACCOUNT_CONTROL.CR_NEED_YN11%TYPE
            , P_CR_NEED_YN12          IN FI_ACCOUNT_CONTROL.CR_NEED_YN12%TYPE
            , P_CR_NEED_YN13          IN FI_ACCOUNT_CONTROL.CR_NEED_YN13%TYPE
            , P_CR_NEED_YN14          IN FI_ACCOUNT_CONTROL.CR_NEED_YN14%TYPE
            , P_MNS_ACCOUNT_FLAG      IN FI_ACCOUNT_CONTROL.MNS_ACCOUNT_FLAG%TYPE
            , P_RELATE_ACCOUNT_CODE   IN FI_ACCOUNT_CONTROL.RELATE_ACCOUNT_CODE%TYPE 
            );
            
-- 계정 관리항목 조회.
  PROCEDURE SELECT_ACCOUNT_CONTROL_ITEM
            ( P_CURSOR2              OUT TYPES.TCURSOR2
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            );

---------------------------------------------------------------------------------------------------
-- 계정 통제관리항목 Lookup.
  PROCEDURE LU_CONTROL_ITEM
            ( P_CURSOR3             OUT TYPES.TCURSOR3
            , W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_REFER_FIELD         IN VARCHAR2
            , W_SOB_ID              IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN          IN VARCHAR2
            , W_INQURIY_VALUE       IN VARCHAR2 DEFAULT NULL
            , W_CONNECT_PERSON_ID   IN NUMBER
            );

---------------------------------------------------------------------------------------------------
-- 계정 통제관리항목 필드값 DESCRIPTION.
  FUNCTION CONTROL_ITEM_DESC_F
          ( W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
          , W_REFER_FIELD         IN VARCHAR2
          , W_REFER_VAULE         IN VARCHAR2
          , W_SOB_ID              IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
          ) RETURN VARCHAR2;

-- 계정 통제관리항목 Lookup Type.
  FUNCTION CONTROL_ITEM_LOOKUP_TYPE_F
          ( W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
          , W_REFER_FIELD         IN VARCHAR2
          , W_SOB_ID              IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
          ) RETURN VARCHAR2;
          
END FI_ACCOUNT_CONTROL_G;
/
CREATE OR REPLACE PACKAGE BODY FI_ACCOUNT_CONTROL_G
AS
/******************************************************************************/
/* Project      : FPCB ERP
/* Module       : HR
/* Program Name : FI_ACCOUNT_CONTROL_G
/* Description  : 회계 계정통제관리 관리.
/*
/* Reference by :
/* Program History :
/*------------------------------------------------------------------------------
/*   Date       In Charge          Description
/*------------------------------------------------------------------------------
/* 07-JUN-2010  Jeon Ho Su          Initialize
/******************************************************************************/
-- 회계 계정통제관리 조회.
  PROCEDURE SELECT_ACCOUNT_CONTROL
            ( P_CURSOR               OUT TYPES.TCURSOR
            , W_ACCOUNT_SET_ID       IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , W_ACCOUNT_GROUP_ID     IN FI_ACCOUNT_CONTROL.ACCOUNT_GROUP_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ORG_ID               IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR FOR
      SELECT AC.ACCOUNT_CONTROL_ID
           , AC.ACCOUNT_CODE
           , AC.ACCOUNT_DESC
           , AC.ACCOUNT_DESC_S
           , AC.ACCOUNT_SET_ID
           , AC.ACCOUNT_GROUP_ID
           , AC.ACCOUNT_DR_CR
           , FI_COMMON_G.CODE_NAME_F('ACCOUNT_DR_CR', AC.ACCOUNT_DR_CR, AC.SOB_ID) AS ACCOUNT_DR_CR_NAME
           , AC.ACCOUNT_GL_ID
           , FI_COMMON_G.ID_NAME_F(AC.ACCOUNT_GL_ID) AS ACCOUNT_GL_NAME
           , AC.ACCOUNT_FS_TYPE
           , FI_COMMON_G.CODE_NAME_F('FORM_TYPE', AC.ACCOUNT_FS_TYPE, AC.SOB_ID) AS ACCOUNT_FS_TYPE_NAME
           , AC.CUSTOMER_ENABLED_FLAG
           , AC.ACCOUNT_ENABLED_FLAG
           , AC.BANK_ACCOUNT_FLAG
           , AC.CURRENCY_ENABLED_FLAG
           , AC.ACCOUNT_MICH_YN
           , AC.VAT_ENABLED_FLAG
           , AC.BUDGET_ENABLED_FLAG
           , AC.BUDGET_CONTROL_FLAG
           , AC.BUDGET_BELONG_FLAG
           , AC.COST_CENTER_FLAG
           , AC.LIQUIDATE_METHOD_TYPE
           , FI_COMMON_G.CODE_NAME_F('LIQUIDATE_METHOD_TYPE', AC.LIQUIDATE_METHOD_TYPE, AC.SOB_ID) AS LIQUIDATE_METHOD_TYPE_NAME
           , AC.ACCOUNT_CLASS_ID
           , FI_COMMON_G.ID_NAME_F(AC.ACCOUNT_CLASS_ID) AS ACCOUNT_CLASS_NAME
           , AC.REMARK
           , AC.ENABLED_FLAG
           , AC.EFFECTIVE_DATE_FR
           , AC.EFFECTIVE_DATE_TO
        FROM FI_ACCOUNT_CONTROL AC
       WHERE AC.ACCOUNT_SET_ID          = W_ACCOUNT_SET_ID
         AND AC.ACCOUNT_GROUP_ID        = W_ACCOUNT_GROUP_ID
         AND AC.SOB_ID                  = W_SOB_ID
/*         AND AC.ORG_ID                  = W_ORG_ID*/
      ;

  END SELECT_ACCOUNT_CONTROL;

-- 회계 계정통제관리 삽입.
  PROCEDURE INSERT_ACCOUNT_CONTROL
            ( P_ACCOUNT_CONTROL_ID OUT FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE       IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            , P_ACCOUNT_DESC       IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE
            , P_ACCOUNT_DESC_S     IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC_S%TYPE
            , P_ACCOUNT_SET_ID     IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , P_ACCOUNT_GROUP_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_GROUP_ID%TYPE
            , P_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , P_ACCOUNT_GL_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_GL_ID%TYPE
            , P_ACCOUNT_FS_TYPE    IN FI_ACCOUNT_CONTROL.ACCOUNT_FS_TYPE%TYPE
            , P_CUSTOMER_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CUSTOMER_ENABLED_FLAG%TYPE
            , P_ACCOUNT_ENABLED_FLAG  IN FI_ACCOUNT_CONTROL.ACCOUNT_ENABLED_FLAG%TYPE
            , P_BANK_ACCOUNT_FLAG     IN FI_ACCOUNT_CONTROL.BANK_ACCOUNT_FLAG%TYPE
            , P_CURRENCY_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CURRENCY_ENABLED_FLAG%TYPE
            , P_ACCOUNT_MICH_YN    IN FI_ACCOUNT_CONTROL.ACCOUNT_MICH_YN%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.VAT_ENABLED_FLAG%TYPE
            , P_BUDGET_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_ENABLED_FLAG%TYPE
            , P_BUDGET_CONTROL_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_CONTROL_FLAG%TYPE
            , P_BUDGET_BELONG_FLAG IN FI_ACCOUNT_CONTROL.BUDGET_BELONG_FLAG%TYPE
            , P_COST_CENTER_FLAG   IN FI_ACCOUNT_CONTROL.COST_CENTER_FLAG%TYPE
            , P_LIQUIDATE_METHOD_TYPE IN FI_ACCOUNT_CONTROL.LIQUIDATE_METHOD_TYPE%TYPE
            , P_ACCOUNT_CLASS_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_CLASS_ID%TYPE
            , P_REMARK             IN FI_ACCOUNT_CONTROL.REMARK%TYPE
            , P_ENABLED_FLAG       IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            , P_EFFECTIVE_DATE_FR  IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_FR%TYPE
            , P_EFFECTIVE_DATE_TO  IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_TO%TYPE
            , P_SOB_ID             IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , P_ORG_ID             IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            , P_USER_ID            IN FI_ACCOUNT_CONTROL.CREATED_BY%TYPE
            )
  AS
    V_SYSDATE                      FI_ACCOUNT_CONTROL.CREATION_DATE%TYPE;
    V_RECORD_COUNT                 NUMBER := 0;

  BEGIN
    V_SYSDATE := GET_LOCAL_DATE(P_SOB_ID);
    V_RECORD_COUNT := 0;
    BEGIN
      SELECT COUNT(GAC.ACCOUNT_CODE) AS RECORD_COUNT
        INTO V_RECORD_COUNT
        FROM FI_ACCOUNT_CONTROL GAC
       WHERE GAC.ACCOUNT_CODE     = P_ACCOUNT_CODE
         AND GAC.ACCOUNT_SET_ID   = P_ACCOUNT_GROUP_ID
         AND GAC.SOB_ID           = P_SOB_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      V_RECORD_COUNT := 0;
    END;
    IF V_RECORD_COUNT > 0 THEN
     RAISE ERRNUMS.Exist_Data;
    END IF;
-------------------------------------------------
    SELECT FI_ACCOUNT_CONTROL_S1.NEXTVAL
     INTO P_ACCOUNT_CONTROL_ID
     FROM DUAL;

    INSERT INTO FI_ACCOUNT_CONTROL
    ( ACCOUNT_CONTROL_ID
    , ACCOUNT_CODE
    , ACCOUNT_DESC
    , ACCOUNT_DESC_S
    , ACCOUNT_SET_ID
    , ACCOUNT_GROUP_ID
    , ACCOUNT_DR_CR
    , ACCOUNT_GL_ID
    , ACCOUNT_FS_TYPE
    , CUSTOMER_ENABLED_FLAG
    , ACCOUNT_ENABLED_FLAG
    , BANK_ACCOUNT_FLAG
    , CURRENCY_ENABLED_FLAG
    , ACCOUNT_MICH_YN
    , VAT_ENABLED_FLAG
    , BUDGET_ENABLED_FLAG
    , BUDGET_CONTROL_FLAG
    , BUDGET_BELONG_FLAG
    , COST_CENTER_FLAG
    , LIQUIDATE_METHOD_TYPE
    , ACCOUNT_CLASS_ID
    , REMARK
    , ENABLED_FLAG
    , EFFECTIVE_DATE_FR
    , EFFECTIVE_DATE_TO
    , SOB_ID
    , ORG_ID
    , CREATION_DATE
    , CREATED_BY
    , LAST_UPDATE_DATE
    , LAST_UPDATED_BY )
    VALUES
    ( P_ACCOUNT_CONTROL_ID
    , P_ACCOUNT_CODE
    , P_ACCOUNT_DESC
    , P_ACCOUNT_DESC_S
    , P_ACCOUNT_SET_ID
    , P_ACCOUNT_GROUP_ID
    , P_ACCOUNT_DR_CR
    , P_ACCOUNT_GL_ID
    , P_ACCOUNT_FS_TYPE
    , P_CUSTOMER_ENABLED_FLAG
    , P_ACCOUNT_ENABLED_FLAG
    , P_BANK_ACCOUNT_FLAG
    , P_CURRENCY_ENABLED_FLAG
    , P_ACCOUNT_MICH_YN
    , P_VAT_ENABLED_FLAG
    , P_BUDGET_ENABLED_FLAG
    , P_BUDGET_CONTROL_FLAG
    , P_BUDGET_BELONG_FLAG
    , P_COST_CENTER_FLAG
    , P_LIQUIDATE_METHOD_TYPE
    , P_ACCOUNT_CLASS_ID
    , P_REMARK
    , P_ENABLED_FLAG
    , P_EFFECTIVE_DATE_FR
    , P_EFFECTIVE_DATE_TO
    , P_SOB_ID
    , P_ORG_ID
    , V_SYSDATE
    , P_USER_ID
    , V_SYSDATE
    , P_USER_ID );

  EXCEPTION
    WHEN ERRNUMS.Exist_Data THEN
    RAISE_APPLICATION_ERROR(ERRNUMS.Exist_Data_Code, ERRNUMS.Exist_Data_Desc);
  END INSERT_ACCOUNT_CONTROL;

-- 회계 계정통제관리 수정.
  PROCEDURE UPDATE_ACCOUNT_CONTROL
            ( W_ACCOUNT_CONTROL_ID IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_DESC       IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE
            , P_ACCOUNT_DESC_S     IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC_S%TYPE
            , P_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , P_ACCOUNT_GL_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_GL_ID%TYPE
            , P_ACCOUNT_FS_TYPE    IN FI_ACCOUNT_CONTROL.ACCOUNT_FS_TYPE%TYPE
            , P_CUSTOMER_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CUSTOMER_ENABLED_FLAG%TYPE
            , P_ACCOUNT_ENABLED_FLAG  IN FI_ACCOUNT_CONTROL.ACCOUNT_ENABLED_FLAG%TYPE
            , P_BANK_ACCOUNT_FLAG     IN FI_ACCOUNT_CONTROL.BANK_ACCOUNT_FLAG%TYPE
            , P_CURRENCY_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CURRENCY_ENABLED_FLAG%TYPE
            , P_ACCOUNT_MICH_YN    IN FI_ACCOUNT_CONTROL.ACCOUNT_MICH_YN%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.VAT_ENABLED_FLAG%TYPE
            , P_BUDGET_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_ENABLED_FLAG%TYPE
            , P_BUDGET_CONTROL_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_CONTROL_FLAG%TYPE
            , P_BUDGET_BELONG_FLAG IN FI_ACCOUNT_CONTROL.BUDGET_BELONG_FLAG%TYPE
            , P_COST_CENTER_FLAG   IN FI_ACCOUNT_CONTROL.COST_CENTER_FLAG%TYPE
            , P_LIQUIDATE_METHOD_TYPE IN FI_ACCOUNT_CONTROL.LIQUIDATE_METHOD_TYPE%TYPE
            , P_ACCOUNT_CLASS_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_CLASS_ID%TYPE
            , P_REMARK             IN FI_ACCOUNT_CONTROL.REMARK%TYPE
            , P_ENABLED_FLAG       IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            , P_EFFECTIVE_DATE_FR  IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_FR%TYPE
            , P_EFFECTIVE_DATE_TO  IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_TO%TYPE
            , P_USER_ID            IN FI_ACCOUNT_CONTROL.CREATED_BY%TYPE
            )
  AS
  BEGIN
    UPDATE FI_ACCOUNT_CONTROL
      SET ACCOUNT_DESC       = P_ACCOUNT_DESC
        , ACCOUNT_DESC_S     = P_ACCOUNT_DESC_S
        , ACCOUNT_DR_CR      = P_ACCOUNT_DR_CR
        , ACCOUNT_GL_ID      = P_ACCOUNT_GL_ID
        , ACCOUNT_FS_TYPE    = P_ACCOUNT_FS_TYPE
        , CUSTOMER_ENABLED_FLAG = P_CUSTOMER_ENABLED_FLAG
        , ACCOUNT_ENABLED_FLAG  = P_ACCOUNT_ENABLED_FLAG
        , BANK_ACCOUNT_FLAG     = P_BANK_ACCOUNT_FLAG
        , CURRENCY_ENABLED_FLAG = P_CURRENCY_ENABLED_FLAG
        , ACCOUNT_MICH_YN    = P_ACCOUNT_MICH_YN
        , VAT_ENABLED_FLAG   = P_VAT_ENABLED_FLAG
        , BUDGET_ENABLED_FLAG   = P_BUDGET_ENABLED_FLAG
        , BUDGET_CONTROL_FLAG   = P_BUDGET_CONTROL_FLAG
        , BUDGET_BELONG_FLAG    = P_BUDGET_BELONG_FLAG
        , COST_CENTER_FLAG   = P_COST_CENTER_FLAG
        , LIQUIDATE_METHOD_TYPE = P_LIQUIDATE_METHOD_TYPE
        , ACCOUNT_CLASS_ID      = P_ACCOUNT_CLASS_ID
        , REMARK             = P_REMARK
        , ENABLED_FLAG       = P_ENABLED_FLAG
        , EFFECTIVE_DATE_FR  = P_EFFECTIVE_DATE_FR
        , EFFECTIVE_DATE_TO  = P_EFFECTIVE_DATE_TO
        , LAST_UPDATE_DATE   = GET_LOCAL_DATE(SOB_ID)
        , LAST_UPDATED_BY    = P_USER_ID
    WHERE ACCOUNT_CONTROL_ID = W_ACCOUNT_CONTROL_ID
    ;

  END UPDATE_ACCOUNT_CONTROL;

---------------------------------------------------------------------------------------------------
-- 계정 조회.
  PROCEDURE SELECT_ACCOUNT_CODE
            ( P_CURSOR                OUT TYPES.TCURSOR
            , W_ACCOUNT_CODE_FR       IN VARCHAR2
            , W_ACCOUNT_CODE_TO       IN VARCHAR2
            , W_SOB_ID                IN NUMBER
            , W_ORG_ID                IN NUMBER
            )
  AS
  BEGIN
    OPEN P_CURSOR FOR
      SELECT AC.ACCOUNT_CONTROL_ID
          , AC.ACCOUNT_CODE
          , AC.ACCOUNT_DESC
        FROM FI_ACCOUNT_CONTROL AC
      WHERE AC.SOB_ID               = W_SOB_ID
        AND AC.ACCOUNT_CODE         BETWEEN NVL(W_ACCOUNT_CODE_FR, AC.ACCOUNT_CODE) AND NVL(W_ACCOUNT_CODE_TO, AC.ACCOUNT_CODE)
      ORDER BY AC.ACCOUNT_CODE
      ;

  END SELECT_ACCOUNT_CODE;

---------------------------------------------------------------------------------------------------
-- 회계계정관리 LOOKUP 조회.
  PROCEDURE LU_ACCOUNT_CONTROL
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_SET_ID       IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE DEFAULT NULL
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            )
  AS
    V_STD_DATE                       DATE := NULL;
    V_ACCOUNT_SET_ID                 FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE;
  BEGIN
    IF W_ENABLED_YN = 'Y' THEN
      V_STD_DATE := GET_LOCAL_DATE(W_SOB_ID);
    END IF;
    IF W_ACCOUNT_SET_ID IS NULL THEN
      V_ACCOUNT_SET_ID := FI_ACCOUNT_BOOK_G.OPERATING_ACCOUNT_SET_F(W_SOB_ID);
    ELSE 
      V_ACCOUNT_SET_ID := W_ACCOUNT_SET_ID;
    END IF;
    OPEN P_CURSOR3 FOR
      SELECT AC.ACCOUNT_DESC
           , AC.ACCOUNT_CODE
           , AC.ACCOUNT_CONTROL_ID
           , AC.ACCOUNT_DR_CR
           , AC.CUSTOMER_ENABLED_FLAG
           , AC.ACCOUNT_ENABLED_FLAG
           , AC.BANK_ACCOUNT_FLAG
           , AC.CURRENCY_ENABLED_FLAG
           , AC.VAT_ENABLED_FLAG
           , AC.ACCOUNT_MICH_YN
           , AC.BUDGET_ENABLED_FLAG
           , AC.BUDGET_CONTROL_FLAG
           , AC.BUDGET_BELONG_FLAG
           , AC.COST_CENTER_FLAG
        FROM FI_ACCOUNT_CONTROL AC
       WHERE AC.ACCOUNT_SET_ID          = V_ACCOUNT_SET_ID
         AND AC.SOB_ID                  = W_SOB_ID
         AND AC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', AC.ENABLED_FLAG)
         AND AC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_FR)
         AND (AC.EFFECTIVE_DATE_TO IS NULL OR AC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_TO))
      ORDER BY AC.ACCOUNT_CODE
      ;

  END LU_ACCOUNT_CONTROL;

-- 회계계정관리 LOOKUP 조회.
  PROCEDURE LU_ACCOUNT_CONTROL_CODE
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            )
  AS
    V_STD_DATE                       DATE := NULL;

  BEGIN
    IF W_ENABLED_YN = 'Y' THEN
      V_STD_DATE := GET_LOCAL_DATE(W_SOB_ID);
    END IF;

    OPEN P_CURSOR3 FOR
      SELECT AC.ACCOUNT_CODE
           , AC.ACCOUNT_DESC
           , AC.ACCOUNT_CONTROL_ID
           , AC.ACCOUNT_DR_CR
           , AC.CUSTOMER_ENABLED_FLAG
           , AC.ACCOUNT_ENABLED_FLAG
           , AC.BANK_ACCOUNT_FLAG
           , AC.CURRENCY_ENABLED_FLAG
           , AC.VAT_ENABLED_FLAG
           , AC.ACCOUNT_MICH_YN
           , AC.BUDGET_ENABLED_FLAG
           , AC.BUDGET_CONTROL_FLAG
           , AC.BUDGET_BELONG_FLAG
           , AC.COST_CENTER_FLAG
        FROM FI_ACCOUNT_CONTROL AC
       WHERE AC.ACCOUNT_SET_ID          = FI_ACCOUNT_BOOK_G.OPERATING_ACCOUNT_SET_F(W_SOB_ID)
         AND AC.SOB_ID                  = W_SOB_ID
         AND AC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', AC.ENABLED_FLAG)
         AND AC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_FR)
         AND (AC.EFFECTIVE_DATE_TO IS NULL OR AC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_TO))
      ORDER BY AC.ACCOUNT_CODE
      ;

  END  LU_ACCOUNT_CONTROL_CODE;

-- 회계계정관리 LOOKUP 조회 ~ TO.
  PROCEDURE LU_ACCOUNT_CONTROL_FROM_TO
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_CODE_FR      IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            )
  AS
    V_STD_DATE                       DATE := NULL;

  BEGIN
    IF W_ENABLED_YN = 'Y' THEN
      V_STD_DATE := GET_LOCAL_DATE(W_SOB_ID);
    END IF;

    OPEN P_CURSOR3 FOR
      SELECT AC.ACCOUNT_CODE
           , AC.ACCOUNT_DESC
           , AC.ACCOUNT_CONTROL_ID
           , AC.ACCOUNT_DR_CR
           , AC.CUSTOMER_ENABLED_FLAG
           , AC.ACCOUNT_ENABLED_FLAG
           , AC.BANK_ACCOUNT_FLAG
           , AC.CURRENCY_ENABLED_FLAG
           , AC.VAT_ENABLED_FLAG
           , AC.ACCOUNT_MICH_YN
           , AC.BUDGET_ENABLED_FLAG
           , AC.BUDGET_CONTROL_FLAG
           , AC.BUDGET_BELONG_FLAG
           , AC.COST_CENTER_FLAG
        FROM FI_ACCOUNT_CONTROL AC
       WHERE AC.ACCOUNT_SET_ID          = FI_ACCOUNT_BOOK_G.OPERATING_ACCOUNT_SET_F(W_SOB_ID)
         AND AC.ACCOUNT_CODE            >= NVL(W_ACCOUNT_CODE_FR, AC.ACCOUNT_CODE)
         AND AC.SOB_ID                  = W_SOB_ID
         AND AC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', AC.ENABLED_FLAG)
         AND AC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_FR)
         AND (AC.EFFECTIVE_DATE_TO IS NULL OR AC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_TO))
      ORDER BY AC.ACCOUNT_CODE
      ;
  END LU_ACCOUNT_CONTROL_FROM_TO;

-- 회계계정관리 - 원장 연동 조회.
  PROCEDURE LU_LEDGER_ACCOUNT_CONTROL
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_CODE_FR      IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            , W_LEDGER_CODE          IN FI_COMMON.CODE%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            )
  AS
    V_STD_DATE                       DATE := NULL;

  BEGIN
    IF W_ENABLED_YN = 'Y' THEN
      V_STD_DATE := GET_LOCAL_DATE(W_SOB_ID);
    END IF;

    OPEN P_CURSOR3 FOR
      SELECT AC.ACCOUNT_CODE
           , AC.ACCOUNT_DESC
           , AC.ACCOUNT_CONTROL_ID
           , AC.ACCOUNT_DR_CR
           , AC.CUSTOMER_ENABLED_FLAG
           , AC.ACCOUNT_ENABLED_FLAG
           , AC.BANK_ACCOUNT_FLAG
           , AC.CURRENCY_ENABLED_FLAG
           , AC.VAT_ENABLED_FLAG
           , AC.ACCOUNT_MICH_YN
           , AC.BUDGET_ENABLED_FLAG
           , AC.BUDGET_CONTROL_FLAG
           , AC.BUDGET_BELONG_FLAG
           , AC.COST_CENTER_FLAG
        FROM FI_ACCOUNT_CONTROL AC
       WHERE AC.ACCOUNT_SET_ID          = FI_ACCOUNT_BOOK_G.OPERATING_ACCOUNT_SET_F(W_SOB_ID)
         AND AC.ACCOUNT_CODE            >= NVL(W_ACCOUNT_CODE_FR, AC.ACCOUNT_CODE)
         AND AC.SOB_ID                  = W_SOB_ID
         AND EXISTS ( SELECT 'X'
                        FROM FI_COMMON FC
                      WHERE FC.GROUP_CODE           = 'GL_TYPE'
                        AND FC.COMMON_ID            = AC.ACCOUNT_GL_ID
                        AND FC.SOB_ID               = AC.SOB_ID
                        AND FC.CODE                 = W_LEDGER_CODE
                      )
         AND AC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', AC.ENABLED_FLAG)
         AND AC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_FR)
         AND (AC.EFFECTIVE_DATE_TO IS NULL OR AC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_TO))
      ORDER BY AC.ACCOUNT_CODE
      ;

  END LU_LEDGER_ACCOUNT_CONTROL;

-- 회계계정관리 및 통제 LOOKUP 조회.
  PROCEDURE LU_JOURNAL_ACCOUNT_CONTROL
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_JOURNAL_HEADER_ID    IN FI_AUTO_JOURNAL_HEADER.JOURNAL_HEADER_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            )
  AS
    V_STD_DATE                       DATE := NULL;

  BEGIN
    IF W_ENABLED_YN = 'Y' THEN
      V_STD_DATE := GET_LOCAL_DATE(W_SOB_ID);
    END IF;

    OPEN P_CURSOR3 FOR
      SELECT AC.ACCOUNT_DESC
           , AC.ACCOUNT_CODE
           , AC.ACCOUNT_CONTROL_ID
           , AJL.ACCOUNT_DR_CR
           , AC.CUSTOMER_ENABLED_FLAG
           , AC.ACCOUNT_ENABLED_FLAG
           , AC.BANK_ACCOUNT_FLAG
           , AC.CURRENCY_ENABLED_FLAG
           , AC.VAT_ENABLED_FLAG
           , AC.ACCOUNT_MICH_YN
           , AC.BUDGET_ENABLED_FLAG
           , AC.BUDGET_CONTROL_FLAG
           , AC.BUDGET_BELONG_FLAG
           , AC.COST_CENTER_FLAG
        FROM FI_ACCOUNT_CONTROL AC
          , FI_AUTO_JOURNAL_LINE AJL
       WHERE AC.ACCOUNT_CONTROL_ID = AJL.ACCOUNT_CONTROL_ID
         AND AC.SOB_ID             = AJL.SOB_ID
         AND AC.ACCOUNT_SET_ID          = FI_ACCOUNT_BOOK_G.OPERATING_ACCOUNT_SET_F(W_SOB_ID)
         AND AC.SOB_ID                  = W_SOB_ID
         AND AC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', AC.ENABLED_FLAG)
         AND AC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_FR)
         AND (AC.EFFECTIVE_DATE_TO IS NULL OR AC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_TO))
         AND AJL.JOURNAL_HEADER_ID  = W_JOURNAL_HEADER_ID
         AND AJL.DISPLAY_YN         = 'Y'
         AND AJL.ENABLED_FLAG       = DECODE(W_ENABLED_YN, 'Y', 'Y', AJL.ENABLED_FLAG)
         AND AJL.EFFECTIVE_DATE_FR  <= NVL(V_STD_DATE, AJL.EFFECTIVE_DATE_FR)
         AND (AJL.EFFECTIVE_DATE_TO IS NULL OR AJL.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, AJL.EFFECTIVE_DATE_TO))
      ORDER BY AJL.SEQ, AC.ACCOUNT_CODE
      ;

  END LU_JOURNAL_ACCOUNT_CONTROL;

-- 회계계정관리 및 통제 LOOKUP - 예산 연동 조회.
  PROCEDURE LU_BUDGET_ACCOUNT_CONTROL
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_DR_CR        IN VARCHAR2
            , W_CONNECT_PERSON_ID    IN FI_BUDGET_CONTROL.PERSON_ID%TYPE
            , W_BUDGET_DEPT_ID       IN FI_BUDGET.DEPT_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN           IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            )
  AS
    V_STD_DATE                       DATE := NULL;

  BEGIN
    IF W_ENABLED_YN = 'Y' THEN
      V_STD_DATE := GET_LOCAL_DATE(W_SOB_ID);
    END IF;

    OPEN P_CURSOR3 FOR
      SELECT AC.ACCOUNT_DESC
           , AC.ACCOUNT_CODE
           , AC.ACCOUNT_CONTROL_ID
           , AC.ACCOUNT_DR_CR
           , AC.CUSTOMER_ENABLED_FLAG
           , AC.ACCOUNT_ENABLED_FLAG
           , AC.BANK_ACCOUNT_FLAG
           , AC.CURRENCY_ENABLED_FLAG
           , AC.VAT_ENABLED_FLAG
           , AC.ACCOUNT_MICH_YN
           , AC.BUDGET_ENABLED_FLAG
           , AC.BUDGET_CONTROL_FLAG
           , AC.BUDGET_BELONG_FLAG
           , AC.COST_CENTER_FLAG
           , 0 AS BUDGET_REMAIN_AMOUNT
        FROM FI_ACCOUNT_CONTROL AC
       WHERE AC.ACCOUNT_SET_ID          = FI_ACCOUNT_BOOK_G.OPERATING_ACCOUNT_SET_F(W_SOB_ID)
         AND AC.SOB_ID                  = W_SOB_ID
--         AND AC.BUDGET_CONTROL_FLAG     = DECODE(W_ACCOUNT_DR_CR, '1', 'Y', 'N')
         AND AC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', AC.ENABLED_FLAG)
         AND AC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_FR)
         AND (AC.EFFECTIVE_DATE_TO IS NULL OR AC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, AC.EFFECTIVE_DATE_TO))
      ORDER BY AC.ACCOUNT_CODE
      ;

  END LU_BUDGET_ACCOUNT_CONTROL;

---------------------------------------------------------------------------------------------------
-- 회계계정 코드.
  FUNCTION ACCOUNT_CODE_F
            ( W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            ) RETURN VARCHAR2
  AS
    V_ACCOUNT_CODE                   FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE := NULL;
  BEGIN
    BEGIN
      SELECT AC.ACCOUNT_CODE
        INTO V_ACCOUNT_CODE
        FROM FI_ACCOUNT_CONTROL AC
       WHERE AC.ACCOUNT_CONTROL_ID      = W_ACCOUNT_CONTROL_ID
         AND AC.SOB_ID                  = W_SOB_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      V_ACCOUNT_CODE := NULL;
    END;
    RETURN V_ACCOUNT_CODE;

  END ACCOUNT_CODE_F;

--계정명 반환
  FUNCTION ACCOUNT_DESC_F
           ( W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            ) RETURN VARCHAR2
  AS
    V_ACCOUNT_DESC                   FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE := NULL;
  BEGIN
    BEGIN
      SELECT AC.ACCOUNT_DESC
        INTO V_ACCOUNT_DESC
        FROM FI_ACCOUNT_CONTROL AC
       WHERE AC.ACCOUNT_CONTROL_ID      = W_ACCOUNT_CONTROL_ID
         AND AC.SOB_ID                  = W_SOB_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      V_ACCOUNT_DESC := NULL;
    END;
    RETURN V_ACCOUNT_DESC;
  END ACCOUNT_DESC_F;

--계정명 반환(계정세트와 계정코드를 바탕으로 계정명 반환함); 2011-08-11, 임동언
  FUNCTION ACCOUNT_DESC_F2
            ( W_SOB_ID          IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ORG_ID          IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            , W_ACCOUNT_SET_ID  IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , W_ACCOUNT_CODE    IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            ) RETURN VARCHAR2
  AS
    V_ACCOUNT_DESC  FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE := NULL;   --계정명
  BEGIN
    SELECT ACCOUNT_DESC
    INTO V_ACCOUNT_DESC
    FROM FI_ACCOUNT_CONTROL
    WHERE SOB_ID          = W_SOB_ID
      AND ORG_ID          = W_ORG_ID
      AND ACCOUNT_SET_ID  = W_ACCOUNT_SET_ID
      AND ACCOUNT_CODE    = W_ACCOUNT_CODE
    ;
    RETURN V_ACCOUNT_DESC;
  END ACCOUNT_DESC_F2;

-- 회계계정 분류 타입.
  PROCEDURE ACCOUNT_CLASS_TYPE_P
            ( W_ACCOUNT_BOOK_ID      IN FI_ACCOUNT_BOOK.ACCOUNT_BOOK_ID%TYPE
            , W_ACCOUNT_DR_CR        IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ORG_ID               IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            , O_ACCOUNT_CLASS_YN     OUT VARCHAR2
            , O_ACCOUNT_CLASS_TYPE   OUT VARCHAR2
            , O_BTN_CAPTION          OUT VARCHAR2
            )
  AS
    V_ACCOUNT_SET_ID                 FI_ACCOUNT_BOOK.ACCOUNT_SET_ID%TYPE;

  BEGIN
    V_ACCOUNT_SET_ID := FI_ACCOUNT_BOOK_G.OPERATING_ACCOUNT_SET_F(W_SOB_ID);
    BEGIN
      SELECT CASE
               WHEN W_ACCOUNT_DR_CR = '1' THEN NVL(ACL.DR_VALUE, 'N')
               WHEN W_ACCOUNT_DR_CR = '2' THEN NVL(ACL.CR_VALUE, 'N')
               ELSE 'N'
             END AS DRCR_VALUE
           , ACL.ACCOUNT_CLASS_TYPE
        INTO O_ACCOUNT_CLASS_YN
           , O_ACCOUNT_CLASS_TYPE
        FROM FI_ACCOUNT_CONTROL AC
          , FI_ACCOUNT_CLASS_V ACL
       WHERE AC.ACCOUNT_CLASS_ID        = ACL.ACCOUNT_CLASS_ID
         AND AC.ACCOUNT_SET_ID          = V_ACCOUNT_SET_ID
         AND AC.ACCOUNT_CONTROL_ID      = W_ACCOUNT_CONTROL_ID
         AND AC.SOB_ID                  = W_SOB_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      O_ACCOUNT_CLASS_YN := NULL;
      O_ACCOUNT_CLASS_TYPE := NULL;
    END;
    -- 계정 분류.
    O_BTN_CAPTION := NULL;
    IF O_ACCOUNT_CLASS_TYPE = 'RECEIVABLE_NOTE' AND O_ACCOUNT_CLASS_YN = 'Y' THEN
    -- 받을 어음/차대 구분없이 적용.
      O_BTN_CAPTION := EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10139', NULL);
    ELSIF O_ACCOUNT_CLASS_TYPE = 'CREDIT_SALES' AND O_ACCOUNT_CLASS_YN = 'Y' THEN
    -- 외상매출.
      O_ACCOUNT_CLASS_TYPE := 'LIQUIDATE';
      O_BTN_CAPTION := EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10148', NULL);
    ELSIF O_ACCOUNT_CLASS_TYPE = 'CREDIT_PURCHASE' AND O_ACCOUNT_CLASS_YN = 'Y' THEN
    -- 외상매입.
      O_ACCOUNT_CLASS_TYPE := 'LIQUIDATE';
      O_BTN_CAPTION := EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10149', NULL);
    ELSIF O_ACCOUNT_CLASS_TYPE = 'ADVANCE_RECEIVED' AND O_ACCOUNT_CLASS_YN = 'Y' THEN
    -- 선수금.
      O_ACCOUNT_CLASS_TYPE := 'LIQUIDATE';
      O_BTN_CAPTION := EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10152', NULL);
    ELSIF O_ACCOUNT_CLASS_TYPE = 'ACCOUNTS_PAYABLE' AND O_ACCOUNT_CLASS_YN = 'Y' THEN
    -- 미지급금.
      O_ACCOUNT_CLASS_TYPE := 'LIQUIDATE';
      O_BTN_CAPTION := EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10174', NULL);
    ELSIF O_ACCOUNT_CLASS_TYPE = 'AP_VAT' AND O_ACCOUNT_CLASS_YN = 'Y' THEN
    -- 감가상각자산 취득내용.
      O_ACCOUNT_CLASS_TYPE := 'AP_VAT';
      O_BTN_CAPTION := EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10270', NULL);
    END IF;
  END ACCOUNT_CLASS_TYPE_P;

-- 회계계정의 반제처리 방법.
  PROCEDURE LIQUIDATE_METHOD_TYPE_P
            ( W_ACCOUNT_CONTROL_ID          IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID                      IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , O_LIQUIDATE_METHOD_TYPE       OUT VARCHAR2
            , O_LIQUIDATE_METHOD_TYPE_FLAG  OUT VARCHAR2
            )
  AS
  BEGIN
    BEGIN
      SELECT AC.LIQUIDATE_METHOD_TYPE
           , FI_COMMON_G.CODE_VALUE_F('LIQUIDATE_METHOD_TYPE', AC.LIQUIDATE_METHOD_TYPE, 'VALUE1', AC.SOB_ID) AS LIQUIDATE_METHOD_TYPE_FLAG
        INTO O_LIQUIDATE_METHOD_TYPE
           , O_LIQUIDATE_METHOD_TYPE_FLAG
        FROM FI_ACCOUNT_CONTROL AC
       WHERE AC.ACCOUNT_CONTROL_ID      = W_ACCOUNT_CONTROL_ID
         AND AC.SOB_ID                  = W_SOB_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      O_LIQUIDATE_METHOD_TYPE := '10';
      O_LIQUIDATE_METHOD_TYPE_FLAG := 'MANUAL';
    END;

  END LIQUIDATE_METHOD_TYPE_P;

---------------------------------------------------------------------------------------------------
-- 회계 계정통제관리 조회.
  PROCEDURE ACCOUNT_CONTROL_SELECT
            ( P_CURSOR               OUT TYPES.TCURSOR
            , W_ACCOUNT_SET_ID       IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ORG_ID               IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            )
  AS
  BEGIN
    --RAISE_APPLICATION_ERROR(-20001, W_ACCOUNT_SET_ID || '/' || W_SOB_ID);
    OPEN P_CURSOR FOR
      SELECT AC.ACCOUNT_CONTROL_ID
           , AC.ACCOUNT_CODE
           , AC.ACCOUNT_DESC
           , AC.ACCOUNT_DESC_S
           , AC.ACCOUNT_SET_ID
           , AC.ACCOUNT_DR_CR
           , FI_COMMON_G.CODE_NAME_F('ACCOUNT_DR_CR', AC.ACCOUNT_DR_CR, AC.SOB_ID) AS ACCOUNT_DR_CR_NAME
           , AC.ACCOUNT_GL_ID
           , FI_COMMON_G.ID_NAME_F(AC.ACCOUNT_GL_ID) AS ACCOUNT_GL_NAME
           , AC.ACCOUNT_FS_TYPE
           , FI_COMMON_G.CODE_NAME_F('FORM_TYPE', AC.ACCOUNT_FS_TYPE, AC.SOB_ID) AS ACCOUNT_FS_TYPE_NAME
           , AC.CUSTOMER_ENABLED_FLAG
           , AC.ACCOUNT_ENABLED_FLAG
           , AC.BANK_ACCOUNT_FLAG
           , AC.CURRENCY_ENABLED_FLAG
           , AC.ACCOUNT_MICH_YN
           , AC.VAT_ENABLED_FLAG
           , AC.BUDGET_ENABLED_FLAG
           , AC.BUDGET_CONTROL_FLAG
           , AC.BUDGET_BELONG_FLAG
           , AC.COST_CENTER_FLAG
           , AC.LIQUIDATE_METHOD_TYPE
           , FI_COMMON_G.CODE_NAME_F('LIQUIDATE_METHOD_TYPE', AC.LIQUIDATE_METHOD_TYPE, AC.SOB_ID) AS LIQUIDATE_METHOD_TYPE_NAME
           , AC.ACCOUNT_CLASS_ID
           , FI_COMMON_G.ID_NAME_F(AC.ACCOUNT_CLASS_ID) AS ACCOUNT_CLASS_NAME
           , AC.REMARK
           , AC.ENABLED_FLAG
           , AC.EFFECTIVE_DATE_FR
           , AC.EFFECTIVE_DATE_TO
           , AC.UP_ACCOUNT_CODE
           , U_AC.ACCOUNT_DESC AS UP_ACCOUNT_DESC
           , AC.MNS_ACCOUNT_FLAG
           , AC.RELATE_ACCOUNT_CODE
           , R_AC.ACCOUNT_DESC AS RELATE_ACCOUNT_DESC
           , FI_COMMON_G.ID_NAME_F(AC.REFER1_ID) AS REFER1_NAME
           , AC.REFER1_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER2_ID) AS REFER2_NAME
           , AC.REFER2_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER3_ID) AS REFER3_NAME           
           , AC.REFER3_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER4_ID) AS REFER4_NAME
           , AC.REFER4_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER5_ID) AS REFER5_NAME
           , AC.REFER5_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER6_ID) AS REFER6_NAME
           , AC.REFER6_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER7_ID) AS REFER7_NAME
           , AC.REFER7_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER8_ID) AS REFER8_NAME
           , AC.REFER8_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER9_ID) AS REFER9_NAME
           , AC.REFER9_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER10_ID) AS REFER10_NAME
           , AC.REFER10_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER11_ID) AS REFER11_NAME
           , AC.REFER11_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER12_ID) AS REFER12_NAME
           , AC.REFER12_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER13_ID) AS REFER13_NAME
           , AC.REFER13_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER14_ID) AS REFER14_NAME
           , AC.REFER14_ID           
           , AC.DR_NEED_YN1
           , AC.DR_NEED_YN2
           , AC.DR_NEED_YN3
           , AC.DR_NEED_YN4
           , AC.DR_NEED_YN5
           , AC.DR_NEED_YN6
           , AC.DR_NEED_YN7
           , AC.DR_NEED_YN8
           , AC.DR_NEED_YN9
           , AC.DR_NEED_YN10
           , AC.DR_NEED_YN11
           , AC.DR_NEED_YN12
           , AC.DR_NEED_YN13
           , AC.DR_NEED_YN14
           , AC.CR_NEED_YN1
           , AC.CR_NEED_YN2
           , AC.CR_NEED_YN3
           , AC.CR_NEED_YN4
           , AC.CR_NEED_YN5
           , AC.CR_NEED_YN6
           , AC.CR_NEED_YN7
           , AC.CR_NEED_YN8
           , AC.CR_NEED_YN9
           , AC.CR_NEED_YN10
           , AC.CR_NEED_YN11
           , AC.CR_NEED_YN12
           , AC.CR_NEED_YN13
           , AC.CR_NEED_YN14
        FROM FI_ACCOUNT_CONTROL AC
          , FI_ACCOUNT_CONTROL U_AC
          , FI_ACCOUNT_CONTROL R_AC
       WHERE AC.UP_ACCOUNT_CODE         = U_AC.ACCOUNT_CODE(+)
         AND AC.SOB_ID                  = U_AC.SOB_ID(+)
         AND AC.RELATE_ACCOUNT_CODE     = R_AC.ACCOUNT_CODE(+)
         AND AC.SOB_ID                  = R_AC.SOB_ID(+)
         AND AC.ACCOUNT_SET_ID          = W_ACCOUNT_SET_ID
         AND AC.ACCOUNT_CONTROL_ID      = NVL(W_ACCOUNT_CONTROL_ID, AC.ACCOUNT_CONTROL_ID)
         AND AC.SOB_ID                  = W_SOB_ID
       ORDER BY AC.ACCOUNT_CODE
      ;

  END ACCOUNT_CONTROL_SELECT;

-- 회계 계정통제관리 삽입.
  PROCEDURE ACCOUNT_CONTROL_INSERT
            ( P_ACCOUNT_CONTROL_ID    OUT FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID                IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , P_ORG_ID                IN FI_ACCOUNT_CONTROL.ORG_ID%TYPE
            , P_ACCOUNT_CODE          IN FI_ACCOUNT_CONTROL.ACCOUNT_CODE%TYPE
            , P_ACCOUNT_DESC          IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE
            , P_ACCOUNT_DESC_S        IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC_S%TYPE
            , P_ACCOUNT_SET_ID        IN FI_ACCOUNT_CONTROL.ACCOUNT_SET_ID%TYPE
            , P_ACCOUNT_DR_CR         IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , P_ACCOUNT_GL_ID         IN FI_ACCOUNT_CONTROL.ACCOUNT_GL_ID%TYPE
            , P_ACCOUNT_FS_TYPE       IN FI_ACCOUNT_CONTROL.ACCOUNT_FS_TYPE%TYPE
            , P_CUSTOMER_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CUSTOMER_ENABLED_FLAG%TYPE
            , P_ACCOUNT_ENABLED_FLAG  IN FI_ACCOUNT_CONTROL.ACCOUNT_ENABLED_FLAG%TYPE
            , P_BANK_ACCOUNT_FLAG     IN FI_ACCOUNT_CONTROL.BANK_ACCOUNT_FLAG%TYPE
            , P_CURRENCY_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CURRENCY_ENABLED_FLAG%TYPE
            , P_ACCOUNT_MICH_YN       IN FI_ACCOUNT_CONTROL.ACCOUNT_MICH_YN%TYPE
            , P_VAT_ENABLED_FLAG      IN FI_ACCOUNT_CONTROL.VAT_ENABLED_FLAG%TYPE
            , P_BUDGET_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_ENABLED_FLAG%TYPE
            , P_BUDGET_CONTROL_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_CONTROL_FLAG%TYPE
            , P_BUDGET_BELONG_FLAG    IN FI_ACCOUNT_CONTROL.BUDGET_BELONG_FLAG%TYPE
            , P_COST_CENTER_FLAG      IN FI_ACCOUNT_CONTROL.COST_CENTER_FLAG%TYPE
            , P_LIQUIDATE_METHOD_TYPE IN FI_ACCOUNT_CONTROL.LIQUIDATE_METHOD_TYPE%TYPE
            , P_ACCOUNT_CLASS_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_CLASS_ID%TYPE
            , P_REMARK                IN FI_ACCOUNT_CONTROL.REMARK%TYPE
            , P_ENABLED_FLAG          IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            , P_EFFECTIVE_DATE_FR     IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_FR%TYPE
            , P_EFFECTIVE_DATE_TO     IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_TO%TYPE
            , P_USER_ID               IN FI_ACCOUNT_CONTROL.CREATED_BY%TYPE
            , P_UP_ACCOUNT_CODE       IN FI_ACCOUNT_CONTROL.UP_ACCOUNT_CODE%TYPE
            , P_REFER1_ID             IN FI_ACCOUNT_CONTROL.REFER1_ID%TYPE
            , P_REFER2_ID             IN FI_ACCOUNT_CONTROL.REFER2_ID%TYPE
            , P_REFER3_ID             IN FI_ACCOUNT_CONTROL.REFER3_ID%TYPE
            , P_REFER4_ID             IN FI_ACCOUNT_CONTROL.REFER4_ID%TYPE
            , P_REFER5_ID             IN FI_ACCOUNT_CONTROL.REFER5_ID%TYPE
            , P_REFER6_ID             IN FI_ACCOUNT_CONTROL.REFER6_ID%TYPE
            , P_REFER7_ID             IN FI_ACCOUNT_CONTROL.REFER7_ID%TYPE
            , P_REFER8_ID             IN FI_ACCOUNT_CONTROL.REFER8_ID%TYPE
            , P_REFER9_ID             IN FI_ACCOUNT_CONTROL.REFER9_ID%TYPE
            , P_REFER10_ID            IN FI_ACCOUNT_CONTROL.REFER10_ID%TYPE
            , P_REFER11_ID            IN FI_ACCOUNT_CONTROL.REFER11_ID%TYPE
            , P_REFER12_ID            IN FI_ACCOUNT_CONTROL.REFER12_ID%TYPE
            , P_REFER13_ID            IN FI_ACCOUNT_CONTROL.REFER13_ID%TYPE
            , P_REFER14_ID            IN FI_ACCOUNT_CONTROL.REFER14_ID%TYPE
            , P_DR_NEED_YN1           IN FI_ACCOUNT_CONTROL.DR_NEED_YN1%TYPE
            , P_DR_NEED_YN2           IN FI_ACCOUNT_CONTROL.DR_NEED_YN2%TYPE
            , P_DR_NEED_YN3           IN FI_ACCOUNT_CONTROL.DR_NEED_YN3%TYPE
            , P_DR_NEED_YN4           IN FI_ACCOUNT_CONTROL.DR_NEED_YN4%TYPE
            , P_DR_NEED_YN5           IN FI_ACCOUNT_CONTROL.DR_NEED_YN5%TYPE
            , P_DR_NEED_YN6           IN FI_ACCOUNT_CONTROL.DR_NEED_YN6%TYPE
            , P_DR_NEED_YN7           IN FI_ACCOUNT_CONTROL.DR_NEED_YN7%TYPE
            , P_DR_NEED_YN8           IN FI_ACCOUNT_CONTROL.DR_NEED_YN8%TYPE
            , P_DR_NEED_YN9           IN FI_ACCOUNT_CONTROL.DR_NEED_YN9%TYPE
            , P_DR_NEED_YN10          IN FI_ACCOUNT_CONTROL.DR_NEED_YN10%TYPE
            , P_DR_NEED_YN11          IN FI_ACCOUNT_CONTROL.DR_NEED_YN11%TYPE
            , P_DR_NEED_YN12          IN FI_ACCOUNT_CONTROL.DR_NEED_YN12%TYPE
            , P_DR_NEED_YN13          IN FI_ACCOUNT_CONTROL.DR_NEED_YN13%TYPE
            , P_DR_NEED_YN14          IN FI_ACCOUNT_CONTROL.DR_NEED_YN14%TYPE
            , P_CR_NEED_YN1           IN FI_ACCOUNT_CONTROL.CR_NEED_YN1%TYPE
            , P_CR_NEED_YN2           IN FI_ACCOUNT_CONTROL.CR_NEED_YN2%TYPE
            , P_CR_NEED_YN3           IN FI_ACCOUNT_CONTROL.CR_NEED_YN3%TYPE
            , P_CR_NEED_YN4           IN FI_ACCOUNT_CONTROL.CR_NEED_YN4%TYPE
            , P_CR_NEED_YN5           IN FI_ACCOUNT_CONTROL.CR_NEED_YN5%TYPE
            , P_CR_NEED_YN6           IN FI_ACCOUNT_CONTROL.CR_NEED_YN6%TYPE
            , P_CR_NEED_YN7           IN FI_ACCOUNT_CONTROL.CR_NEED_YN7%TYPE
            , P_CR_NEED_YN8           IN FI_ACCOUNT_CONTROL.CR_NEED_YN8%TYPE
            , P_CR_NEED_YN9           IN FI_ACCOUNT_CONTROL.CR_NEED_YN9%TYPE
            , P_CR_NEED_YN10          IN FI_ACCOUNT_CONTROL.CR_NEED_YN10%TYPE
            , P_CR_NEED_YN11          IN FI_ACCOUNT_CONTROL.CR_NEED_YN11%TYPE
            , P_CR_NEED_YN12          IN FI_ACCOUNT_CONTROL.CR_NEED_YN12%TYPE
            , P_CR_NEED_YN13          IN FI_ACCOUNT_CONTROL.CR_NEED_YN13%TYPE
            , P_CR_NEED_YN14          IN FI_ACCOUNT_CONTROL.CR_NEED_YN14%TYPE
            , P_MNS_ACCOUNT_FLAG      IN FI_ACCOUNT_CONTROL.MNS_ACCOUNT_FLAG%TYPE
            , P_RELATE_ACCOUNT_CODE   IN FI_ACCOUNT_CONTROL.RELATE_ACCOUNT_CODE%TYPE
            )
  AS
    V_SYSDATE                      DATE := GET_LOCAL_DATE(P_SOB_ID);
    V_RECORD_COUNT                 NUMBER := 0;
  BEGIN
    V_RECORD_COUNT := 0;
    BEGIN
      SELECT COUNT(GAC.ACCOUNT_CODE) AS RECORD_COUNT
        INTO V_RECORD_COUNT
        FROM FI_ACCOUNT_CONTROL GAC
       WHERE GAC.ACCOUNT_CODE     = P_ACCOUNT_CODE
         AND GAC.ACCOUNT_SET_ID   = P_ACCOUNT_SET_ID
         AND GAC.SOB_ID           = P_SOB_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      V_RECORD_COUNT := 0;
    END;
    IF V_RECORD_COUNT > 0 THEN
     RAISE ERRNUMS.Exist_Data;
    END IF;
-------------------------------------------------
    SELECT FI_ACCOUNT_CONTROL_S1.NEXTVAL
     INTO P_ACCOUNT_CONTROL_ID
     FROM DUAL;

    INSERT INTO FI_ACCOUNT_CONTROL
    ( ACCOUNT_CONTROL_ID
    , SOB_ID 
    , ORG_ID 
    , ACCOUNT_CODE 
    , ACCOUNT_DESC 
    , ACCOUNT_DESC_S 
    , ACCOUNT_SET_ID 
    , ACCOUNT_DR_CR 
    , ACCOUNT_GL_ID 
    , ACCOUNT_FS_TYPE 
    , CUSTOMER_ENABLED_FLAG 
    , ACCOUNT_ENABLED_FLAG 
    , BANK_ACCOUNT_FLAG 
    , CURRENCY_ENABLED_FLAG 
    , ACCOUNT_MICH_YN 
    , VAT_ENABLED_FLAG 
    , BUDGET_ENABLED_FLAG 
    , BUDGET_CONTROL_FLAG 
    , BUDGET_BELONG_FLAG 
    , COST_CENTER_FLAG 
    , LIQUIDATE_METHOD_TYPE 
    , ACCOUNT_CLASS_ID 
    , REMARK 
    , ENABLED_FLAG 
    , EFFECTIVE_DATE_FR 
    , EFFECTIVE_DATE_TO 
    , CREATION_DATE 
    , CREATED_BY 
    , LAST_UPDATE_DATE 
    , LAST_UPDATED_BY 
    , UP_ACCOUNT_CODE 
    , REFER1_ID 
    , REFER2_ID 
    , REFER3_ID 
    , REFER4_ID 
    , REFER5_ID 
    , REFER6_ID 
    , REFER7_ID 
    , REFER8_ID 
    , REFER9_ID 
    , REFER10_ID 
    , REFER11_ID 
    , REFER12_ID 
    , REFER13_ID 
    , REFER14_ID 
    , DR_NEED_YN1 
    , DR_NEED_YN2 
    , DR_NEED_YN3 
    , DR_NEED_YN4 
    , DR_NEED_YN5 
    , DR_NEED_YN6 
    , DR_NEED_YN7 
    , DR_NEED_YN8 
    , DR_NEED_YN9 
    , DR_NEED_YN10 
    , DR_NEED_YN11 
    , DR_NEED_YN12 
    , DR_NEED_YN13 
    , DR_NEED_YN14 
    , CR_NEED_YN1 
    , CR_NEED_YN2 
    , CR_NEED_YN3 
    , CR_NEED_YN4 
    , CR_NEED_YN5 
    , CR_NEED_YN6 
    , CR_NEED_YN7 
    , CR_NEED_YN8 
    , CR_NEED_YN9 
    , CR_NEED_YN10 
    , CR_NEED_YN11 
    , CR_NEED_YN12
    , CR_NEED_YN13 
    , CR_NEED_YN14 
    , MNS_ACCOUNT_FLAG 
    , RELATE_ACCOUNT_CODE )
    VALUES
    ( P_ACCOUNT_CONTROL_ID
    , P_SOB_ID
    , P_ORG_ID
    , P_ACCOUNT_CODE
    , P_ACCOUNT_DESC
    , P_ACCOUNT_DESC_S
    , P_ACCOUNT_SET_ID
    , P_ACCOUNT_DR_CR
    , P_ACCOUNT_GL_ID
    , P_ACCOUNT_FS_TYPE
    , P_CUSTOMER_ENABLED_FLAG
    , P_ACCOUNT_ENABLED_FLAG
    , P_BANK_ACCOUNT_FLAG
    , P_CURRENCY_ENABLED_FLAG
    , P_ACCOUNT_MICH_YN
    , P_VAT_ENABLED_FLAG
    , P_BUDGET_ENABLED_FLAG
    , P_BUDGET_CONTROL_FLAG
    , P_BUDGET_BELONG_FLAG
    , P_COST_CENTER_FLAG
    , P_LIQUIDATE_METHOD_TYPE
    , P_ACCOUNT_CLASS_ID
    , P_REMARK
    , P_ENABLED_FLAG
    , P_EFFECTIVE_DATE_FR
    , P_EFFECTIVE_DATE_TO
    , V_SYSDATE
    , P_USER_ID
    , V_SYSDATE
    , P_USER_ID
    , P_UP_ACCOUNT_CODE
    , P_REFER1_ID
    , P_REFER2_ID
    , P_REFER3_ID
    , P_REFER4_ID
    , P_REFER5_ID
    , P_REFER6_ID
    , P_REFER7_ID
    , P_REFER8_ID
    , P_REFER9_ID
    , P_REFER10_ID
    , P_REFER11_ID
    , P_REFER12_ID
    , P_REFER13_ID
    , P_REFER14_ID
    , P_DR_NEED_YN1
    , P_DR_NEED_YN2
    , P_DR_NEED_YN3
    , P_DR_NEED_YN4
    , P_DR_NEED_YN5
    , P_DR_NEED_YN6
    , P_DR_NEED_YN7
    , P_DR_NEED_YN8
    , P_DR_NEED_YN9
    , P_DR_NEED_YN10
    , P_DR_NEED_YN11
    , P_DR_NEED_YN12
    , P_DR_NEED_YN13
    , P_DR_NEED_YN14
    , P_CR_NEED_YN1
    , P_CR_NEED_YN2
    , P_CR_NEED_YN3
    , P_CR_NEED_YN4
    , P_CR_NEED_YN5
    , P_CR_NEED_YN6
    , P_CR_NEED_YN7
    , P_CR_NEED_YN8
    , P_CR_NEED_YN9
    , P_CR_NEED_YN10
    , P_CR_NEED_YN11
    , P_CR_NEED_YN12
    , P_CR_NEED_YN13
    , P_CR_NEED_YN14
    , P_MNS_ACCOUNT_FLAG
    , P_RELATE_ACCOUNT_CODE );
  EXCEPTION
    WHEN ERRNUMS.Exist_Data THEN
    RAISE_APPLICATION_ERROR(-20001, EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'EAPP_90003', '&&FIELD_NAME:=Account Code(계정코드)'));
  END ACCOUNT_CONTROL_INSERT;

-- 회계 계정통제관리 수정.
  PROCEDURE ACCOUNT_CONTROL_UPDATE
            ( W_ACCOUNT_CONTROL_ID    IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID                IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , P_ACCOUNT_DESC          IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC%TYPE
            , P_ACCOUNT_DESC_S        IN FI_ACCOUNT_CONTROL.ACCOUNT_DESC_S%TYPE
            , P_ACCOUNT_DR_CR         IN FI_ACCOUNT_CONTROL.ACCOUNT_DR_CR%TYPE
            , P_ACCOUNT_GL_ID         IN FI_ACCOUNT_CONTROL.ACCOUNT_GL_ID%TYPE
            , P_ACCOUNT_FS_TYPE       IN FI_ACCOUNT_CONTROL.ACCOUNT_FS_TYPE%TYPE
            , P_CUSTOMER_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CUSTOMER_ENABLED_FLAG%TYPE
            , P_ACCOUNT_ENABLED_FLAG  IN FI_ACCOUNT_CONTROL.ACCOUNT_ENABLED_FLAG%TYPE
            , P_BANK_ACCOUNT_FLAG     IN FI_ACCOUNT_CONTROL.BANK_ACCOUNT_FLAG%TYPE
            , P_CURRENCY_ENABLED_FLAG IN FI_ACCOUNT_CONTROL.CURRENCY_ENABLED_FLAG%TYPE
            , P_ACCOUNT_MICH_YN       IN FI_ACCOUNT_CONTROL.ACCOUNT_MICH_YN%TYPE
            , P_VAT_ENABLED_FLAG      IN FI_ACCOUNT_CONTROL.VAT_ENABLED_FLAG%TYPE
            , P_BUDGET_ENABLED_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_ENABLED_FLAG%TYPE
            , P_BUDGET_CONTROL_FLAG   IN FI_ACCOUNT_CONTROL.BUDGET_CONTROL_FLAG%TYPE
            , P_BUDGET_BELONG_FLAG    IN FI_ACCOUNT_CONTROL.BUDGET_BELONG_FLAG%TYPE
            , P_COST_CENTER_FLAG      IN FI_ACCOUNT_CONTROL.COST_CENTER_FLAG%TYPE
            , P_LIQUIDATE_METHOD_TYPE IN FI_ACCOUNT_CONTROL.LIQUIDATE_METHOD_TYPE%TYPE
            , P_ACCOUNT_CLASS_ID      IN FI_ACCOUNT_CONTROL.ACCOUNT_CLASS_ID%TYPE
            , P_REMARK                IN FI_ACCOUNT_CONTROL.REMARK%TYPE
            , P_ENABLED_FLAG          IN FI_ACCOUNT_CONTROL.ENABLED_FLAG%TYPE
            , P_EFFECTIVE_DATE_FR     IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_FR%TYPE
            , P_EFFECTIVE_DATE_TO     IN FI_ACCOUNT_CONTROL.EFFECTIVE_DATE_TO%TYPE
            , P_USER_ID               IN FI_ACCOUNT_CONTROL.CREATED_BY%TYPE
            , P_UP_ACCOUNT_CODE       IN FI_ACCOUNT_CONTROL.UP_ACCOUNT_CODE%TYPE
            , P_REFER1_ID             IN FI_ACCOUNT_CONTROL.REFER1_ID%TYPE
            , P_REFER2_ID             IN FI_ACCOUNT_CONTROL.REFER2_ID%TYPE
            , P_REFER3_ID             IN FI_ACCOUNT_CONTROL.REFER3_ID%TYPE
            , P_REFER4_ID             IN FI_ACCOUNT_CONTROL.REFER4_ID%TYPE
            , P_REFER5_ID             IN FI_ACCOUNT_CONTROL.REFER5_ID%TYPE
            , P_REFER6_ID             IN FI_ACCOUNT_CONTROL.REFER6_ID%TYPE
            , P_REFER7_ID             IN FI_ACCOUNT_CONTROL.REFER7_ID%TYPE
            , P_REFER8_ID             IN FI_ACCOUNT_CONTROL.REFER8_ID%TYPE
            , P_REFER9_ID             IN FI_ACCOUNT_CONTROL.REFER9_ID%TYPE
            , P_REFER10_ID            IN FI_ACCOUNT_CONTROL.REFER10_ID%TYPE
            , P_REFER11_ID            IN FI_ACCOUNT_CONTROL.REFER11_ID%TYPE
            , P_REFER12_ID            IN FI_ACCOUNT_CONTROL.REFER12_ID%TYPE
            , P_REFER13_ID            IN FI_ACCOUNT_CONTROL.REFER13_ID%TYPE
            , P_REFER14_ID            IN FI_ACCOUNT_CONTROL.REFER14_ID%TYPE
            , P_DR_NEED_YN1           IN FI_ACCOUNT_CONTROL.DR_NEED_YN1%TYPE
            , P_DR_NEED_YN2           IN FI_ACCOUNT_CONTROL.DR_NEED_YN2%TYPE
            , P_DR_NEED_YN3           IN FI_ACCOUNT_CONTROL.DR_NEED_YN3%TYPE
            , P_DR_NEED_YN4           IN FI_ACCOUNT_CONTROL.DR_NEED_YN4%TYPE
            , P_DR_NEED_YN5           IN FI_ACCOUNT_CONTROL.DR_NEED_YN5%TYPE
            , P_DR_NEED_YN6           IN FI_ACCOUNT_CONTROL.DR_NEED_YN6%TYPE
            , P_DR_NEED_YN7           IN FI_ACCOUNT_CONTROL.DR_NEED_YN7%TYPE
            , P_DR_NEED_YN8           IN FI_ACCOUNT_CONTROL.DR_NEED_YN8%TYPE
            , P_DR_NEED_YN9           IN FI_ACCOUNT_CONTROL.DR_NEED_YN9%TYPE
            , P_DR_NEED_YN10          IN FI_ACCOUNT_CONTROL.DR_NEED_YN10%TYPE
            , P_DR_NEED_YN11          IN FI_ACCOUNT_CONTROL.DR_NEED_YN11%TYPE
            , P_DR_NEED_YN12          IN FI_ACCOUNT_CONTROL.DR_NEED_YN12%TYPE
            , P_DR_NEED_YN13          IN FI_ACCOUNT_CONTROL.DR_NEED_YN13%TYPE
            , P_DR_NEED_YN14          IN FI_ACCOUNT_CONTROL.DR_NEED_YN14%TYPE
            , P_CR_NEED_YN1           IN FI_ACCOUNT_CONTROL.CR_NEED_YN1%TYPE
            , P_CR_NEED_YN2           IN FI_ACCOUNT_CONTROL.CR_NEED_YN2%TYPE
            , P_CR_NEED_YN3           IN FI_ACCOUNT_CONTROL.CR_NEED_YN3%TYPE
            , P_CR_NEED_YN4           IN FI_ACCOUNT_CONTROL.CR_NEED_YN4%TYPE
            , P_CR_NEED_YN5           IN FI_ACCOUNT_CONTROL.CR_NEED_YN5%TYPE
            , P_CR_NEED_YN6           IN FI_ACCOUNT_CONTROL.CR_NEED_YN6%TYPE
            , P_CR_NEED_YN7           IN FI_ACCOUNT_CONTROL.CR_NEED_YN7%TYPE
            , P_CR_NEED_YN8           IN FI_ACCOUNT_CONTROL.CR_NEED_YN8%TYPE
            , P_CR_NEED_YN9           IN FI_ACCOUNT_CONTROL.CR_NEED_YN9%TYPE
            , P_CR_NEED_YN10          IN FI_ACCOUNT_CONTROL.CR_NEED_YN10%TYPE
            , P_CR_NEED_YN11          IN FI_ACCOUNT_CONTROL.CR_NEED_YN11%TYPE
            , P_CR_NEED_YN12          IN FI_ACCOUNT_CONTROL.CR_NEED_YN12%TYPE
            , P_CR_NEED_YN13          IN FI_ACCOUNT_CONTROL.CR_NEED_YN13%TYPE
            , P_CR_NEED_YN14          IN FI_ACCOUNT_CONTROL.CR_NEED_YN14%TYPE
            , P_MNS_ACCOUNT_FLAG      IN FI_ACCOUNT_CONTROL.MNS_ACCOUNT_FLAG%TYPE
            , P_RELATE_ACCOUNT_CODE   IN FI_ACCOUNT_CONTROL.RELATE_ACCOUNT_CODE%TYPE 
            )
  AS
    V_SYSDATE                      DATE := GET_LOCAL_DATE(P_SOB_ID);
  BEGIN
    UPDATE FI_ACCOUNT_CONTROL
    SET ACCOUNT_DESC          = P_ACCOUNT_DESC
      , ACCOUNT_DESC_S        = P_ACCOUNT_DESC_S
      , ACCOUNT_DR_CR         = P_ACCOUNT_DR_CR
      , ACCOUNT_GL_ID         = P_ACCOUNT_GL_ID
      , ACCOUNT_FS_TYPE       = P_ACCOUNT_FS_TYPE
      , CUSTOMER_ENABLED_FLAG = P_CUSTOMER_ENABLED_FLAG
      , ACCOUNT_ENABLED_FLAG  = P_ACCOUNT_ENABLED_FLAG
      , BANK_ACCOUNT_FLAG     = P_BANK_ACCOUNT_FLAG
      , CURRENCY_ENABLED_FLAG = P_CURRENCY_ENABLED_FLAG
      , ACCOUNT_MICH_YN       = P_ACCOUNT_MICH_YN
      , VAT_ENABLED_FLAG      = P_VAT_ENABLED_FLAG
      , BUDGET_ENABLED_FLAG   = P_BUDGET_ENABLED_FLAG
      , BUDGET_CONTROL_FLAG   = P_BUDGET_CONTROL_FLAG
      , BUDGET_BELONG_FLAG    = P_BUDGET_BELONG_FLAG
      , COST_CENTER_FLAG      = P_COST_CENTER_FLAG
      , LIQUIDATE_METHOD_TYPE = P_LIQUIDATE_METHOD_TYPE
      , ACCOUNT_CLASS_ID      = P_ACCOUNT_CLASS_ID
      , REMARK                = P_REMARK
      , ENABLED_FLAG          = P_ENABLED_FLAG
      , EFFECTIVE_DATE_FR     = P_EFFECTIVE_DATE_FR
      , EFFECTIVE_DATE_TO     = P_EFFECTIVE_DATE_TO
      , LAST_UPDATE_DATE      = V_SYSDATE
      , LAST_UPDATED_BY       = P_USER_ID
      , UP_ACCOUNT_CODE       = P_UP_ACCOUNT_CODE
      , REFER1_ID             = P_REFER1_ID
      , REFER2_ID             = P_REFER2_ID
      , REFER3_ID             = P_REFER3_ID
      , REFER4_ID             = P_REFER4_ID
      , REFER5_ID             = P_REFER5_ID
      , REFER6_ID             = P_REFER6_ID
      , REFER7_ID             = P_REFER7_ID
      , REFER8_ID             = P_REFER8_ID
      , REFER9_ID             = P_REFER9_ID
      , REFER10_ID            = P_REFER10_ID
      , REFER11_ID            = P_REFER11_ID
      , REFER12_ID            = P_REFER12_ID
      , REFER13_ID            = P_REFER13_ID
      , REFER14_ID            = P_REFER14_ID
      , DR_NEED_YN1           = P_DR_NEED_YN1
      , DR_NEED_YN2           = P_DR_NEED_YN2
      , DR_NEED_YN3           = P_DR_NEED_YN3
      , DR_NEED_YN4           = P_DR_NEED_YN4
      , DR_NEED_YN5           = P_DR_NEED_YN5
      , DR_NEED_YN6           = P_DR_NEED_YN6
      , DR_NEED_YN7           = P_DR_NEED_YN7
      , DR_NEED_YN8           = P_DR_NEED_YN8
      , DR_NEED_YN9           = P_DR_NEED_YN9
      , DR_NEED_YN10          = P_DR_NEED_YN10
      , DR_NEED_YN11          = P_DR_NEED_YN11
      , DR_NEED_YN12          = P_DR_NEED_YN12
      , DR_NEED_YN13          = P_DR_NEED_YN13
      , DR_NEED_YN14          = P_DR_NEED_YN14
      , CR_NEED_YN1           = P_CR_NEED_YN1
      , CR_NEED_YN2           = P_CR_NEED_YN2
      , CR_NEED_YN3           = P_CR_NEED_YN3
      , CR_NEED_YN4           = P_CR_NEED_YN4
      , CR_NEED_YN5           = P_CR_NEED_YN5
      , CR_NEED_YN6           = P_CR_NEED_YN6
      , CR_NEED_YN7           = P_CR_NEED_YN7
      , CR_NEED_YN8           = P_CR_NEED_YN8
      , CR_NEED_YN9           = P_CR_NEED_YN9
      , CR_NEED_YN10          = P_CR_NEED_YN10
      , CR_NEED_YN11          = P_CR_NEED_YN11
      , CR_NEED_YN12          = P_CR_NEED_YN12
      , CR_NEED_YN13          = P_CR_NEED_YN13
      , CR_NEED_YN14          = P_CR_NEED_YN14
      , MNS_ACCOUNT_FLAG      = P_MNS_ACCOUNT_FLAG
      , RELATE_ACCOUNT_CODE   = P_RELATE_ACCOUNT_CODE
    WHERE ACCOUNT_CONTROL_ID    = W_ACCOUNT_CONTROL_ID
    ;
  END ACCOUNT_CONTROL_UPDATE;
  
-- 계정 관리항목 조회.
  PROCEDURE SELECT_ACCOUNT_CONTROL_ITEM
            ( P_CURSOR2              OUT TYPES.TCURSOR2
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR2 FOR
      SELECT AC.REFER1_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER1_ID) AS REFER1_NAME
           , DECODE(AC.REFER1_ID, NULL, 'F', 'Y') AS REFER1_YN
           , NVL(AC.DR_NEED_YN1, 'N') AS REFER1_DR_YN
           , NVL(AC.CR_NEED_YN1, 'N') AS REFER1_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER1_ID, 'VALUE1'), 'N') AS REFER1_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER1_ID', AC.SOB_ID) AS REFER1_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER1_ID, 'VALUE4'), 'VARCHAR2') AS REFER1_DATA_TYPE
           , AC.REFER2_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER2_ID) AS REFER2_NAME
           , DECODE(AC.REFER2_ID, NULL, 'F', 'Y') AS REFER2_YN
           , NVL(AC.DR_NEED_YN2, 'N') AS REFER2_DR_YN
           , NVL(AC.CR_NEED_YN2, 'N') AS REFER2_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER2_ID, 'VALUE1'), 'N') AS REFER2_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER2_ID', AC.SOB_ID) AS REFER2_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER2_ID, 'VALUE4'), 'VARCHAR2') AS REFER2_DATA_TYPE
           , AC.REFER3_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER3_ID) AS REFER3_NAME
           , DECODE(AC.REFER3_ID, NULL, 'F', 'Y') AS REFER3_YN
           , NVL(AC.DR_NEED_YN3, 'N') AS REFER3_DR_YN
           , NVL(AC.CR_NEED_YN3, 'N') AS REFER3_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER3_ID, 'VALUE1'), 'N') AS REFER3_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER3_ID', AC.SOB_ID) AS REFER3_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER3_ID, 'VALUE4'), 'VARCHAR2') AS REFER3_DATA_TYPE
           , AC.REFER4_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER4_ID) AS REFER4_NAME
           , DECODE(AC.REFER4_ID, NULL, 'F', 'Y') AS REFER4_YN
           , NVL(AC.DR_NEED_YN4, 'N') AS REFER4_DR_YN
           , NVL(AC.CR_NEED_YN4, 'N') AS REFER4_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER4_ID, 'VALUE1'), 'N') AS REFER4_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER4_ID', AC.SOB_ID) AS REFER4_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER4_ID, 'VALUE4'), 'VARCHAR2') AS REFER4_DATA_TYPE
           , AC.REFER5_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER5_ID) AS REFER5_NAME
           , DECODE(AC.REFER5_ID, NULL, 'F', 'Y') AS REFER5_YN
           , NVL(AC.DR_NEED_YN5, 'N') AS REFER5_DR_YN
           , NVL(AC.CR_NEED_YN5, 'N') AS REFER5_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER5_ID, 'VALUE1'), 'N') AS REFER5_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER5_ID', AC.SOB_ID) AS REFER5_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER5_ID, 'VALUE4'), 'VARCHAR2') AS REFER5_DATA_TYPE
           , AC.REFER6_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER6_ID) AS REFER6_NAME
           , DECODE(AC.REFER6_ID, NULL, 'F', 'Y') AS REFER6_YN
           , NVL(AC.DR_NEED_YN6, 'N') AS REFER6_DR_YN
           , NVL(AC.CR_NEED_YN6, 'N') AS REFER6_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER6_ID, 'VALUE1'), 'N') AS REFER6_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER6_ID', AC.SOB_ID) AS REFER6_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER6_ID, 'VALUE4'), 'VARCHAR2') AS REFER6_DATA_TYPE
           , AC.REFER7_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER7_ID) AS REFER7_NAME
           , DECODE(AC.REFER7_ID, NULL, 'F', 'Y') AS REFER7_YN
           , NVL(AC.DR_NEED_YN7, 'N') AS REFER7_DR_YN
           , NVL(AC.CR_NEED_YN7, 'N') AS REFER7_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER7_ID, 'VALUE1'), 'N') AS REFER7_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER7_ID', AC.SOB_ID) AS REFER7_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER7_ID, 'VALUE4'), 'VARCHAR2') AS REFER7_DATA_TYPE
           , AC.REFER8_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER8_ID) AS REFER8_NAME
           , DECODE(AC.REFER8_ID, NULL, 'F', 'Y') AS REFER8_YN
           , NVL(AC.DR_NEED_YN8, 'N') AS REFER8_DR_YN
           , NVL(AC.CR_NEED_YN8, 'N') AS REFER8_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER8_ID, 'VALUE1'), 'N') AS REFER8_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER8_ID', AC.SOB_ID) AS REFER8_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER8_ID, 'VALUE4'), 'VARCHAR2') AS REFER8_DATA_TYPE
           , AC.REFER9_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER9_ID) AS REFER9_NAME
           , DECODE(AC.REFER9_ID, NULL, 'F', 'Y') AS REFER9_YN
           , NVL(AC.DR_NEED_YN9, 'N') AS REFER9_DR_YN
           , NVL(AC.CR_NEED_YN9, 'N') AS REFER9_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER9_ID, 'VALUE1'), 'N') AS REFER9_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER9_ID', AC.SOB_ID) AS REFER9_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER9_ID, 'VALUE4'), 'VARCHAR2') AS REFER9_DATA_TYPE
           , AC.REFER10_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER10_ID) AS REFER10_NAME
           , DECODE(AC.REFER10_ID, NULL, 'F', 'Y') AS REFER10_YN
           , NVL(AC.DR_NEED_YN10, 'N') AS REFER10_DR_YN
           , NVL(AC.CR_NEED_YN10, 'N') AS REFER10_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER10_ID, 'VALUE1'), 'N') AS REFER10_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER10_ID', AC.SOB_ID) AS REFER10_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER10_ID, 'VALUE4'), 'VARCHAR2') AS REFER10_DATA_TYPE
           , AC.REFER11_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER11_ID) AS REFER11_NAME
           , DECODE(AC.REFER11_ID, NULL, 'F', 'Y') AS REFER11_YN
           , NVL(AC.DR_NEED_YN11, 'N') AS REFER11_DR_YN
           , NVL(AC.CR_NEED_YN11, 'N') AS REFER11_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER11_ID, 'VALUE1'), 'N') AS REFER11_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER11_ID', AC.SOB_ID) AS REFER11_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER11_ID, 'VALUE4'), 'VARCHAR2') AS REFER11_DATA_TYPE
           , AC.REFER12_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER12_ID) AS REFER12_NAME
           , DECODE(AC.REFER12_ID, NULL, 'F', 'Y') AS REFER12_YN
           , NVL(AC.DR_NEED_YN12, 'N') AS REFER12_DR_YN
           , NVL(AC.CR_NEED_YN12, 'N') AS REFER12_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER12_ID, 'VALUE1'), 'N') AS REFER12_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER12_ID', AC.SOB_ID) AS REFER12_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER12_ID, 'VALUE4'), 'VARCHAR2') AS REFER12_DATA_TYPE
           , AC.REFER13_ID
           , FI_COMMON_G.ID_NAME_F(AC.REFER13_ID) AS REFER13_NAME
           , DECODE(AC.REFER13_ID, NULL, 'F', 'Y') AS REFER13_YN
           , NVL(AC.DR_NEED_YN13, 'N') AS REFER13_DR_YN
           , NVL(AC.CR_NEED_YN13, 'N') AS REFER13_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER13_ID, 'VALUE1'), 'N') AS REFER13_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER13_ID', AC.SOB_ID) AS REFER13_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER13_ID, 'VALUE4'), 'VARCHAR2') AS REFER13_DATA_TYPE
           , AC.REFER14_ID  
           , FI_COMMON_G.ID_NAME_F(AC.REFER14_ID) AS REFER14_NAME
           , DECODE(AC.REFER14_ID, NULL, 'F', 'Y') AS REFER14_YN
           , NVL(AC.DR_NEED_YN14, 'N') AS REFER14_DR_YN
           , NVL(AC.CR_NEED_YN14, 'N') AS REFER14_CR_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER14_ID, 'VALUE1'), 'N') AS REFER14_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_G.CONTROL_ITEM_LOOKUP_TYPE_F(AC.ACCOUNT_CONTROL_ID, 'REFER14_ID', AC.SOB_ID) AS REFER14_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(AC.REFER14_ID, 'VALUE4'), 'VARCHAR2') AS REFER14_DATA_TYPE
        FROM FI_ACCOUNT_CONTROL AC
      WHERE AC.ACCOUNT_CONTROL_ID      = W_ACCOUNT_CONTROL_ID
        AND AC.SOB_ID                  = W_SOB_ID
      ;
  END SELECT_ACCOUNT_CONTROL_ITEM;
  
---------------------------------------------------------------------------------------------------
-- 계정 관리항목 Lookup.
  PROCEDURE LU_CONTROL_ITEM
            ( P_CURSOR3             OUT TYPES.TCURSOR3
            , W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
            , W_REFER_FIELD         IN VARCHAR2
            , W_SOB_ID              IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
            , W_ENABLED_YN          IN VARCHAR2
            , W_INQURIY_VALUE       IN VARCHAR2 DEFAULT NULL
            , W_CONNECT_PERSON_ID   IN NUMBER
            )
  AS
    V_STD_DATE                       DATE := NULL;
    V_LOOKUP_TYPE                   FI_COMMON.VALUE1%TYPE := NULL;
  BEGIN
    IF W_ENABLED_YN = 'Y' THEN
      V_STD_DATE := GET_LOCAL_DATE(W_SOB_ID);
    END IF;

    -- LOOKUP 타입 조회.
    V_LOOKUP_TYPE := CONTROL_ITEM_LOOKUP_TYPE_F ( W_ACCOUNT_CONTROL_ID => W_ACCOUNT_CONTROL_ID
                                                , W_REFER_FIELD => W_REFER_FIELD
                                                , W_SOB_ID => W_SOB_ID
                                                );
    IF V_LOOKUP_TYPE = 'BANK' THEN
    -- 은행.
      OPEN P_CURSOR3 FOR
        SELECT FB.BANK_CODE AS MANAGEMENT_CODE
             , FB.BANK_NAME AS MANAGEMENT_NAME
             , FI_COMMON_G.CODE_NAME_F('BANK_TYPE', FB.BANK_TYPE, FB.SOB_ID) AS MANAGEMENT_DESC
          FROM FI_BANK FB
         WHERE FB.BANK_GROUP              <> '-'
           AND FB.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', FB.ENABLED_FLAG)
           AND FB.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_FR)
           AND (FB.EFFECTIVE_DATE_TO IS NULL OR FB.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_TO))
           AND FB.SOB_ID                  = W_SOB_ID
        ;
    ELSIF V_LOOKUP_TYPE = 'CUSTOMER' THEN
    -- 거래처.
      OPEN P_CURSOR3 FOR
        SELECT SC.SUPP_CUST_CODE AS MANAGEMENT_CODE
             , SC.SUPP_CUST_NAME AS MANAGEMENT_NAME
             , SC.TAX_REG_NO AS MANAGEMENT_DESC
          FROM FI_SUPP_CUST_V SC
        WHERE SC.SOB_ID                  = W_SOB_ID
          AND SC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', SC.ENABLED_FLAG)
          AND SC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, SC.EFFECTIVE_DATE_FR)
          AND (SC.EFFECTIVE_DATE_TO IS NULL OR SC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, SC.EFFECTIVE_DATE_TO))
        ;
    ELSIF V_LOOKUP_TYPE = 'BANK_ACCOUNT' THEN
    -- 계좌.
      OPEN P_CURSOR3 FOR
        SELECT BA.BANK_ACCOUNT_CODE AS MANAGEMENT_CODE
             , BA.BANK_ACCOUNT_NUM || '(' || FI_COMMON_G.CODE_NAME_F('ACCOUNT_TYPE', BA.ACCOUNT_TYPE, BA.SOB_ID) || ')'  AS MANAGEMENT_NAME
             , BA.BANK_ACCOUNT_NAME || '(' || FB.BANK_NAME || ')' AS MANAGEMENT_DESC
          FROM FI_BANK_ACCOUNT_TLV BA
             , FI_BANK FB
         WHERE BA.BANK_ID                 = FB.BANK_ID
           AND BA.SOB_ID                  = W_SOB_ID
           AND BA.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', BA.ENABLED_FLAG)
           AND BA.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, BA.EFFECTIVE_DATE_FR)
           AND (BA.EFFECTIVE_DATE_TO IS NULL OR BA.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, BA.EFFECTIVE_DATE_TO))
        ;
    ELSIF V_LOOKUP_TYPE = 'PAYABLE_BILL' THEN
    -- 지급어음 리스트.
      OPEN P_CURSOR3 FOR
        SELECT PB.BILL_NUM AS MANAGEMENT_CODE
             , FI_COMMON_G.CODE_NAME_F('PAYABLE_STATUS', PB.BILL_STATUS, PB.SOB_ID, PB.ORG_ID) AS MANAGEMENT_NAME
             , FI_BANK_G.ID_NAME_F(PB.BANK_ID) AS MANAGEMENT_DESC
          FROM FI_PAYABLE_BILL PB
         WHERE PB.SOB_ID                  = W_SOB_ID
           AND (PB.BILL_AMOUNT  = 0 OR PB.BILL_AMOUNT IS NULL)
        ;
    ELSIF V_LOOKUP_TYPE = 'RECEIVABLE_BILL' THEN
    -- 받을어음 리스트.
      OPEN P_CURSOR3 FOR
        SELECT BM.BILL_NUM AS MANAGEMENT_CODE
             , TO_CHAR(BM.BILL_AMOUNT, 'FM999,999,999,999') AS MANAGEMENT_NAME
             , FI_COMMON_G.SUPP_CUST_ID_NAME_F(BM.CUSTOMER_ID) AS MANAGEMENT_DESC
          FROM FI_BILL_MASTER BM
            , FI_BILL_STATUS_V BS
         WHERE BM.BILL_STATUS             = BS.BILL_STATUS
           AND BM.SOB_ID                  = BS.SOB_ID
           AND BM.SOB_ID                  = W_SOB_ID
           AND BS.CASH_DEPOSIT_YN         = 'Y'
           AND BS.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', BS.ENABLED_FLAG)
           AND BS.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, BS.EFFECTIVE_DATE_FR)
           AND (BS.EFFECTIVE_DATE_TO IS NULL OR BS.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, BS.EFFECTIVE_DATE_TO))
        ;
    ELSIF V_LOOKUP_TYPE = 'BILL_STATUS' THEN
    -- 어음상태 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'BILL_STATUS'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'FUND_CODE' THEN
    -- 자금코드 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'FUND_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'LOAN_USE' THEN
    -- 대출과목(차입금용도)
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'LOAN_USE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'TAX_CODE' THEN
    -- 사업장 세금계산서 코드 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;    
    ELSIF V_LOOKUP_TYPE = 'TAX_ELECTRO' THEN
    -- 전자세금계산서 여부.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_ELECTRO'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_REASON' THEN
    -- 부가세대급금 사유.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_REASON'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
          AND FI.VALUE2              = W_INQURIY_VALUE
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'CREDIT_CARD' THEN
    -- 신용카드 리스트.
      OPEN P_CURSOR3 FOR
        SELECT CC.CARD_CODE AS MANAGEMENT_CODE
             , CC.CARD_NUM AS MANAGEMENT_NAME
             , CC.CARD_NAME AS MANAGEMENT_DESC
          FROM FI_CREDIT_CARD CC
         WHERE CC.SOB_ID              = W_SOB_ID
           AND CC.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', CC.ENABLED_FLAG)
           AND CC.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_FR)
           AND (CC.EFFECTIVE_DATE_TO IS NULL OR CC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_TO))
           AND W_INQURIY_VALUE       IN (6, 10)
        ORDER BY CC.CARD_NUM
        ;
    ELSIF V_LOOKUP_TYPE = 'FUND_MOVE' THEN
    -- 자금이체.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'FUND_MOVE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_CLASS' THEN
    -- 계산서 형태.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_CLASS'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_TYPE_AP' THEN
    -- 부가세대급금
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_TYPE_AP'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_TYPE_AR' THEN
    -- 부가세예수금
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_TYPE_AR'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'NATION' THEN
    -- 국가.
      OPEN P_CURSOR3 FOR
        SELECT EC.COUNTRY_CODE AS MANAGEMENT_CODE
             , EC.COUNTRY_FULL_NAME AS MANAGEMENT_NAME
             , EC.CURRENCY_CODE AS MANAGEMENT_DESC
          FROM EAPP_COUNTRY EC
        WHERE EC.SOB_ID              = W_SOB_ID
          AND EC.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', EC.ENABLED_FLAG)
          AND EC.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, EC.EFFECTIVE_DATE_FR)
          AND (EC.EFFECTIVE_DATE_TO IS NULL OR EC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, EC.EFFECTIVE_DATE_TO))
        ORDER BY EC.COUNTRY_CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'PERSON_NUM' THEN
    -- PERSON.
      OPEN P_CURSOR3 FOR
        SELECT PM.PERSON_NUM AS MANAGEMENT_CODE
             , PM.NAME AS MANAGEMENT_NAME
             , HRM_DEPT_MASTER_G.DEPT_NAME_F(PM.DEPT_ID) AS MANAGEMENT_DESC
          FROM HRM_PERSON_MASTER PM
        WHERE PM.SOB_ID          = W_SOB_ID
          AND PM.ORI_JOIN_DATE   <= V_STD_DATE
          AND (PM.RETIRE_DATE IS NULL OR PM.RETIRE_DATE >= V_STD_DATE)
          AND PM.CORP_TYPE       IN ('1')
          AND EXISTS (SELECT 'X'
                        FROM HRM_CORP_MASTER CM
                      WHERE CM.SOB_ID       = PM.SOB_ID
                        AND CM.ORG_ID       = PM.ORG_ID
                        AND CM.CORP_ID      = PM.CORP_ID
                        AND CM.DEFAULT_FLAG = 'Y'
                     )
        ORDER BY PM.PERSON_NUM
        ;
    ELSIF V_LOOKUP_TYPE = 'DEPT' THEN
    -- 부서.
      OPEN P_CURSOR3 FOR
        SELECT DM.DEPT_CODE AS MANAGEMENT_CODE
             , DM.DEPT_NAME AS MANAGEMENT_NAME
             , DM.DEPT_LEVEL AS MANAGEMENT_DESC
          FROM FI_DEPT_MASTER DM
        WHERE DM.SOB_ID              = W_SOB_ID
          AND DM.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', DM.ENABLED_FLAG)
          AND DM.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_FR)
          AND (DM.EFFECTIVE_DATE_TO IS NULL OR DM.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_TO))
          AND EXISTS (SELECT 'X'
                        FROM FI_ACCOUNT_BOOK AB
                      WHERE AB.SOB_ID           = DM.SOB_ID
                        AND AB.DEPT_LEVEL       = DM.DEPT_LEVEL
                        AND AB.OPERATING_FLAG   = 'Y'
                     )
          /*AND EXISTS (SELECT 'X'
                        FROM FI_DEPT_MAPPING DMP
                      WHERE DMP.SOB_ID      = DM.SOB_ID
                        AND DECODE(DMP.MAPPING_DEPT_ALL, 'Y', DM.DEPT_CODE, DMP.MAPPING_DEPT_CODE)  = DM.DEPT_CODE
                        AND DMP.DEPT_CODE          = W_INQURIY_VALUE
                     )*/
        ORDER BY DM.SORT_NUM, DM.DEPT_CODE
        
        /*SELECT DM.DEPT_CODE AS MANAGEMENT_CODE
             , DM.DEPT_NAME AS MANAGEMENT_NAME
             , DM.DEPT_LEVEL AS MANAGEMENT_DESC
          FROM FI_DEPT_MASTER DM
        WHERE DM.SOB_ID              = W_SOB_ID
          AND DM.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', DM.ENABLED_FLAG)
          AND DM.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_FR)
          AND (DM.EFFECTIVE_DATE_TO IS NULL OR DM.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_TO))
          AND EXISTS (SELECT 'X'
                        FROM FI_ACCOUNT_BOOK AB
                      WHERE AB.SOB_ID           = DM.SOB_ID
                        AND AB.DEPT_LEVEL       = DM.DEPT_LEVEL
                        AND AB.OPERATING_FLAG   = 'Y'
                     )
        ORDER BY DM.SORT_NUM, DM.DEPT_CODE*/
        ;
    ELSIF V_LOOKUP_TYPE = 'COSTCENTER' THEN
    -- 원가코드.
      OPEN P_CURSOR3 FOR
        SELECT CC.COST_CENTER_CODE AS MANAGEMENT_CODE
             , CC.COST_CENTER_DESC AS MANAGEMENT_NAME
             , EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_MFG_TYPE', CC.MFG_TYPE_LCODE) || '-' ||
               EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_DIRECT_TYPE', CC.DIRECT_TYPE_LCODE) AS MANAGEMENT_DESC
          FROM CST_COST_CENTER CC
         WHERE CC.SOB_ID                  = W_SOB_ID
           AND CC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', CC.ENABLED_FLAG)
           AND CC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_FR)
           AND (CC.EFFECTIVE_DATE_TO IS NULL OR CC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_TO))
        /*   AND EXISTS (SELECT 'X'
                        FROM FI_COSTCENTER_MAPPING CMP
                      WHERE CMP.SOB_ID      = CC.SOB_ID
                        AND DECODE(CMP.MAPPING_COSTCENTER_ALL, 'Y', CC.COST_CENTER_CODE, CMP.MAPPING_COSTCENTER_CODE)  = CC.COST_CENTER_CODE
                        AND CMP.DEPT_CODE          = W_INQURIY_VALUE
                     )*/
       ORDER BY CC.COST_CENTER_CODE
       ;
       /*SELECT CC.COST_CENTER_CODE AS MANAGEMENT_CODE
             , CC.COST_CENTER_DESC AS MANAGEMENT_NAME
             , EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_MFG_TYPE', CC.MFG_TYPE_LCODE) || '-' ||
               EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_DIRECT_TYPE', CC.DIRECT_TYPE_LCODE) AS MANAGEMENT_DESC
          FROM CST_COST_CENTER CC
         WHERE CC.SOB_ID                  = W_SOB_ID
           AND CC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', CC.ENABLED_FLAG)
           AND CC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_FR)
           AND (CC.EFFECTIVE_DATE_TO IS NULL OR CC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_TO))
       ORDER BY CC.COST_CENTER_CODE
       ;*/
    ELSIF V_LOOKUP_TYPE = 'SCHEDULE_REPORT_OMIT' THEN
    -- 예정신고누락분여부.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'SCHEDULE_REPORT_OMIT'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'MODIFY_TAX_REASON' THEN
    -- 수정전자세금계산서사유구분.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'MODIFY_TAX_REASON'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'OTHER_ACCOUNT_GB' THEN
    -- 타계정구분.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'OTHER_ACCOUNT_GB'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSE
      OPEN P_CURSOR3 FOR
        SELECT NULL AS MANAGEMENT_CODE
             , NULL AS MANAGEMENT_NAME
             ,  NULL AS MANAGEMENT_DESC
          FROM DUAL
        ;
    END IF;

  END LU_CONTROL_ITEM;

---------------------------------------------------------------------------------------------------
-- 계정 통제관리항목 필드값 DESCRIPTION.
  FUNCTION CONTROL_ITEM_DESC_F
          ( W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
          , W_REFER_FIELD         IN VARCHAR2
          , W_REFER_VAULE         IN VARCHAR2
          , W_SOB_ID              IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
          ) RETURN VARCHAR2
  AS
    V_LOOKUP_TYPE                 FI_COMMON.VALUE1%TYPE := NULL;
    V_CONTROL_ITEM_DESC           VARCHAR2(200) := NULL;
  BEGIN
    -- LOOKUP 타입 조회.
    V_LOOKUP_TYPE := CONTROL_ITEM_LOOKUP_TYPE_F ( W_ACCOUNT_CONTROL_ID => W_ACCOUNT_CONTROL_ID
                                                , W_REFER_FIELD => W_REFER_FIELD
                                                , W_SOB_ID => W_SOB_ID
                                                );
    V_CONTROL_ITEM_DESC := NULL;
    IF V_LOOKUP_TYPE = 'BANK' THEN
    -- 은행.
      BEGIN
        SELECT FB.BANK_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_BANK FB
         WHERE FB.BANK_GROUP              <> '-'
           AND FB.BANK_CODE               = W_REFER_VAULE
           AND FB.SOB_ID                  = W_SOB_ID
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'CUSTOMER' THEN
    -- 거래처.
      BEGIN
        SELECT SC.SUPP_CUST_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_SUPP_CUST_V SC
        WHERE SC.SOB_ID                  = W_SOB_ID
          AND SC.SUPP_CUST_CODE          = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'BANK_ACCOUNT' THEN
    -- 계좌.
      BEGIN
        SELECT BA.BANK_ACCOUNT_NUM || '(' || FI_COMMON_G.CODE_NAME_F('ACCOUNT_TYPE', BA.ACCOUNT_TYPE, BA.SOB_ID) || ')' AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_BANK_ACCOUNT_TLV BA
             , FI_BANK FB
         WHERE BA.BANK_ID                 = FB.BANK_ID
           AND BA.BANK_ACCOUNT_CODE       = W_REFER_VAULE
           AND BA.SOB_ID                  = W_SOB_ID
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'PAYABLE_BILL' THEN
    -- 지급어음 리스트.
      BEGIN
        SELECT FI_COMMON_G.CODE_NAME_F('PAYABLE_STATUS', PB.BILL_STATUS, PB.SOB_ID, PB.ORG_ID) AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_PAYABLE_BILL PB
         WHERE PB.SOB_ID                  = W_SOB_ID
           AND PB.BILL_NUM                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'RECEIVEABLE_BILL' THEN
    -- 받을어음 리스트.
      BEGIN
        SELECT TO_CHAR(BM.BILL_AMOUNT, 'FM999,999,999,999') AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_BILL_MASTER BM
         WHERE BM.SOB_ID                  = W_SOB_ID
           AND BM.BILL_NUM                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'BILL_STATUS' THEN
    -- 어음상태 리스트.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'BILL_STATUS'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'FUND_CODE' THEN
    -- 자금코드 리스트.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'FUND_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'LOAN_USE' THEN
    -- 대출과목(차입금 용도)
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'LOAN_USE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'LOAN_NUM' THEN
    -- 차입금 내역.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'LOAN_USE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'TAX_CODE' THEN
    -- 사업장 세금계산서 코드 리스트.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'TAX_ELECTRO' THEN
    -- 전자세금계산서 여부.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_ELECTRO'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_REASON' THEN
    -- 부가세대급금 사유.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_REASON'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'CREDIT_CARD' THEN
    -- 신용카드 리스트.
      BEGIN
        SELECT CC.CARD_NUM AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_CREDIT_CARD CC
        WHERE CC.CARD_CODE           = W_REFER_VAULE
          AND CC.SOB_ID              = W_SOB_ID
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_CLASS' THEN
    -- 계산서 형태.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_CLASS'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_TYPE_AP' THEN
    -- 부가세대급금.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_TYPE_AP'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_TYPE_AR' THEN
    -- 부가세예수금.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_TYPE_AR'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'NATION' THEN
    -- 국가.
      BEGIN
        SELECT EC.COUNTRY_FULL_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM EAPP_COUNTRY EC
        WHERE EC.SOB_ID              = W_SOB_ID
          AND EC.COUNTRY_CODE        = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'PERSON_NUM' THEN
    -- PERSON.
      BEGIN
        SELECT PM.NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM HRM_PERSON_MASTER PM
        WHERE PM.SOB_ID          = W_SOB_ID
          AND PM.PERSON_NUM      = W_REFER_VAULE
          AND EXISTS (SELECT 'X'
                        FROM HRM_CORP_MASTER CM
                      WHERE CM.SOB_ID       = PM.SOB_ID
                        AND CM.ORG_ID       = PM.ORG_ID
                        AND CM.CORP_ID      = PM.CORP_ID
                        AND CM.DEFAULT_FLAG = 'Y'
                     )
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'DEPT' THEN
    -- 부서.
      BEGIN
        SELECT DM.DEPT_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_DEPT_MASTER DM
        WHERE DM.SOB_ID              = W_SOB_ID
          AND DM.DEPT_CODE           = W_REFER_VAULE
          AND EXISTS (SELECT 'X'
                        FROM FI_ACCOUNT_BOOK AB
                      WHERE AB.SOB_ID           = DM.SOB_ID
                        AND AB.DEPT_LEVEL       = DM.DEPT_LEVEL
                        AND AB.OPERATING_FLAG   = 'Y'
                     )
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'COSTCENTER' THEN
    -- 원가코드.
      BEGIN
        SELECT CC.COST_CENTER_DESC AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM CST_COST_CENTER CC
        WHERE CC.SOB_ID                  = W_SOB_ID
          AND CC.COST_CENTER_CODE        = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'SCHEDULE_REPORT_OMIT' THEN
    -- 예정신고누락분여부.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'SCHEDULE_REPORT_OMIT'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'MODIFY_TAX_REASON' THEN
    -- 수정전자세금계산서사유구분.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'MODIFY_TAX_REASON'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'OTHER_ACCOUNT_GB' THEN
    -- 타계정구분.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'OTHER_ACCOUNT_GB'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_REFER_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSE
      NULL;
    END IF;
    RETURN V_CONTROL_ITEM_DESC;

  END CONTROL_ITEM_DESC_F;

-- 계정 잔액관리항목 Lookup Type.
  FUNCTION CONTROL_ITEM_LOOKUP_TYPE_F
          ( W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL.ACCOUNT_CONTROL_ID%TYPE
          , W_REFER_FIELD         IN VARCHAR2
          , W_SOB_ID              IN FI_ACCOUNT_CONTROL.SOB_ID%TYPE
          ) RETURN VARCHAR2
  AS
    V_LOOKUP_TYPE                 FI_COMMON.VALUE1%TYPE := NULL;
    V_STRING                      VARCHAR2(1000) := NULL;
  BEGIN
    -- LOOKUP 타입 조회.
    BEGIN
      SELECT FC.VALUE3
        INTO V_LOOKUP_TYPE
        FROM FI_COMMON FC
      WHERE FC.SOB_ID                  = W_SOB_ID 
       AND FC.COMMON_ID               IN 
             ( SELECT  CASE W_REFER_FIELD
                         WHEN 'REFER1_ID' THEN AC.REFER1_ID
                         WHEN 'REFER2_ID' THEN AC.REFER2_ID
                         WHEN 'REFER3_ID' THEN AC.REFER3_ID
                         WHEN 'REFER4_ID' THEN AC.REFER4_ID
                         WHEN 'REFER5_ID' THEN AC.REFER5_ID
                         WHEN 'REFER6_ID' THEN AC.REFER6_ID
                         WHEN 'REFER7_ID' THEN AC.REFER7_ID
                         WHEN 'REFER8_ID' THEN AC.REFER8_ID
                         WHEN 'REFER9_ID' THEN AC.REFER9_ID
                         WHEN 'REFER10_ID' THEN AC.REFER10_ID
                         WHEN 'REFER11_ID' THEN AC.REFER11_ID
                         WHEN 'REFER12_ID' THEN AC.REFER12_ID
                         WHEN 'REFER13_ID' THEN AC.REFER13_ID
                         WHEN 'REFER14_ID' THEN AC.REFER14_ID
                         ELSE NULL
                       END AS VALUE_ID
                FROM FI_ACCOUNT_CONTROL AC
               WHERE AC.ACCOUNT_CONTROL_ID      = W_ACCOUNT_CONTROL_ID
                 AND AC.SOB_ID                  = FC.SOB_ID
              );
/*                                    
      V_STRING := 'SELECT FC.VALUE3
                      FROM FI_COMMON FC
                     WHERE FC.SOB_ID                  = ' || W_SOB_ID || '
                       AND EXISTS ( SELECT ''X''
                                      FROM FI_ACCOUNT_CONTROL AC
                                     WHERE AC.ACCOUNT_CONTROL_ID      = ' || W_ACCOUNT_CONTROL_ID || '
                                       AND AC.SOB_ID                  = FC.SOB_ID
                                       AND AC.' || W_REFER_FIELD || ' = FC.COMMON_ID
                                  )';                                  
      EXECUTE IMMEDIATE V_STRING
        INTO V_LOOKUP_TYPE;*/
    EXCEPTION WHEN OTHERS THEN
      V_LOOKUP_TYPE := NULL;
    END;
    RETURN V_LOOKUP_TYPE;
  END CONTROL_ITEM_LOOKUP_TYPE_F;
  
END FI_ACCOUNT_CONTROL_G;
/
