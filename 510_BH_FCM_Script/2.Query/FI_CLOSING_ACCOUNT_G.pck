CREATE OR REPLACE PACKAGE FI_CLOSING_ACCOUNT_G
AS

-- 결산계정 조회.
  PROCEDURE SELECT_CLOSING_ACCOUNT
            ( P_CURSOR              OUT TYPES.TCURSOR
            , P_CLOSING_GROUP       IN FI_CLOSING_ACCOUNT.CLOSING_GROUP%TYPE
            , P_ACCOUNT_CONTROL_ID  IN FI_CLOSING_ACCOUNT.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID              IN FI_CLOSING_ACCOUNT.SOB_ID%TYPE
            );

-- 결산계정 삽입
  PROCEDURE INSERT_CLOSING_ACCOUNT
            ( P_CLOSING_ACCOUNT_ID   OUT FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_ID%TYPE
            , P_CLOSING_GROUP        IN FI_CLOSING_ACCOUNT.CLOSING_GROUP%TYPE
            , P_ACCOUNT_CONTROL_ID   IN FI_CLOSING_ACCOUNT.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE         IN FI_CLOSING_ACCOUNT.ACCOUNT_CODE%TYPE
            , P_SOB_ID               IN FI_CLOSING_ACCOUNT.SOB_ID%TYPE
            , P_ORG_ID               IN FI_CLOSING_ACCOUNT.ORG_ID%TYPE
            , P_C_ACCOUNT_CONTROL_ID IN FI_CLOSING_ACCOUNT.C_ACCOUNT_CONTROL_ID%TYPE
            , P_CLOSING_ACCOUNT_TYPE IN FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_TYPE%TYPE
            , P_REMARK               IN FI_CLOSING_ACCOUNT.REMARK%TYPE
            , P_USER_ID              IN FI_CLOSING_ACCOUNT.CREATED_BY%TYPE 
            );

-- 결산계정 수정.
  PROCEDURE UPDATE_CLOSING_ACCOUNT
            ( W_CLOSING_ACCOUNT_ID   IN FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_ID%TYPE
            , P_CLOSING_GROUP        IN FI_CLOSING_ACCOUNT.CLOSING_GROUP%TYPE
            , P_ACCOUNT_CONTROL_ID   IN FI_CLOSING_ACCOUNT.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE         IN FI_CLOSING_ACCOUNT.ACCOUNT_CODE%TYPE
            , P_SOB_ID               IN FI_CLOSING_ACCOUNT.SOB_ID%TYPE
            , P_C_ACCOUNT_CONTROL_ID IN FI_CLOSING_ACCOUNT.C_ACCOUNT_CONTROL_ID%TYPE
            , P_CLOSING_ACCOUNT_TYPE IN FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_TYPE%TYPE
            , P_REMARK               IN FI_CLOSING_ACCOUNT.REMARK%TYPE
            , P_USER_ID              IN FI_CLOSING_ACCOUNT.CREATED_BY%TYPE 
            );

-- 결산계정 삭제.
  PROCEDURE DELETE_CLOSING_ACCOUNT
            ( W_CLOSING_ACCOUNT_ID   IN FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_ID%TYPE
            );


-- 결산계정 미등록 계정 조회.
  PROCEDURE SELECT_MISS_CLOSING_ACCOUNT
            ( P_CURSOR1             OUT TYPES.TCURSOR1
            , P_SOB_ID              IN FI_CLOSING_ACCOUNT.SOB_ID%TYPE
            );
            
END FI_CLOSING_ACCOUNT_G;
/
CREATE OR REPLACE PACKAGE BODY FI_CLOSING_ACCOUNT_G
AS
/******************************************************************************/
/* Project      : FPCB ERP
/* Module       : FCM
/* Program Name : FI_CLOSING_ACCOUNT_G
/* Description  : 결산계정 관리
/*
/* Reference by :    
/* Program History :
/*------------------------------------------------------------------------------
/*   Date       In Charge          Description
/*------------------------------------------------------------------------------
/* 07-JUN-2010  Jeon Ho Su          Initialize
/******************************************************************************/
-- 결산계정 조회.
  PROCEDURE SELECT_CLOSING_ACCOUNT
            ( P_CURSOR              OUT TYPES.TCURSOR
            , P_CLOSING_GROUP       IN FI_CLOSING_ACCOUNT.CLOSING_GROUP%TYPE
            , P_ACCOUNT_CONTROL_ID  IN FI_CLOSING_ACCOUNT.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID              IN FI_CLOSING_ACCOUNT.SOB_ID%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR FOR
      SELECT CA.CLOSING_ACCOUNT_ID
           , FI_COMMON_G.CODE_NAME_F('CLOSING_GROUP', CA.CLOSING_GROUP, CA.SOB_ID) AS CLOSING_GROUP_NAME
           , CA.CLOSING_GROUP
           , CA.ACCOUNT_CONTROL_ID
           , CA.ACCOUNT_CODE
           , AC.ACCOUNT_DESC
           , CA.C_ACCOUNT_CONTROL_ID
           , C_AC.ACCOUNT_CODE AS C_ACCOUNT_CODE
           , C_AC.ACCOUNT_DESC AS C_ACCOUNT_DESC
           , FI_COMMON_G.CODE_NAME_F('CLOSING_ACCOUNT_TYPE', CA.CLOSING_ACCOUNT_TYPE, CA.SOB_ID) AS CLOSING_ACCOUNT_TYPE_NAME
           , CA.CLOSING_ACCOUNT_TYPE
           , CA.REMARK 
        FROM FI_CLOSING_ACCOUNT CA
          , FI_ACCOUNT_CONTROL AC
          , FI_ACCOUNT_CONTROL C_AC
      WHERE CA.ACCOUNT_CONTROL_ID       = AC.ACCOUNT_CONTROL_ID
        AND CA.C_ACCOUNT_CONTROL_ID     = C_AC.ACCOUNT_CONTROL_ID(+)
        AND CA.CLOSING_GROUP            = NVL(P_CLOSING_GROUP, CA.CLOSING_GROUP)
        AND CA.ACCOUNT_CONTROL_ID       = NVL(P_ACCOUNT_CONTROL_ID, CA.ACCOUNT_CONTROL_ID)
        AND CA.SOB_ID                   = P_SOB_ID
      ORDER BY CA.CLOSING_GROUP, CA.ACCOUNT_CODE  
      ;

  END SELECT_CLOSING_ACCOUNT;

-- 결산계정 삽입
  PROCEDURE INSERT_CLOSING_ACCOUNT
            ( P_CLOSING_ACCOUNT_ID   OUT FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_ID%TYPE
            , P_CLOSING_GROUP        IN FI_CLOSING_ACCOUNT.CLOSING_GROUP%TYPE
            , P_ACCOUNT_CONTROL_ID   IN FI_CLOSING_ACCOUNT.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE         IN FI_CLOSING_ACCOUNT.ACCOUNT_CODE%TYPE
            , P_SOB_ID               IN FI_CLOSING_ACCOUNT.SOB_ID%TYPE
            , P_ORG_ID               IN FI_CLOSING_ACCOUNT.ORG_ID%TYPE
            , P_C_ACCOUNT_CONTROL_ID IN FI_CLOSING_ACCOUNT.C_ACCOUNT_CONTROL_ID%TYPE
            , P_CLOSING_ACCOUNT_TYPE IN FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_TYPE%TYPE
            , P_REMARK               IN FI_CLOSING_ACCOUNT.REMARK%TYPE
            , P_USER_ID              IN FI_CLOSING_ACCOUNT.CREATED_BY%TYPE 
            )
  AS
    V_SYSDATE DATE := GET_LOCAL_DATE(P_SOB_ID);
    V_RECORD_COUNT    NUMBER := 0;
    
  BEGIN
    BEGIN
      SELECT COUNT(CA.ACCOUNT_CONTROL_ID) AS RECORD_COUNT 
        INTO V_RECORD_COUNT
        FROM FI_CLOSING_ACCOUNT CA
      WHERE CA.CLOSING_GROUP            = P_CLOSING_GROUP
        AND CA.ACCOUNT_CONTROL_ID       = P_ACCOUNT_CONTROL_ID
        AND CA.SOB_ID                   = P_SOB_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      V_RECORD_COUNT := 0;
    END;
    IF V_RECORD_COUNT <> 0 THEN
      RAISE ERRNUMS.Exist_Data;
    END IF;
    
    SELECT FI_CLOSING_ACCOUNT_S1.NEXTVAL
      INTO P_CLOSING_ACCOUNT_ID
      FROM DUAL;
      
    INSERT INTO FI_CLOSING_ACCOUNT
    ( CLOSING_ACCOUNT_ID
    , CLOSING_GROUP
    , ACCOUNT_CONTROL_ID 
    , ACCOUNT_CODE 
    , SOB_ID 
    , ORG_ID 
    , C_ACCOUNT_CONTROL_ID 
    , CLOSING_ACCOUNT_TYPE 
    , REMARK 
    , CREATION_DATE 
    , CREATED_BY 
    , LAST_UPDATE_DATE 
    , LAST_UPDATED_BY )
    VALUES
    ( P_CLOSING_ACCOUNT_ID
    , P_CLOSING_GROUP
    , P_ACCOUNT_CONTROL_ID
    , P_ACCOUNT_CODE
    , P_SOB_ID
    , P_ORG_ID
    , P_C_ACCOUNT_CONTROL_ID
    , P_CLOSING_ACCOUNT_TYPE
    , P_REMARK
    , V_SYSDATE
    , P_USER_ID
    , V_SYSDATE
    , P_USER_ID );
     
  EXCEPTION 
    WHEN ERRNUMS.Exist_Data THEN
      RAISE_APPLICATION_ERROR(ERRNUMS.Exist_Data_Code, ERRNUMS.Exist_Data_Desc);  
  END INSERT_CLOSING_ACCOUNT;

-- 결산계정 수정.
  PROCEDURE UPDATE_CLOSING_ACCOUNT
            ( W_CLOSING_ACCOUNT_ID   IN FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_ID%TYPE
            , P_CLOSING_GROUP        IN FI_CLOSING_ACCOUNT.CLOSING_GROUP%TYPE
            , P_ACCOUNT_CONTROL_ID   IN FI_CLOSING_ACCOUNT.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE         IN FI_CLOSING_ACCOUNT.ACCOUNT_CODE%TYPE
            , P_SOB_ID               IN FI_CLOSING_ACCOUNT.SOB_ID%TYPE
            , P_C_ACCOUNT_CONTROL_ID IN FI_CLOSING_ACCOUNT.C_ACCOUNT_CONTROL_ID%TYPE
            , P_CLOSING_ACCOUNT_TYPE IN FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_TYPE%TYPE
            , P_REMARK               IN FI_CLOSING_ACCOUNT.REMARK%TYPE
            , P_USER_ID              IN FI_CLOSING_ACCOUNT.CREATED_BY%TYPE 
            )
  AS
     V_SYSDATE DATE := GET_LOCAL_DATE(P_SOB_ID);
  BEGIN

    UPDATE FI_CLOSING_ACCOUNT CA
      SET CA.CLOSING_GROUP        = P_CLOSING_GROUP
        , CA.ACCOUNT_CONTROL_ID   = P_ACCOUNT_CONTROL_ID
        , CA.ACCOUNT_CODE         = P_ACCOUNT_CODE
        , CA.C_ACCOUNT_CONTROL_ID = P_C_ACCOUNT_CONTROL_ID
        , CA.CLOSING_ACCOUNT_TYPE = P_CLOSING_ACCOUNT_TYPE
        , CA.REMARK               = P_REMARK
        , CA.LAST_UPDATE_DATE     = V_SYSDATE
        , CA.LAST_UPDATED_BY      = P_USER_ID
    WHERE CA.CLOSING_ACCOUNT_ID   = W_CLOSING_ACCOUNT_ID
    ;
   
  END UPDATE_CLOSING_ACCOUNT;

-- 결산계정 삭제.
  PROCEDURE DELETE_CLOSING_ACCOUNT
            ( W_CLOSING_ACCOUNT_ID   IN FI_CLOSING_ACCOUNT.CLOSING_ACCOUNT_ID%TYPE
            )
  AS
  BEGIN
    DELETE FROM FI_CLOSING_ACCOUNT CA
    WHERE CA.CLOSING_ACCOUNT_ID   = W_CLOSING_ACCOUNT_ID
    ;
  END DELETE_CLOSING_ACCOUNT;

-- 결산계정 미등록 계정 조회.
  PROCEDURE SELECT_MISS_CLOSING_ACCOUNT
            ( P_CURSOR1             OUT TYPES.TCURSOR1
            , P_SOB_ID              IN FI_CLOSING_ACCOUNT.SOB_ID%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR1 FOR 
      SELECT AC.ACCOUNT_CONTROL_ID
           , AC.ACCOUNT_CODE
           , AC.ACCOUNT_DESC
           , AC.ACCOUNT_DR_CR
           , FI_COMMON_G.CODE_NAME_F('ACCOUNT_DR_CR', AC.ACCOUNT_DR_CR, AC.SOB_ID) AS ACCOUNT_DR_CR_NAME
           , AC.ACCOUNT_FS_TYPE
           , FI_COMMON_G.CODE_NAME_F('FORM_TYPE', AC.ACCOUNT_FS_TYPE, AC.SOB_ID) AS ACCOUNT_FS_TYPE_NAME
           , AC.ENABLED_FLAG
           , AC.EFFECTIVE_DATE_FR
           , AC.EFFECTIVE_DATE_TO
        FROM FI_ACCOUNT_CONTROL AC
          , FI_FORM_TYPE_V FT
      WHERE AC.ACCOUNT_FS_TYPE      = FT.FORM_TYPE
        AND AC.SOB_ID               = FT.SOB_ID
        AND AC.SOB_ID               = P_SOB_ID
        AND AC.ACCOUNT_SET_ID       = FI_ACCOUNT_BOOK_G.OPERATING_ACCOUNT_SET_F(P_SOB_ID)
        AND FT.FORM_TYPE            = '1004'
        AND NOT EXISTS (SELECT 'X'
                          FROM FI_CLOSING_ACCOUNT CA
                        WHERE CA.ACCOUNT_CONTROL_ID  = AC.ACCOUNT_CONTROL_ID
                          AND CA.SOB_ID               = AC.SOB_ID                          
                       )
      ORDER BY AC.ACCOUNT_CODE
      ;
  END SELECT_MISS_CLOSING_ACCOUNT;
  
END FI_CLOSING_ACCOUNT_G;
/
