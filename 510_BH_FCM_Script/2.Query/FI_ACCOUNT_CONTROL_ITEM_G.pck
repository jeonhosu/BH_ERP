CREATE OR REPLACE PACKAGE FI_ACCOUNT_CONTROL_ITEM_G
AS

-- 회계 계정통제관리 조회.
  PROCEDURE SELECT_ACCOUNT_CONTROL_ITEM
            ( P_CURSOR               OUT TYPES.TCURSOR
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR        IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            );

-- 회계 계정통제관리 삽입.
  PROCEDURE INSERT_ACCOUNT_CONTROL_ITEM
            ( P_ACCOUNT_CONTROL_ID IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE       IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CODE%TYPE
            , P_SOB_ID             IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            , P_ORG_ID             IN FI_ACCOUNT_CONTROL_ITEM.ORG_ID%TYPE
            , P_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , P_MANAGEMENT1_ID     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT1_ID%TYPE
            , P_MANAGEMENT2_ID     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT2_ID%TYPE
            , P_REFER1_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER1_ID%TYPE
            , P_REFER2_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER2_ID%TYPE
            , P_REFER3_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER3_ID%TYPE
            , P_REFER4_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER4_ID%TYPE
            , P_REFER5_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER5_ID%TYPE
            , P_REFER6_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER6_ID%TYPE
            , P_REFER7_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER7_ID%TYPE
            , P_REFER8_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER8_ID%TYPE
            , P_REFER9_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER9_ID%TYPE
            , P_REFER_RATE_ID      IN FI_ACCOUNT_CONTROL_ITEM.REFER_RATE_ID%TYPE
            , P_REFER_AMOUNT_ID    IN FI_ACCOUNT_CONTROL_ITEM.REFER_AMOUNT_ID%TYPE
            , P_REFER_DATE1_ID     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE1_ID%TYPE
            , P_REFER_DATE2_ID     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE2_ID%TYPE
            , P_VOUCH_ID           IN FI_ACCOUNT_CONTROL_ITEM.VOUCH_ID%TYPE
            , P_MANAGEMENT1_YN     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT1_YN%TYPE
            , P_MANAGEMENT2_YN     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT2_YN%TYPE
            , P_REFER1_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER1_YN%TYPE
            , P_REFER2_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER2_YN%TYPE
            , P_REFER3_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER3_YN%TYPE
            , P_REFER4_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER4_YN%TYPE
            , P_REFER5_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER5_YN%TYPE
            , P_REFER6_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER6_YN%TYPE
            , P_REFER7_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER7_YN%TYPE
            , P_REFER8_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER8_YN%TYPE
            , P_REFER9_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER9_YN%TYPE
            , P_REFER_RATE_YN      IN FI_ACCOUNT_CONTROL_ITEM.REFER_RATE_YN%TYPE
            , P_REFER_AMOUNT_YN    IN FI_ACCOUNT_CONTROL_ITEM.REFER_AMOUNT_YN%TYPE
            , P_REFER_DATE1_YN     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE1_YN%TYPE
            , P_REFER_DATE2_YN     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE2_YN%TYPE
            , P_VOUCH_YN           IN FI_ACCOUNT_CONTROL_ITEM.VOUCH_YN%TYPE
            , P_USER_ID            IN FI_ACCOUNT_CONTROL_ITEM.CREATED_BY%TYPE
            );

-- 회계 계정통제관리 수정.
  PROCEDURE UPDATE_ACCOUNT_CONTROL_ITEM
            ( W_ACCOUNT_CONTROL_ID IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , P_MANAGEMENT1_ID     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT1_ID%TYPE
            , P_MANAGEMENT2_ID     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT2_ID%TYPE
            , P_REFER1_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER1_ID%TYPE
            , P_REFER2_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER2_ID%TYPE
            , P_REFER3_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER3_ID%TYPE
            , P_REFER4_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER4_ID%TYPE
            , P_REFER5_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER5_ID%TYPE
            , P_REFER6_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER6_ID%TYPE
            , P_REFER7_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER7_ID%TYPE
            , P_REFER8_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER8_ID%TYPE
            , P_REFER9_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER9_ID%TYPE
            , P_REFER_RATE_ID      IN FI_ACCOUNT_CONTROL_ITEM.REFER_RATE_ID%TYPE
            , P_REFER_AMOUNT_ID    IN FI_ACCOUNT_CONTROL_ITEM.REFER_AMOUNT_ID%TYPE
            , P_REFER_DATE1_ID     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE1_ID%TYPE
            , P_REFER_DATE2_ID     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE2_ID%TYPE
            , P_VOUCH_ID           IN FI_ACCOUNT_CONTROL_ITEM.VOUCH_ID%TYPE
            , P_MANAGEMENT1_YN     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT1_YN%TYPE
            , P_MANAGEMENT2_YN     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT2_YN%TYPE
            , P_REFER1_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER1_YN%TYPE
            , P_REFER2_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER2_YN%TYPE
            , P_REFER3_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER3_YN%TYPE
            , P_REFER4_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER4_YN%TYPE
            , P_REFER5_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER5_YN%TYPE
            , P_REFER6_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER6_YN%TYPE
            , P_REFER7_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER7_YN%TYPE
            , P_REFER8_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER8_YN%TYPE
            , P_REFER9_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER9_YN%TYPE
            , P_REFER_RATE_YN      IN FI_ACCOUNT_CONTROL_ITEM.REFER_RATE_YN%TYPE
            , P_REFER_AMOUNT_YN    IN FI_ACCOUNT_CONTROL_ITEM.REFER_AMOUNT_YN%TYPE
            , P_REFER_DATE1_YN     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE1_YN%TYPE
            , P_REFER_DATE2_YN     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE2_YN%TYPE
            , P_VOUCH_YN           IN FI_ACCOUNT_CONTROL_ITEM.VOUCH_YN%TYPE
            , P_USER_ID            IN FI_ACCOUNT_CONTROL_ITEM.CREATED_BY%TYPE
            );

-- 회계 계정통제관리 삭제.
  PROCEDURE DELETE_ACCOUNT_CONTROL_ITEM
            ( W_ACCOUNT_CONTROL_ID IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            );

-- 회계 계정통제관리 Prompt조회.
  PROCEDURE SELECT_CONTROL_ITEM_PROMPT
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR        IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            );

---------------------------------------------------------------------------------------------------
-- 계정 통제관리항목 Lookup.
  PROCEDURE LU_CONTROL_ITEM_MANAGEMENT
            ( P_CURSOR3             OUT TYPES.TCURSOR3
            , W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR       IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , W_MANAGEMENT_FIELD    IN VARCHAR2
            , W_SOB_ID              IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            , W_ENABLED_YN          IN VARCHAR2
            , W_INQURIY_VALUE       IN VARCHAR2 DEFAULT NULL
            );

-- 계정 통제관리항목 LOOKUP2
  PROCEDURE LU_MANAGEMENT_ITEM
            ( P_CURSOR3             OUT TYPES.TCURSOR3
            , W_LOOKUP_TYPE         IN VARCHAR2
            , W_SOB_ID              IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            , W_ENABLED_YN          IN VARCHAR2
            );
            
---------------------------------------------------------------------------------------------------
-- 계정 통제관리항목 필드값 DESCRIPTION.
  FUNCTION CONTROL_ITEM_DESC_F
          ( W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
          , W_ACCOUNT_DR_CR       IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
          , W_MANAGEMENT_FIELD    IN VARCHAR2
          , W_MANAGEMENT_VAULE    IN VARCHAR2
          , W_SOB_ID              IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
          ) RETURN VARCHAR2;
          
-- 계정 통제관리항목 Lookup Type.
  FUNCTION CONTROL_ITEM_LOOKUP_TYPE_F
          ( W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
          , W_ACCOUNT_DR_CR       IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
          , W_MANAGEMENT_FIELD    IN VARCHAR2
          , W_SOB_ID              IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
          ) RETURN VARCHAR2;

END FI_ACCOUNT_CONTROL_ITEM_G; 

 
/
CREATE OR REPLACE PACKAGE BODY FI_ACCOUNT_CONTROL_ITEM_G
AS
/******************************************************************************/
/* Project      : FPCB ERP
/* Module       : HR
/* Program Name : FI_ACCOUNT_CONTROL_ITEM_G
/* Description  : 회계 계정통제관리 관리.
/*
/* Reference by :
/* Program History :
/*------------------------------------------------------------------------------
/*   Date       In Charge          Description
/*------------------------------------------------------------------------------
/* 07-JUN-2010  Jeon Ho Su          Initialize
/******************************************************************************/
-- 회계 계정통제관리 조회.
  PROCEDURE SELECT_ACCOUNT_CONTROL_ITEM
            ( P_CURSOR               OUT TYPES.TCURSOR
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR        IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR FOR
      SELECT ACI.ACCOUNT_CONTROL_ID
           , ACI.ACCOUNT_CODE
           , ACI.SOB_ID
           , ACI.ORG_ID
           , ACI.ACCOUNT_DR_CR
           , ACI.MANAGEMENT1_ID
           , FI_COMMON_G.ID_NAME_F(ACI.MANAGEMENT1_ID) AS MANAGEMENT1_NAME
           , ACI.MANAGEMENT2_ID
           , FI_COMMON_G.ID_NAME_F(ACI.MANAGEMENT2_ID) AS MANAGEMENT2_NAME
           , ACI.REFER1_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER1_ID) AS REFER1_NAME
           , ACI.REFER2_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER2_ID) AS REFER2_NAME
           , ACI.REFER3_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER3_ID) AS REFER3_NAME
           , ACI.REFER4_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER4_ID) AS REFER4_NAME
           , ACI.REFER5_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER5_ID) AS REFER5_NAME
           , ACI.REFER6_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER6_ID) AS REFER6_NAME
           , ACI.REFER7_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER7_ID) AS REFER7_NAME
           , ACI.REFER8_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER8_ID) AS REFER8_NAME
           , ACI.REFER9_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER9_ID) AS REFER9_NAME
           , ACI.REFER_RATE_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER_RATE_ID) AS REFER_RATE_NAME
           , ACI.REFER_AMOUNT_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER_AMOUNT_ID) AS REFER_AMOUNT_NAME
           , ACI.REFER_DATE1_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER_DATE1_ID) AS REFER_DATE1_NAME
           , ACI.REFER_DATE2_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER_DATE2_ID) AS REFER_DATE2_NAME
           , ACI.VOUCH_ID
           , FI_COMMON_G.ID_NAME_F(ACI.VOUCH_ID) AS VOUCH_NAME
           , ACI.MANAGEMENT1_YN
           , ACI.MANAGEMENT2_YN
           , ACI.REFER1_YN
           , ACI.REFER2_YN
           , ACI.REFER3_YN
           , ACI.REFER4_YN
           , ACI.REFER5_YN
           , ACI.REFER6_YN
           , ACI.REFER7_YN
           , ACI.REFER8_YN
           , ACI.REFER9_YN
           , ACI.REFER_RATE_YN
           , ACI.REFER_AMOUNT_YN
           , ACI.REFER_DATE1_YN
           , ACI.REFER_DATE2_YN
           , ACI.VOUCH_YN
        FROM FI_ACCOUNT_CONTROL_ITEM ACI
       WHERE ACI.ACCOUNT_CONTROL_ID     = W_ACCOUNT_CONTROL_ID
         AND ACI.ACCOUNT_DR_CR          = W_ACCOUNT_DR_CR
         AND ACI.SOB_ID                 = W_SOB_ID
      ;

  END SELECT_ACCOUNT_CONTROL_ITEM;

-- 회계 계정통제관리 삽입.
  PROCEDURE INSERT_ACCOUNT_CONTROL_ITEM
            ( P_ACCOUNT_CONTROL_ID IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE       IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CODE%TYPE
            , P_SOB_ID             IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            , P_ORG_ID             IN FI_ACCOUNT_CONTROL_ITEM.ORG_ID%TYPE
            , P_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , P_MANAGEMENT1_ID     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT1_ID%TYPE
            , P_MANAGEMENT2_ID     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT2_ID%TYPE
            , P_REFER1_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER1_ID%TYPE
            , P_REFER2_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER2_ID%TYPE
            , P_REFER3_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER3_ID%TYPE
            , P_REFER4_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER4_ID%TYPE
            , P_REFER5_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER5_ID%TYPE
            , P_REFER6_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER6_ID%TYPE
            , P_REFER7_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER7_ID%TYPE
            , P_REFER8_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER8_ID%TYPE
            , P_REFER9_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER9_ID%TYPE
            , P_REFER_RATE_ID      IN FI_ACCOUNT_CONTROL_ITEM.REFER_RATE_ID%TYPE
            , P_REFER_AMOUNT_ID    IN FI_ACCOUNT_CONTROL_ITEM.REFER_AMOUNT_ID%TYPE
            , P_REFER_DATE1_ID     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE1_ID%TYPE
            , P_REFER_DATE2_ID     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE2_ID%TYPE
            , P_VOUCH_ID           IN FI_ACCOUNT_CONTROL_ITEM.VOUCH_ID%TYPE
            , P_MANAGEMENT1_YN     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT1_YN%TYPE
            , P_MANAGEMENT2_YN     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT2_YN%TYPE
            , P_REFER1_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER1_YN%TYPE
            , P_REFER2_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER2_YN%TYPE
            , P_REFER3_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER3_YN%TYPE
            , P_REFER4_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER4_YN%TYPE
            , P_REFER5_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER5_YN%TYPE
            , P_REFER6_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER6_YN%TYPE
            , P_REFER7_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER7_YN%TYPE
            , P_REFER8_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER8_YN%TYPE
            , P_REFER9_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER9_YN%TYPE
            , P_REFER_RATE_YN      IN FI_ACCOUNT_CONTROL_ITEM.REFER_RATE_YN%TYPE
            , P_REFER_AMOUNT_YN    IN FI_ACCOUNT_CONTROL_ITEM.REFER_AMOUNT_YN%TYPE
            , P_REFER_DATE1_YN     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE1_YN%TYPE
            , P_REFER_DATE2_YN     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE2_YN%TYPE
            , P_VOUCH_YN           IN FI_ACCOUNT_CONTROL_ITEM.VOUCH_YN%TYPE
            , P_USER_ID            IN FI_ACCOUNT_CONTROL_ITEM.CREATED_BY%TYPE
            )
  AS
    V_SYSDATE                    FI_ACCOUNT_CONTROL_ITEM.CREATION_DATE%TYPE;
    V_RECORD_COUNT               NUMBER := 0;

  BEGIN
    V_SYSDATE := GET_LOCAL_DATE(P_SOB_ID);
    V_RECORD_COUNT := 0;
    BEGIN
      SELECT COUNT(ACI.ACCOUNT_CONTROL_ID) AS RECORD_COUNT
        INTO V_RECORD_COUNT
        FROM FI_ACCOUNT_CONTROL_ITEM ACI
       WHERE ACI.ACCOUNT_CONTROL_ID     = P_ACCOUNT_CONTROL_ID
         AND ACI.ACCOUNT_DR_CR          = P_ACCOUNT_DR_CR
      ;
    EXCEPTION WHEN OTHERS THEN
      V_RECORD_COUNT := 0;
    END;
    IF V_RECORD_COUNT > 0 THEN
     RAISE ERRNUMS.Exist_Data;
    END IF;
-------------------------------------------------
    INSERT INTO FI_ACCOUNT_CONTROL_ITEM
    ( ACCOUNT_CONTROL_ID
    , ACCOUNT_CODE
    , SOB_ID
    , ORG_ID
    , ACCOUNT_DR_CR
    , MANAGEMENT1_ID
    , MANAGEMENT2_ID
    , REFER1_ID
    , REFER2_ID
    , REFER3_ID
    , REFER4_ID
    , REFER5_ID
    , REFER6_ID
    , REFER7_ID
    , REFER8_ID
    , REFER9_ID
    , REFER_RATE_ID
    , REFER_AMOUNT_ID
    , REFER_DATE1_ID
    , REFER_DATE2_ID
    , VOUCH_ID
    , MANAGEMENT1_YN
    , MANAGEMENT2_YN
    , REFER1_YN
    , REFER2_YN
    , REFER3_YN
    , REFER4_YN
    , REFER5_YN
    , REFER6_YN
    , REFER7_YN
    , REFER8_YN
    , REFER9_YN
    , REFER_RATE_YN
    , REFER_AMOUNT_YN
    , REFER_DATE1_YN
    , REFER_DATE2_YN
    , VOUCH_YN
    , CREATION_DATE
    , CREATED_BY
    , LAST_UPDATE_DATE
    , LAST_UPDATED_BY )
    VALUES
    ( P_ACCOUNT_CONTROL_ID
    , P_ACCOUNT_CODE
    , P_SOB_ID
    , P_ORG_ID
    , P_ACCOUNT_DR_CR
    , P_MANAGEMENT1_ID
    , P_MANAGEMENT2_ID
    , P_REFER1_ID
    , P_REFER2_ID
    , P_REFER3_ID
    , P_REFER4_ID
    , P_REFER5_ID
    , P_REFER6_ID
    , P_REFER7_ID
    , P_REFER8_ID
    , P_REFER9_ID
    , P_REFER_RATE_ID
    , P_REFER_AMOUNT_ID
    , P_REFER_DATE1_ID
    , P_REFER_DATE2_ID
    , P_VOUCH_ID
    , P_MANAGEMENT1_YN
    , P_MANAGEMENT2_YN
    , P_REFER1_YN
    , P_REFER2_YN
    , P_REFER3_YN
    , P_REFER4_YN
    , P_REFER5_YN
    , P_REFER6_YN
    , P_REFER7_YN
    , P_REFER8_YN
    , P_REFER9_YN
    , P_REFER_RATE_YN
    , P_REFER_AMOUNT_YN
    , P_REFER_DATE1_YN
    , P_REFER_DATE2_YN
    , P_VOUCH_YN
    , V_SYSDATE
    , P_USER_ID
    , V_SYSDATE
    , P_USER_ID );

  EXCEPTION
    WHEN ERRNUMS.Exist_Data THEN
    RAISE_APPLICATION_ERROR(ERRNUMS.Exist_Data_Code, ERRNUMS.Exist_Data_Desc);
  END INSERT_ACCOUNT_CONTROL_ITEM;

-- 회계 계정통제관리 수정.
  PROCEDURE UPDATE_ACCOUNT_CONTROL_ITEM
            ( W_ACCOUNT_CONTROL_ID IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , P_MANAGEMENT1_ID     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT1_ID%TYPE
            , P_MANAGEMENT2_ID     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT2_ID%TYPE
            , P_REFER1_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER1_ID%TYPE
            , P_REFER2_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER2_ID%TYPE
            , P_REFER3_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER3_ID%TYPE
            , P_REFER4_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER4_ID%TYPE
            , P_REFER5_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER5_ID%TYPE
            , P_REFER6_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER6_ID%TYPE
            , P_REFER7_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER7_ID%TYPE
            , P_REFER8_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER8_ID%TYPE
            , P_REFER9_ID          IN FI_ACCOUNT_CONTROL_ITEM.REFER9_ID%TYPE
            , P_REFER_RATE_ID      IN FI_ACCOUNT_CONTROL_ITEM.REFER_RATE_ID%TYPE
            , P_REFER_AMOUNT_ID    IN FI_ACCOUNT_CONTROL_ITEM.REFER_AMOUNT_ID%TYPE
            , P_REFER_DATE1_ID     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE1_ID%TYPE
            , P_REFER_DATE2_ID     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE2_ID%TYPE
            , P_VOUCH_ID           IN FI_ACCOUNT_CONTROL_ITEM.VOUCH_ID%TYPE
            , P_MANAGEMENT1_YN     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT1_YN%TYPE
            , P_MANAGEMENT2_YN     IN FI_ACCOUNT_CONTROL_ITEM.MANAGEMENT2_YN%TYPE
            , P_REFER1_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER1_YN%TYPE
            , P_REFER2_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER2_YN%TYPE
            , P_REFER3_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER3_YN%TYPE
            , P_REFER4_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER4_YN%TYPE
            , P_REFER5_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER5_YN%TYPE
            , P_REFER6_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER6_YN%TYPE
            , P_REFER7_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER7_YN%TYPE
            , P_REFER8_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER8_YN%TYPE
            , P_REFER9_YN          IN FI_ACCOUNT_CONTROL_ITEM.REFER9_YN%TYPE
            , P_REFER_RATE_YN      IN FI_ACCOUNT_CONTROL_ITEM.REFER_RATE_YN%TYPE
            , P_REFER_AMOUNT_YN    IN FI_ACCOUNT_CONTROL_ITEM.REFER_AMOUNT_YN%TYPE
            , P_REFER_DATE1_YN     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE1_YN%TYPE
            , P_REFER_DATE2_YN     IN FI_ACCOUNT_CONTROL_ITEM.REFER_DATE2_YN%TYPE
            , P_VOUCH_YN           IN FI_ACCOUNT_CONTROL_ITEM.VOUCH_YN%TYPE
            , P_USER_ID            IN FI_ACCOUNT_CONTROL_ITEM.CREATED_BY%TYPE
            )
  AS
  BEGIN
    UPDATE FI_ACCOUNT_CONTROL_ITEM
      SET MANAGEMENT1_ID     = P_MANAGEMENT1_ID
        , MANAGEMENT2_ID     = P_MANAGEMENT2_ID
        , REFER1_ID          = P_REFER1_ID
        , REFER2_ID          = P_REFER2_ID
        , REFER3_ID          = P_REFER3_ID
        , REFER4_ID          = P_REFER4_ID
        , REFER5_ID          = P_REFER5_ID
        , REFER6_ID          = P_REFER6_ID
        , REFER7_ID          = P_REFER7_ID
        , REFER8_ID          = P_REFER8_ID
        , REFER9_ID          = P_REFER9_ID
        , REFER_RATE_ID      = P_REFER_RATE_ID
        , REFER_AMOUNT_ID    = P_REFER_AMOUNT_ID
        , REFER_DATE1_ID     = P_REFER_DATE1_ID
        , REFER_DATE2_ID     = P_REFER_DATE2_ID
        , VOUCH_ID           = P_VOUCH_ID
        , MANAGEMENT1_YN     = P_MANAGEMENT1_YN
        , MANAGEMENT2_YN     = P_MANAGEMENT2_YN
        , REFER1_YN          = P_REFER1_YN
        , REFER2_YN          = P_REFER2_YN
        , REFER3_YN          = P_REFER3_YN
        , REFER4_YN          = P_REFER4_YN
        , REFER5_YN          = P_REFER5_YN
        , REFER6_YN          = P_REFER6_YN
        , REFER7_YN          = P_REFER7_YN
        , REFER8_YN          = P_REFER8_YN
        , REFER9_YN          = P_REFER9_YN
        , REFER_RATE_YN      = P_REFER_RATE_YN
        , REFER_AMOUNT_YN    = P_REFER_AMOUNT_YN
        , REFER_DATE1_YN     = P_REFER_DATE1_YN
        , REFER_DATE2_YN     = P_REFER_DATE2_YN
        , VOUCH_YN           = P_VOUCH_YN
        , LAST_UPDATE_DATE   = GET_LOCAL_DATE(SOB_ID)
        , LAST_UPDATED_BY    = P_USER_ID
    WHERE ACCOUNT_CONTROL_ID = W_ACCOUNT_CONTROL_ID
      AND ACCOUNT_DR_CR      = W_ACCOUNT_DR_CR;

  END UPDATE_ACCOUNT_CONTROL_ITEM;

-- 회계 계정통제관리 삭제.
  PROCEDURE DELETE_ACCOUNT_CONTROL_ITEM
            ( W_ACCOUNT_CONTROL_ID IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR      IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            )
  AS
  BEGIN
    DELETE FI_ACCOUNT_CONTROL_ITEM
    WHERE ACCOUNT_CONTROL_ID = W_ACCOUNT_CONTROL_ID
      AND ACCOUNT_DR_CR      = W_ACCOUNT_DR_CR
   ;

  END DELETE_ACCOUNT_CONTROL_ITEM;

-- 회계 계정통제관리 Prompt조회.
  PROCEDURE SELECT_CONTROL_ITEM_PROMPT
            ( P_CURSOR3              OUT TYPES.TCURSOR3
            , W_ACCOUNT_CONTROL_ID   IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR        IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , W_SOB_ID               IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR3 FOR
      SELECT ACI.MANAGEMENT1_ID
           , FI_COMMON_G.ID_NAME_F(ACI.MANAGEMENT1_ID) AS MANAGEMENT1_NAME
           , DECODE(ACI.MANAGEMENT1_ID, NULL, 'F', NVL(ACI.MANAGEMENT1_YN, 'N')) AS MANAGEMENT1_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.MANAGEMENT1_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS MANAGEMENT1_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'MANAGEMENT1_ID', ACI.SOB_ID) AS MANAGEMENT1_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.MANAGEMENT1_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS MANAGEMENT1_DATA_TYPE
           , ACI.MANAGEMENT2_ID
           , FI_COMMON_G.ID_NAME_F(ACI.MANAGEMENT2_ID) AS MANAGEMENT2_NAME
           , DECODE(ACI.MANAGEMENT2_ID, NULL, 'F', NVL(ACI.MANAGEMENT2_YN, 'N')) AS MANAGEMENT2_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.MANAGEMENT2_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS MANAGEMENT2_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'MANAGEMENT2_ID', ACI.SOB_ID) AS MANAGEMENT2_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.MANAGEMENT2_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS MANAGEMENT2_DATA_TYPE
           , ACI.REFER1_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER1_ID) AS REFER1_NAME
           , DECODE(ACI.REFER1_ID, NULL, 'F', NVL(ACI.REFER1_YN, 'N')) AS REFER1_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER1_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS REFER1_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'REFER1_ID', ACI.SOB_ID) AS REFER1_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER1_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS REFER1_DATA_TYPE
           , ACI.REFER2_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER2_ID) AS REFER2_NAME
           , DECODE(ACI.REFER2_ID, NULL, 'F', NVL(ACI.REFER2_YN, 'N')) AS REFER2_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER2_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS REFER2_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'REFER2_ID', ACI.SOB_ID) AS REFER2_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER2_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS REFER2_DATA_TYPE
           , ACI.REFER3_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER3_ID) AS REFER3_NAME
           , DECODE(ACI.REFER3_ID, NULL, 'F', NVL(ACI.REFER3_YN, 'N')) AS REFER3_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER3_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS REFER3_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'REFER3_ID', ACI.SOB_ID) AS REFER3_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER3_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS REFER3_DATA_TYPE
           , ACI.REFER4_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER4_ID) AS REFER4_NAME
           , DECODE(ACI.REFER4_ID, NULL, 'F', NVL(ACI.REFER4_YN, 'N')) AS REFER4_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER4_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS REFER4_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'REFER4_ID', ACI.SOB_ID) AS REFER4_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER4_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS REFER4_DATA_TYPE
           , ACI.REFER5_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER5_ID) AS REFER5_NAME
           , DECODE(ACI.REFER5_ID, NULL, 'F', NVL(ACI.REFER5_YN, 'N')) AS REFER5_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER5_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS REFER5_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'REFER5_ID', ACI.SOB_ID) AS REFER5_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER5_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS REFER5_DATA_TYPE
           , ACI.REFER6_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER6_ID) AS REFER6_NAME
           , DECODE(ACI.REFER6_ID, NULL, 'F', NVL(ACI.REFER6_YN, 'N')) AS REFER6_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER6_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS REFER6_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'REFER6_ID', ACI.SOB_ID) AS REFER6_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER6_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS REFER6_DATA_TYPE
           , ACI.REFER7_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER7_ID) AS REFER7_NAME
           , DECODE(ACI.REFER7_ID, NULL, 'F', NVL(ACI.REFER7_YN, 'N')) AS REFER7_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER7_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS REFER7_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'REFER7_ID', ACI.SOB_ID) AS REFER7_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER7_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS REFER7_DATA_TYPE
           , ACI.REFER8_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER8_ID) AS REFER8_NAME
           , DECODE(ACI.REFER8_ID, NULL, 'F', NVL(ACI.REFER8_YN, 'N')) AS REFER8_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER8_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS REFER8_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'REFER8_ID', ACI.SOB_ID) AS REFER8_LOOKUP_TYPE
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER8_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS REFER8_DATA_TYPE
           , ACI.REFER9_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER9_ID) AS REFER9_NAME
           , DECODE(ACI.REFER9_ID, NULL, 'F', NVL(ACI.REFER9_YN, 'N')) AS REFER9_YN
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER9_ID,  DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE1', 'VALUE2')), 'N') AS REFER9_LOOKUP_YN
           , FI_ACCOUNT_CONTROL_ITEM_G.CONTROL_ITEM_LOOKUP_TYPE_F(ACI.ACCOUNT_CONTROL_ID, ACI.ACCOUNT_DR_CR, 'REFER9_ID', ACI.SOB_ID) AS REFER9_LOOKUP_TYPE 
           , NVL(FI_COMMON_G.ID_VALUE_F(ACI.REFER9_ID, DECODE(ACI.ACCOUNT_DR_CR, '1', 'VALUE4', 'VALUE4')), 'VARCHAR2') AS REFER9_DATA_TYPE
           , ACI.REFER_RATE_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER_RATE_ID) AS REFER_RATE_NAME
           , DECODE(ACI.REFER_RATE_ID, NULL, 'F', NVL(ACI.REFER_RATE_YN, 'N')) AS REFER_RATE_YN
           , ACI.REFER_AMOUNT_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER_AMOUNT_ID) AS REFER_AMOUNT_NAME
           , DECODE(ACI.REFER_AMOUNT_ID, NULL, 'F', NVL(ACI.REFER_AMOUNT_YN, 'N')) AS REFER_AMOUNT_YN
           , ACI.REFER_DATE1_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER_DATE1_ID) AS REFER_DATE1_NAME
           , DECODE(ACI.REFER_DATE1_ID, NULL, 'F', NVL(ACI.REFER_DATE1_YN, 'N')) AS REFER_DATE1_YN
           , ACI.REFER_DATE2_ID
           , FI_COMMON_G.ID_NAME_F(ACI.REFER_DATE2_ID) AS REFER_DATE2_NAME
           , DECODE(ACI.REFER_DATE2_ID, NULL, 'F', NVL(ACI.REFER_DATE2_YN, 'N')) AS REFER_DATE2_YN
           , ACI.VOUCH_ID
           , FI_COMMON_G.ID_NAME_F(ACI.VOUCH_ID) AS VOUCH_NAME
           , NVL(ACI.VOUCH_YN, 'F') AS VOUCH_YN
           , ACI.ACCOUNT_CONTROL_ID
           , ACI.ACCOUNT_CODE
           , ACI.ACCOUNT_DR_CR
        FROM FI_ACCOUNT_CONTROL_ITEM ACI
       WHERE ACI.ACCOUNT_CONTROL_ID         = W_ACCOUNT_CONTROL_ID
         AND ACI.ACCOUNT_DR_CR              = W_ACCOUNT_DR_CR
         AND ACI.SOB_ID                     = W_SOB_ID
      ;

  EXCEPTION WHEN OTHERS THEN
    NULL;
  END SELECT_CONTROL_ITEM_PROMPT;

---------------------------------------------------------------------------------------------------
-- 계정 관리항목 Lookup.
  PROCEDURE LU_CONTROL_ITEM_MANAGEMENT
            ( P_CURSOR3             OUT TYPES.TCURSOR3
            , W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
            , W_ACCOUNT_DR_CR       IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
            , W_MANAGEMENT_FIELD    IN VARCHAR2
            , W_SOB_ID              IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            , W_ENABLED_YN          IN VARCHAR2
            , W_INQURIY_VALUE       IN VARCHAR2 DEFAULT NULL
            )
  AS
    V_STD_DATE                       DATE := NULL;
    V_LOOKUP_TYPE                   FI_COMMON.VALUE1%TYPE := NULL;

  BEGIN
    IF W_ENABLED_YN = 'Y' THEN
      V_STD_DATE := GET_LOCAL_DATE(W_SOB_ID);
    END IF;

    -- LOOKUP 타입 조회.
    V_LOOKUP_TYPE := CONTROL_ITEM_LOOKUP_TYPE_F ( W_ACCOUNT_CONTROL_ID => W_ACCOUNT_CONTROL_ID
                                                , W_ACCOUNT_DR_CR => W_ACCOUNT_DR_CR
                                                , W_MANAGEMENT_FIELD => W_MANAGEMENT_FIELD
                                                , W_SOB_ID => W_SOB_ID
                                                );
    IF V_LOOKUP_TYPE = 'BANK_SITE' THEN
    -- 금융기관.
      OPEN P_CURSOR3 FOR
        SELECT FB.BANK_CODE AS MANAGEMENT_CODE
             , FB.BANK_NAME AS MANAGEMENT_NAME
             , FI_COMMON_G.CODE_NAME_F('BANK_TYPE', FB.BANK_TYPE, FB.SOB_ID) AS MANAGEMENT_DESC
          FROM FI_BANK FB
         WHERE FB.BANK_GROUP              <> '-'
           AND FB.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', FB.ENABLED_FLAG)
           AND FB.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_FR)
           AND (FB.EFFECTIVE_DATE_TO IS NULL OR FB.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_TO))
           AND FB.SOB_ID                  = W_SOB_ID
        ;
    ELSIF V_LOOKUP_TYPE = 'CUSTOMER' THEN
    -- 거래처.
      OPEN P_CURSOR3 FOR
        SELECT SC.SUPP_CUST_CODE AS MANAGEMENT_CODE
             , SC.SUPP_CUST_NAME AS MANAGEMENT_NAME
             , REPLACE(SC.TAX_REG_NO, '-', '') || '(' || SC.PRESIDENT_NAME || ')' AS MANAGEMENT_DESC
          FROM FI_SUPP_CUST_V SC
        WHERE SC.SOB_ID                  = W_SOB_ID
          AND SC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', SC.ENABLED_FLAG)
          AND SC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, SC.EFFECTIVE_DATE_FR)
          AND (SC.EFFECTIVE_DATE_TO IS NULL OR SC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, SC.EFFECTIVE_DATE_TO))
        ;
    ELSIF V_LOOKUP_TYPE = 'BANK_ACCOUNT' THEN
    -- 계좌.
      OPEN P_CURSOR3 FOR
        SELECT BA.BANK_ACCOUNT_CODE AS MANAGEMENT_CODE
             , BA.BANK_ACCOUNT_NUM || '(' || FI_COMMON_G.CODE_NAME_F('ACCOUNT_TYPE', BA.ACCOUNT_TYPE, BA.SOB_ID) || ')'  AS MANAGEMENT_NAME
             , BA.BANK_ACCOUNT_NAME || '(' || FB.BANK_NAME || ')' AS MANAGEMENT_DESC
          FROM FI_BANK_ACCOUNT_TLV BA
             , FI_BANK FB
         WHERE BA.BANK_ID                 = FB.BANK_ID
           AND BA.SOB_ID                  = W_SOB_ID
           AND FB.BANK_CODE               = NVL(W_INQURIY_VALUE, FB.BANK_CODE)
           AND BA.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', BA.ENABLED_FLAG)
           AND BA.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, BA.EFFECTIVE_DATE_FR)
           AND (BA.EFFECTIVE_DATE_TO IS NULL OR BA.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, BA.EFFECTIVE_DATE_TO))
        ;
    ELSIF V_LOOKUP_TYPE = 'PAYABLE_BILL' THEN
    -- 지급어음 리스트.
      OPEN P_CURSOR3 FOR
        SELECT PB.BILL_NUM AS MANAGEMENT_CODE
             , FI_COMMON_G.CODE_NAME_F('PAYABLE_STATUS', PB.BILL_STATUS, PB.SOB_ID, PB.ORG_ID) AS MANAGEMENT_NAME
             , FI_BANK_G.ID_NAME_F(PB.BANK_ID) AS MANAGEMENT_DESC
          FROM FI_PAYABLE_BILL PB
         WHERE PB.SOB_ID                  = W_SOB_ID
           AND (PB.BILL_AMOUNT  = 0 OR PB.BILL_AMOUNT IS NULL)
        ;
    ELSIF V_LOOKUP_TYPE = 'RECEIVABLE_BILL' THEN
    -- 받을어음 리스트.
      OPEN P_CURSOR3 FOR
        SELECT BM.BILL_NUM AS MANAGEMENT_CODE
             , TO_CHAR(BM.BILL_AMOUNT, 'FM999,999,999,999') AS MANAGEMENT_NAME
             , FI_COMMON_G.SUPP_CUST_ID_NAME_F(BM.CUSTOMER_ID) AS MANAGEMENT_DESC
          FROM FI_BILL_MASTER BM
            , FI_BILL_STATUS_V BS
         WHERE BM.BILL_STATUS             = BS.BILL_STATUS
           AND BM.SOB_ID                  = BS.SOB_ID
           AND BM.SOB_ID                  = W_SOB_ID
           AND BS.CASH_DEPOSIT_YN         = 'Y'
           AND BS.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', BS.ENABLED_FLAG)
           AND BS.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, BS.EFFECTIVE_DATE_FR)
           AND (BS.EFFECTIVE_DATE_TO IS NULL OR BS.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, BS.EFFECTIVE_DATE_TO))
        ;
    ELSIF V_LOOKUP_TYPE = 'BILL_STATUS' THEN
    -- 어음상태 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'BILL_STATUS'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'FUND_CODE' THEN
    -- 자금코드 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'FUND_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'FUND_MOVE' THEN
    -- 자금이체.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'FUND_MOVE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'LOAN_USE' THEN
    -- 대출과목(차입금용도)
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'LOAN_USE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'LOAN_NUM' THEN
    -- 차입금 번호.
      OPEN P_CURSOR3 FOR
        SELECT LM.LOAN_NUM AS MANAGEMENT_CODE
            , CASE
                  WHEN LM.LOAN_KIND IN('2', '3') THEN TO_CHAR(LM.LIMIT_AMOUNT, 'FM999,999,999,999,999')
                  ELSE TO_CHAR(LM.LOAN_AMOUNT, 'FM999,999,999,999,999')
               END AS MANAGEMENT_NAME
            , LM.LOAN_DESC || '(' || CASE
                                        WHEN LM.LOAN_KIND IN('2', '3') THEN TO_CHAR(LM.L_ISSUE_DATE, 'YYYY-MM-DD') || '~' || TO_CHAR(LM.L_DUE_DATE, 'YYYY-MM-DD')
                                        ELSE TO_CHAR(LM.ISSUE_DATE, 'YYYY-MM-DD') || '~' || TO_CHAR(LM.DUE_DATE, 'YYYY-MM-DD')
                                     END || ')' AS MANAGEMENT_DESC
          FROM FI_LOAN_MASTER LM
        WHERE LM.SOB_ID              = W_SOB_ID
/*          AND CASE
                WHEN LM.LOAN_KIND IN('2', '3') THEN NVL(LM.LIMIT_AMOUNT, 0) - NVL(LM.LOAN_AMOUNT, 0)
                ELSE NVL(LM.LOAN_AMOUNT, 0) - NVL(LM.REPAY_SUM_AMOUNT, 0)
              END  > 0*/
        ORDER BY LM.LOAN_NUM
        ;
    ELSIF V_LOOKUP_TYPE = 'TAX_CODE' THEN
    -- 사업장 세금계산서 코드 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;    
    ELSIF V_LOOKUP_TYPE = 'TAX_ELECTRO' THEN
    -- 전자세금계산서 여부.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_ELECTRO'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_REASON' THEN
    -- 부가세대급금 사유.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_REASON'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_GUBUN' THEN
    -- 계산서 형태.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_GUBUN'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_ASSET_GB' THEN
    -- 자산구분.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_ASSET_GB'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_TYPE' THEN
    -- 계산서 유형.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_TYPE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_NOT_DED' THEN
    -- 매입세액불공제사유.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_NOT_DED'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'VAT_FREE' THEN
    -- 면세사유.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_FREE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'CREDIT_CARD' THEN
    -- 신용카드 리스트.
      OPEN P_CURSOR3 FOR
        SELECT CC.CARD_CODE AS MANAGEMENT_CODE
             , CC.CARD_NUM AS MANAGEMENT_NAME
             , CC.CARD_NAME AS MANAGEMENT_DESC
          FROM FI_CREDIT_CARD CC
         WHERE CC.SOB_ID              = W_SOB_ID
           AND CC.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', CC.ENABLED_FLAG)
           AND CC.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_FR)
           AND (CC.EFFECTIVE_DATE_TO IS NULL OR CC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_TO))
        ORDER BY CC.CARD_NUM
        ;
    ELSIF V_LOOKUP_TYPE = 'NATION' THEN
    -- 국가.
      OPEN P_CURSOR3 FOR
        SELECT EC.COUNTRY_CODE AS MANAGEMENT_CODE
             , EC.COUNTRY_FULL_NAME AS MANAGEMENT_NAME
             , EC.CURRENCY_CODE AS MANAGEMENT_DESC
          FROM EAPP_COUNTRY EC
        WHERE EC.SOB_ID              = W_SOB_ID
          AND EC.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', EC.ENABLED_FLAG)
          AND EC.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, EC.EFFECTIVE_DATE_FR)
          AND (EC.EFFECTIVE_DATE_TO IS NULL OR EC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, EC.EFFECTIVE_DATE_TO))
        ORDER BY EC.COUNTRY_CODE
        ;
    ELSIF V_LOOKUP_TYPE = 'PERSON_NUM' THEN
    -- PERSON.
      OPEN P_CURSOR3 FOR
        SELECT PM.PERSON_NUM AS MANAGEMENT_CODE
             , PM.DISPLAY_NAME AS MANAGEMENT_NAME
             , HRM_DEPT_MASTER_G.DEPT_NAME_F(PM.DEPT_ID) || '(' || HRM_COMMON_G.CODE_NAME_F('EMPLOYE_TYPE', PM.EMPLOYE_TYPE, PM.SOB_ID, PM.ORG_ID) ||')' AS MANAGEMENT_DESC
          FROM HRM_PERSON_MASTER PM
        WHERE PM.SOB_ID          = W_SOB_ID
/*          AND PM.ORI_JOIN_DATE   <= V_STD_DATE
          AND (PM.RETIRE_DATE IS NULL OR PM.RETIRE_DATE >= V_STD_DATE)*/
          AND PM.CORP_TYPE       IN ('1')
          AND EXISTS (SELECT 'X'
                        FROM HRM_CORP_MASTER CM
                      WHERE CM.SOB_ID       = PM.SOB_ID
                        AND CM.ORG_ID       = PM.ORG_ID
                        AND CM.CORP_ID      = PM.CORP_ID
                        AND CM.DEFAULT_FLAG = 'Y'
                     )
        ORDER BY PM.PERSON_NUM
        ;
    ELSIF V_LOOKUP_TYPE = 'DEPT' THEN
    -- 부서.
      OPEN P_CURSOR3 FOR
        SELECT DM.DEPT_CODE AS MANAGEMENT_CODE
             , DM.DEPT_NAME AS MANAGEMENT_NAME
             , DM.DEPT_LEVEL AS MANAGEMENT_DESC
          FROM FI_DEPT_MASTER DM
        WHERE DM.SOB_ID              = W_SOB_ID
          AND DM.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', DM.ENABLED_FLAG)
          AND DM.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_FR)
          AND (DM.EFFECTIVE_DATE_TO IS NULL OR DM.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_TO))
          AND EXISTS (SELECT 'X'
                        FROM FI_ACCOUNT_BOOK AB
                      WHERE AB.SOB_ID           = DM.SOB_ID
                        AND AB.DEPT_LEVEL       = DM.DEPT_LEVEL
                        AND AB.OPERATING_FLAG   = 'Y'
                     )
          /*AND EXISTS (SELECT 'X'
                        FROM FI_DEPT_MAPPING DMP
                      WHERE DMP.SOB_ID      = DM.SOB_ID
                        AND DECODE(DMP.MAPPING_DEPT_ALL, 'Y', DM.DEPT_CODE, DMP.MAPPING_DEPT_CODE)  = DM.DEPT_CODE
                        AND DMP.DEPT_CODE          = W_INQURIY_VALUE
                     )*/
        ORDER BY DM.SORT_NUM, DM.DEPT_CODE
        
        /*SELECT DM.DEPT_CODE AS MANAGEMENT_CODE
             , DM.DEPT_NAME AS MANAGEMENT_NAME
             , DM.DEPT_LEVEL AS MANAGEMENT_DESC
          FROM FI_DEPT_MASTER DM
        WHERE DM.SOB_ID              = W_SOB_ID
          AND DM.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', DM.ENABLED_FLAG)
          AND DM.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_FR)
          AND (DM.EFFECTIVE_DATE_TO IS NULL OR DM.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_TO))
          AND EXISTS (SELECT 'X'
                        FROM FI_ACCOUNT_BOOK AB
                      WHERE AB.SOB_ID           = DM.SOB_ID
                        AND AB.DEPT_LEVEL       = DM.DEPT_LEVEL
                        AND AB.OPERATING_FLAG   = 'Y'
                     )
        ORDER BY DM.SORT_NUM, DM.DEPT_CODE*/
        ;
    ELSIF V_LOOKUP_TYPE = 'COSTCENTER' THEN
    -- 원가코드.
      OPEN P_CURSOR3 FOR
        SELECT CC.COST_CENTER_CODE AS MANAGEMENT_CODE
             , CC.COST_CENTER_DESC AS MANAGEMENT_NAME
             , EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_MFG_TYPE', CC.MFG_TYPE_LCODE) || '-' ||
               EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_DIRECT_TYPE', CC.DIRECT_TYPE_LCODE) AS MANAGEMENT_DESC
          FROM CST_COST_CENTER CC
         WHERE CC.SOB_ID                  = W_SOB_ID
           AND CC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', CC.ENABLED_FLAG)
           AND CC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_FR)
           AND (CC.EFFECTIVE_DATE_TO IS NULL OR CC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_TO))
        /*   AND EXISTS (SELECT 'X'
                        FROM FI_COSTCENTER_MAPPING CMP
                      WHERE CMP.SOB_ID      = CC.SOB_ID
                        AND DECODE(CMP.MAPPING_COSTCENTER_ALL, 'Y', CC.COST_CENTER_CODE, CMP.MAPPING_COSTCENTER_CODE)  = CC.COST_CENTER_CODE
                        AND CMP.DEPT_CODE          = W_INQURIY_VALUE
                     )*/
       ORDER BY CC.COST_CENTER_CODE
       ;
       /*SELECT CC.COST_CENTER_CODE AS MANAGEMENT_CODE
             , CC.COST_CENTER_DESC AS MANAGEMENT_NAME
             , EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_MFG_TYPE', CC.MFG_TYPE_LCODE) || '-' ||
               EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_DIRECT_TYPE', CC.DIRECT_TYPE_LCODE) AS MANAGEMENT_DESC
          FROM CST_COST_CENTER CC
         WHERE CC.SOB_ID                  = W_SOB_ID
           AND CC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', CC.ENABLED_FLAG)
           AND CC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_FR)
           AND (CC.EFFECTIVE_DATE_TO IS NULL OR CC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_TO))
       ORDER BY CC.COST_CENTER_CODE
       ;*/
    ELSIF V_LOOKUP_TYPE = 'CURRENCY' THEN
    -- 통화.
      OPEN P_CURSOR3 FOR
        SELECT EC.CURRENCY_CODE  AS MANAGEMENT_CODE
            , EC.CURRENCY_DESC AS MANAGEMENT_NAME
            , EC.CURRENCY_SYMBOL AS MANAGEMENT_DESC
         FROM EAPP_CURRENCY     EC
        WHERE EC.SOB_ID             = W_SOB_ID
          AND EC.ORG_ID             = FI_COMMON_G.OPERATING_ORG_F(W_SOB_ID)
          AND TRUNC(EC.EFFECTIVE_DATE_FR)  <= NVL(V_STD_DATE, TRUNC(EC.EFFECTIVE_DATE_FR))
          AND (TRUNC(EC.EFFECTIVE_DATE_TO) IS NULL OR TRUNC(EC.EFFECTIVE_DATE_TO) >= NVL(V_STD_DATE, TRUNC(EC.EFFECTIVE_DATE_TO)))
          AND EC.ENABLED_FLAG       = DECODE(W_ENABLED_YN, 'Y', 'Y', EC.ENABLED_FLAG)
        ORDER BY EC.CURRENCY_CODE
        ;        
    ELSIF V_LOOKUP_TYPE = 'BANK' THEN
    -- 은행.
      OPEN P_CURSOR3 FOR
        SELECT FB.BANK_CODE AS MANAGEMENT_CODE
             , FB.BANK_NAME AS MANAGEMENT_NAME
             , FI_COMMON_G.CODE_NAME_F('BANK_TYPE', FB.BANK_TYPE, FB.SOB_ID) AS MANAGEMENT_DESC
          FROM FI_BANK FB
         WHERE FB.BANK_GROUP              = '-'
           AND FB.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', FB.ENABLED_FLAG)
           AND FB.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_FR)
           AND (FB.EFFECTIVE_DATE_TO IS NULL OR FB.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_TO))
           AND FB.SOB_ID                  = W_SOB_ID
        ;
    ELSIF V_LOOKUP_TYPE = 'ENTERTAIN' THEN
    -- 접대비구분.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'ENTERTAIN_TYPE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSE
      OPEN P_CURSOR3 FOR
        SELECT NULL AS MANAGEMENT_CODE
             , NULL AS MANAGEMENT_NAME
             ,  NULL AS MANAGEMENT_DESC
          FROM DUAL
        ;
    END IF;
  END LU_CONTROL_ITEM_MANAGEMENT;

-- 계정 통제관리항목 LOOKUP2
  PROCEDURE LU_MANAGEMENT_ITEM
            ( P_CURSOR3             OUT TYPES.TCURSOR3
            , W_LOOKUP_TYPE         IN VARCHAR2
            , W_SOB_ID              IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
            , W_ENABLED_YN          IN VARCHAR2
            )
  AS
    V_STD_DATE                       DATE := NULL;
  BEGIN
    IF W_ENABLED_YN = 'Y' THEN
      V_STD_DATE := GET_LOCAL_DATE(W_SOB_ID);
    END IF;
    IF W_LOOKUP_TYPE = 'BANK_SITE' THEN
    -- 금융기관.
      OPEN P_CURSOR3 FOR
        SELECT FB.BANK_CODE AS MANAGEMENT_CODE
             , FB.BANK_NAME AS MANAGEMENT_NAME
             , FI_COMMON_G.CODE_NAME_F('BANK_TYPE', FB.BANK_TYPE, FB.SOB_ID) AS MANAGEMENT_DESC
          FROM FI_BANK FB
         WHERE FB.BANK_GROUP              <> '-'
           AND FB.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', FB.ENABLED_FLAG)
           AND FB.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_FR)
           AND (FB.EFFECTIVE_DATE_TO IS NULL OR FB.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_TO))
           AND FB.SOB_ID                  = W_SOB_ID
        ;
    ELSIF W_LOOKUP_TYPE = 'CUSTOMER' THEN
    -- 거래처.
      OPEN P_CURSOR3 FOR
        SELECT SC.SUPP_CUST_CODE AS MANAGEMENT_CODE
             , SC.SUPP_CUST_NAME AS MANAGEMENT_NAME
             , REPLACE(SC.TAX_REG_NO, '-', '') || '(' || SC.PRESIDENT_NAME || ')' AS MANAGEMENT_DESC
          FROM FI_SUPP_CUST_V SC
        WHERE SC.SOB_ID                  = W_SOB_ID
          AND SC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', SC.ENABLED_FLAG)
          AND SC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, SC.EFFECTIVE_DATE_FR)
          AND (SC.EFFECTIVE_DATE_TO IS NULL OR SC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, SC.EFFECTIVE_DATE_TO))
        ;
    ELSIF W_LOOKUP_TYPE = 'BANK_ACCOUNT' THEN
    -- 계좌.
      OPEN P_CURSOR3 FOR
        SELECT BA.BANK_ACCOUNT_CODE AS MANAGEMENT_CODE
             , BA.BANK_ACCOUNT_NUM || '(' || FI_COMMON_G.CODE_NAME_F('ACCOUNT_TYPE', BA.ACCOUNT_TYPE, BA.SOB_ID) || ')'  AS MANAGEMENT_NAME
             , BA.BANK_ACCOUNT_NAME || '(' || FB.BANK_NAME || ')' AS MANAGEMENT_DESC
          FROM FI_BANK_ACCOUNT_TLV BA
             , FI_BANK FB
         WHERE BA.BANK_ID                 = FB.BANK_ID
           AND BA.SOB_ID                  = W_SOB_ID
           AND BA.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', BA.ENABLED_FLAG)
           AND BA.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, BA.EFFECTIVE_DATE_FR)
           AND (BA.EFFECTIVE_DATE_TO IS NULL OR BA.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, BA.EFFECTIVE_DATE_TO))
        ;
    ELSIF W_LOOKUP_TYPE = 'PAYABLE_BILL' THEN
    -- 지급어음 리스트.
      OPEN P_CURSOR3 FOR
        SELECT PB.BILL_NUM AS MANAGEMENT_CODE
             , FI_COMMON_G.CODE_NAME_F('PAYABLE_STATUS', PB.BILL_STATUS, PB.SOB_ID, PB.ORG_ID) AS MANAGEMENT_NAME
             , FI_BANK_G.ID_NAME_F(PB.BANK_ID) AS MANAGEMENT_DESC
          FROM FI_PAYABLE_BILL PB
         WHERE PB.SOB_ID                  = W_SOB_ID
           AND (PB.BILL_AMOUNT  = 0 OR PB.BILL_AMOUNT IS NULL)
        ;
    ELSIF W_LOOKUP_TYPE = 'RECEIVABLE_BILL' THEN
    -- 받을어음 리스트.
      OPEN P_CURSOR3 FOR
        SELECT BM.BILL_NUM AS MANAGEMENT_CODE
             , TO_CHAR(BM.BILL_AMOUNT, 'FM999,999,999,999') AS MANAGEMENT_NAME
             , FI_COMMON_G.SUPP_CUST_ID_NAME_F(BM.CUSTOMER_ID) AS MANAGEMENT_DESC
          FROM FI_BILL_MASTER BM
            , FI_BILL_STATUS_V BS
         WHERE BM.BILL_STATUS             = BS.BILL_STATUS
           AND BM.SOB_ID                  = BS.SOB_ID
           AND BM.SOB_ID                  = W_SOB_ID
           AND BS.CASH_DEPOSIT_YN         = 'Y'
           AND BS.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', BS.ENABLED_FLAG)
           AND BS.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, BS.EFFECTIVE_DATE_FR)
           AND (BS.EFFECTIVE_DATE_TO IS NULL OR BS.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, BS.EFFECTIVE_DATE_TO))
        ;
    ELSIF W_LOOKUP_TYPE = 'BILL_STATUS' THEN
    -- 어음상태 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'BILL_STATUS'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'FUND_CODE' THEN
    -- 자금코드 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'FUND_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'FUND_MOVE' THEN
    -- 자금이체 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'FUND_MOVE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;        
    ELSIF W_LOOKUP_TYPE = 'LOAN_USE' THEN
    -- 대출과목(차입금용도)
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'LOAN_USE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'LOAN_NUM' THEN
    -- 차입금 번호.
      OPEN P_CURSOR3 FOR
        SELECT LM.LOAN_NUM AS MANAGEMENT_CODE
            , CASE
                  WHEN LM.LOAN_KIND IN('2', '3') THEN TO_CHAR(LM.LIMIT_AMOUNT, 'FM999,999,999,999,999')
                  ELSE TO_CHAR(LM.LOAN_AMOUNT, 'FM999,999,999,999,999')
               END AS MANAGEMENT_NAME
            , LM.LOAN_DESC || '(' || CASE
                                        WHEN LM.LOAN_KIND IN('2', '3') THEN TO_CHAR(LM.L_ISSUE_DATE, 'YYYY-MM-DD') || '~' || TO_CHAR(LM.L_DUE_DATE, 'YYYY-MM-DD')
                                        ELSE TO_CHAR(LM.ISSUE_DATE, 'YYYY-MM-DD') || '~' || TO_CHAR(LM.DUE_DATE, 'YYYY-MM-DD')
                                     END || ')' AS MANAGEMENT_DESC
          FROM FI_LOAN_MASTER LM
        WHERE LM.SOB_ID              = W_SOB_ID
/*          AND CASE
                WHEN LM.LOAN_KIND IN('2', '3') THEN NVL(LM.LIMIT_AMOUNT, 0) - NVL(LM.LOAN_AMOUNT, 0)
                ELSE NVL(LM.LOAN_AMOUNT, 0) - NVL(LM.REPAY_SUM_AMOUNT, 0)
              END  > 0*/
        ORDER BY LM.LOAN_NUM
        ;
    ELSIF W_LOOKUP_TYPE = 'TAX_CODE' THEN
    -- 사업장 세금계산서 코드 리스트.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;    
    ELSIF W_LOOKUP_TYPE = 'TAX_ELECTRO' THEN
    -- 전자세금계산서 여부.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_ELECTRO'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'VAT_REASON' THEN
    -- 부가세대급금 사유.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_REASON'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'VAT_GUBUN' THEN
    -- 계산서 형태.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_GUBUN'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'VAT_ASSET_GB' THEN
    -- 자산구분.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_ASSET_GB'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'VAT_TYPE' THEN
    -- 계산서 유형.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
             , FI.CODE_NAME AS MANAGEMENT_NAME
             , FI.DESCRIPTION AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_TYPE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'VAT_NOT_DED' THEN
    -- 매입세액불공제사유.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_NOT_DED'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'VAT_FREE' THEN
    -- 면세사유.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_FREE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'CREDIT_CARD' THEN
    -- 신용카드 리스트.
      OPEN P_CURSOR3 FOR
        SELECT CC.CARD_CODE AS MANAGEMENT_CODE
             , CC.CARD_NUM AS MANAGEMENT_NAME
             , CC.CARD_NAME AS MANAGEMENT_DESC
          FROM FI_CREDIT_CARD CC
         WHERE CC.SOB_ID              = W_SOB_ID
           AND CC.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', CC.ENABLED_FLAG)
           AND CC.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_FR)
           AND (CC.EFFECTIVE_DATE_TO IS NULL OR CC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_TO))
        ORDER BY CC.CARD_NUM
        ;
    ELSIF W_LOOKUP_TYPE = 'NATION' THEN
    -- 국가.
      OPEN P_CURSOR3 FOR
        SELECT EC.COUNTRY_CODE AS MANAGEMENT_CODE
             , EC.COUNTRY_FULL_NAME AS MANAGEMENT_NAME
             , EC.CURRENCY_CODE AS MANAGEMENT_DESC
          FROM EAPP_COUNTRY EC
        WHERE EC.SOB_ID              = W_SOB_ID
          AND EC.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', EC.ENABLED_FLAG)
          AND EC.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, EC.EFFECTIVE_DATE_FR)
          AND (EC.EFFECTIVE_DATE_TO IS NULL OR EC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, EC.EFFECTIVE_DATE_TO))
        ORDER BY EC.COUNTRY_CODE
        ;
    ELSIF W_LOOKUP_TYPE = 'PERSON_NUM' THEN
    -- PERSON.
      OPEN P_CURSOR3 FOR
        SELECT PM.PERSON_NUM AS MANAGEMENT_CODE
             , PM.NAME AS MANAGEMENT_NAME
             , HRM_DEPT_MASTER_G.DEPT_NAME_F(PM.DEPT_ID) AS MANAGEMENT_DESC
          FROM HRM_PERSON_MASTER PM
        WHERE PM.SOB_ID          = W_SOB_ID
          AND PM.ORI_JOIN_DATE   <= V_STD_DATE
          AND (PM.RETIRE_DATE IS NULL OR PM.RETIRE_DATE >= V_STD_DATE)
          AND PM.CORP_TYPE       IN ('1')
          AND EXISTS (SELECT 'X'
                        FROM HRM_CORP_MASTER CM
                      WHERE CM.SOB_ID       = PM.SOB_ID
                        AND CM.ORG_ID       = PM.ORG_ID
                        AND CM.CORP_ID      = PM.CORP_ID
                        AND CM.DEFAULT_FLAG = 'Y'
                     )
        ORDER BY PM.PERSON_NUM
        ;
    ELSIF W_LOOKUP_TYPE = 'DEPT' THEN
    -- 부서.
      OPEN P_CURSOR3 FOR
        SELECT DM.DEPT_CODE AS MANAGEMENT_CODE
             , DM.DEPT_NAME AS MANAGEMENT_NAME
             , DM.DEPT_LEVEL AS MANAGEMENT_DESC
          FROM FI_DEPT_MASTER DM
        WHERE DM.SOB_ID              = W_SOB_ID
          AND DM.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', DM.ENABLED_FLAG)
          AND DM.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_FR)
          AND (DM.EFFECTIVE_DATE_TO IS NULL OR DM.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_TO))
          AND EXISTS (SELECT 'X'
                        FROM FI_ACCOUNT_BOOK AB
                      WHERE AB.SOB_ID           = DM.SOB_ID
                        AND AB.DEPT_LEVEL       = DM.DEPT_LEVEL
                        AND AB.OPERATING_FLAG   = 'Y'
                     )
          /*AND EXISTS (SELECT 'X'
                        FROM FI_DEPT_MAPPING DMP
                      WHERE DMP.SOB_ID      = DM.SOB_ID
                        AND DECODE(DMP.MAPPING_DEPT_ALL, 'Y', DM.DEPT_CODE, DMP.MAPPING_DEPT_CODE)  = DM.DEPT_CODE
                        AND DMP.DEPT_CODE          = W_INQURIY_VALUE
                     )*/
        ORDER BY DM.SORT_NUM, DM.DEPT_CODE
        
        /*SELECT DM.DEPT_CODE AS MANAGEMENT_CODE
             , DM.DEPT_NAME AS MANAGEMENT_NAME
             , DM.DEPT_LEVEL AS MANAGEMENT_DESC
          FROM FI_DEPT_MASTER DM
        WHERE DM.SOB_ID              = W_SOB_ID
          AND DM.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', DM.ENABLED_FLAG)
          AND DM.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_FR)
          AND (DM.EFFECTIVE_DATE_TO IS NULL OR DM.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, DM.EFFECTIVE_DATE_TO))
          AND EXISTS (SELECT 'X'
                        FROM FI_ACCOUNT_BOOK AB
                      WHERE AB.SOB_ID           = DM.SOB_ID
                        AND AB.DEPT_LEVEL       = DM.DEPT_LEVEL
                        AND AB.OPERATING_FLAG   = 'Y'
                     )
        ORDER BY DM.SORT_NUM, DM.DEPT_CODE*/
        ;
    ELSIF W_LOOKUP_TYPE = 'COSTCENTER' THEN
    -- 원가코드.
      OPEN P_CURSOR3 FOR
        SELECT CC.COST_CENTER_CODE AS MANAGEMENT_CODE
             , CC.COST_CENTER_DESC AS MANAGEMENT_NAME
             , EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_MFG_TYPE', CC.MFG_TYPE_LCODE) || '-' ||
               EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_DIRECT_TYPE', CC.DIRECT_TYPE_LCODE) AS MANAGEMENT_DESC
          FROM CST_COST_CENTER CC
         WHERE CC.SOB_ID                  = W_SOB_ID
           AND CC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', CC.ENABLED_FLAG)
           AND CC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_FR)
           AND (CC.EFFECTIVE_DATE_TO IS NULL OR CC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_TO))
        /*   AND EXISTS (SELECT 'X'
                        FROM FI_COSTCENTER_MAPPING CMP
                      WHERE CMP.SOB_ID      = CC.SOB_ID
                        AND DECODE(CMP.MAPPING_COSTCENTER_ALL, 'Y', CC.COST_CENTER_CODE, CMP.MAPPING_COSTCENTER_CODE)  = CC.COST_CENTER_CODE
                        AND CMP.DEPT_CODE          = W_INQURIY_VALUE
                     )*/
       ORDER BY CC.COST_CENTER_CODE
       ;
       /*SELECT CC.COST_CENTER_CODE AS MANAGEMENT_CODE
             , CC.COST_CENTER_DESC AS MANAGEMENT_NAME
             , EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_MFG_TYPE', CC.MFG_TYPE_LCODE) || '-' ||
               EAPP_COMMON_G.GET_LOOKUP_DESC(CC.SOB_ID, CC.ORG_ID, 'COST_CENTER_DIRECT_TYPE', CC.DIRECT_TYPE_LCODE) AS MANAGEMENT_DESC
          FROM CST_COST_CENTER CC
         WHERE CC.SOB_ID                  = W_SOB_ID
           AND CC.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', CC.ENABLED_FLAG)
           AND CC.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_FR)
           AND (CC.EFFECTIVE_DATE_TO IS NULL OR CC.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, CC.EFFECTIVE_DATE_TO))
       ORDER BY CC.COST_CENTER_CODE
       ;*/
    ELSIF W_LOOKUP_TYPE = 'CURRENCY' THEN
    -- 통화.
      OPEN P_CURSOR3 FOR
        SELECT EC.CURRENCY_CODE  AS MANAGEMENT_CODE
            , EC.CURRENCY_DESC AS MANAGEMENT_NAME
            , EC.CURRENCY_SYMBOL AS MANAGEMENT_DESC
         FROM EAPP_CURRENCY     EC
        WHERE EC.SOB_ID             = W_SOB_ID
          AND EC.ORG_ID             = FI_COMMON_G.OPERATING_ORG_F(W_SOB_ID)
          AND TRUNC(EC.EFFECTIVE_DATE_FR)  <= NVL(V_STD_DATE, TRUNC(EC.EFFECTIVE_DATE_FR))
          AND (TRUNC(EC.EFFECTIVE_DATE_TO) IS NULL OR TRUNC(EC.EFFECTIVE_DATE_TO) >= NVL(V_STD_DATE, TRUNC(EC.EFFECTIVE_DATE_TO)))
          AND EC.ENABLED_FLAG       = DECODE(W_ENABLED_YN, 'Y', 'Y', EC.ENABLED_FLAG)
        ORDER BY EC.CURRENCY_CODE
        ;        
    ELSIF W_LOOKUP_TYPE = 'BANK' THEN
    -- 은행.
      OPEN P_CURSOR3 FOR
        SELECT FB.BANK_CODE AS MANAGEMENT_CODE
             , FB.BANK_NAME AS MANAGEMENT_NAME
             , FI_COMMON_G.CODE_NAME_F('BANK_TYPE', FB.BANK_TYPE, FB.SOB_ID) AS MANAGEMENT_DESC
          FROM FI_BANK FB
         WHERE FB.BANK_GROUP              = '-'
           AND FB.ENABLED_FLAG            = DECODE(W_ENABLED_YN, 'Y', 'Y', FB.ENABLED_FLAG)
           AND FB.EFFECTIVE_DATE_FR       <= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_FR)
           AND (FB.EFFECTIVE_DATE_TO IS NULL OR FB.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FB.EFFECTIVE_DATE_TO))
           AND FB.SOB_ID                  = W_SOB_ID
        ;
    ELSIF W_LOOKUP_TYPE = 'ENTERTAIN' THEN
    -- 접대비구분.
      OPEN P_CURSOR3 FOR
        SELECT FI.CODE AS MANAGEMENT_CODE
            , FI.CODE_NAME AS MANAGEMENT_NAME
            , FI.VALUE1 AS MANAGEMENT_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'ENTERTAIN_TYPE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.ENABLED_FLAG        = DECODE(W_ENABLED_YN, 'Y', 'Y', FI.ENABLED_FLAG)
          AND FI.EFFECTIVE_DATE_FR   <= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_FR)
          AND (FI.EFFECTIVE_DATE_TO IS NULL OR FI.EFFECTIVE_DATE_TO >= NVL(V_STD_DATE, FI.EFFECTIVE_DATE_TO))
        ORDER BY FI.SORT_NUM, FI.CODE
        ;
    ELSE
      OPEN P_CURSOR3 FOR
        SELECT NULL AS MANAGEMENT_CODE
             , NULL AS MANAGEMENT_NAME
             ,  NULL AS MANAGEMENT_DESC
          FROM DUAL
        ;
    END IF;
  END LU_MANAGEMENT_ITEM;
  
---------------------------------------------------------------------------------------------------
-- 계정 통제관리항목 필드값 DESCRIPTION.
  FUNCTION CONTROL_ITEM_DESC_F
          ( W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
          , W_ACCOUNT_DR_CR       IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
          , W_MANAGEMENT_FIELD    IN VARCHAR2
          , W_MANAGEMENT_VAULE    IN VARCHAR2
          , W_SOB_ID              IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
          ) RETURN VARCHAR2
  AS
    V_LOOKUP_TYPE                 FI_COMMON.VALUE1%TYPE := NULL;
    V_CONTROL_ITEM_DESC           VARCHAR2(200) := NULL;

  BEGIN
    -- LOOKUP 타입 조회.
    V_LOOKUP_TYPE := CONTROL_ITEM_LOOKUP_TYPE_F ( W_ACCOUNT_CONTROL_ID => W_ACCOUNT_CONTROL_ID
                                                , W_ACCOUNT_DR_CR => W_ACCOUNT_DR_CR
                                                , W_MANAGEMENT_FIELD => W_MANAGEMENT_FIELD
                                                , W_SOB_ID => W_SOB_ID
                                                );
--    RAISE_APPLICATION_ERROR(-20001, W_ACCOUNT_CONTROL_ID || '/' || W_ACCOUNT_DR_CR || '/' || V_LOOKUP_TYPE || '/ ' || W_MANAGEMENT_FIELD || '/ ' || W_MANAGEMENT_VAULE);
    V_CONTROL_ITEM_DESC := NULL;
    IF V_LOOKUP_TYPE = 'BANK_SITE' THEN
    -- 금융기관.
      BEGIN
        SELECT FB.BANK_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_BANK FB
         WHERE FB.BANK_GROUP              <> '-'
           AND FB.BANK_CODE               = W_MANAGEMENT_VAULE
           AND FB.SOB_ID                  = W_SOB_ID
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'CUSTOMER' THEN
    -- 거래처.
      BEGIN
        SELECT SC.SUPP_CUST_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_SUPP_CUST_V SC
        WHERE SC.SOB_ID                  = W_SOB_ID
          AND SC.SUPP_CUST_CODE          = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'BANK_ACCOUNT' THEN
    -- 계좌.
      BEGIN
        SELECT BA.BANK_ACCOUNT_NUM || '(' || FI_COMMON_G.CODE_NAME_F('ACCOUNT_TYPE', BA.ACCOUNT_TYPE, BA.SOB_ID) || ')' AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_BANK_ACCOUNT_TLV BA
             , FI_BANK FB
         WHERE BA.BANK_ID                 = FB.BANK_ID
           AND BA.BANK_ACCOUNT_CODE       = W_MANAGEMENT_VAULE
           AND BA.SOB_ID                  = W_SOB_ID
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'PAYABLE_BILL' THEN
    -- 지급어음 리스트.
      BEGIN
        SELECT FI_COMMON_G.CODE_NAME_F('PAYABLE_STATUS', PB.BILL_STATUS, PB.SOB_ID, PB.ORG_ID) AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_PAYABLE_BILL PB
         WHERE PB.SOB_ID                  = W_SOB_ID
           AND PB.BILL_NUM                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'RECEIVEABLE_BILL' THEN
    -- 받을어음 리스트.
      BEGIN
        SELECT TO_CHAR(BM.BILL_AMOUNT, 'FM999,999,999,999') AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_BILL_MASTER BM
         WHERE BM.SOB_ID                  = W_SOB_ID
           AND BM.BILL_NUM                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'BILL_STATUS' THEN
    -- 어음상태 리스트.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'BILL_STATUS'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'FUND_CODE' THEN
    -- 자금코드 리스트.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'FUND_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'FUND_MOVE' THEN
    -- 자금이체 리스트.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'FUND_MOVE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;      
    ELSIF V_LOOKUP_TYPE = 'LOAN_USE' THEN
    -- 대출과목(차입금 용도)
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'LOAN_USE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'LOAN_NUM' THEN
    -- 차입금 번호.
      BEGIN
        SELECT LM.LOAN_DESC
          INTO V_CONTROL_ITEM_DESC
          FROM FI_LOAN_MASTER LM
        WHERE LM.SOB_ID              = W_SOB_ID
          AND LM.LOAN_NUM            = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'TAX_CODE' THEN
    -- 사업장 세금계산서 코드 리스트.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_CODE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'TAX_ELECTRO' THEN
    -- 전자세금계산서 여부.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'TAX_ELECTRO'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_REASON' THEN
    -- 부가세대급금 사유.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_REASON'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_GUBUN' THEN
    -- 계산서 형태.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_GUBUN'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_ASSET_GB' THEN
    -- 자산구분.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_ASSET_GB'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_TYPE' THEN
    -- 계산서 유형.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_TYPE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_NOT_DED' THEN
    -- 매입세액불공제사유.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_NOT_DED'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'VAT_FREE' THEN
    -- 면세사유.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'VAT_FREE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;  
    ELSIF V_LOOKUP_TYPE = 'CREDIT_CARD' THEN
    -- 신용카드 리스트.
      BEGIN
        SELECT CC.CARD_NUM AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_CREDIT_CARD CC
        WHERE CC.CARD_CODE           = W_MANAGEMENT_VAULE
          AND CC.SOB_ID              = W_SOB_ID
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'NATION' THEN
    -- 국가.
      BEGIN
        SELECT EC.COUNTRY_FULL_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM EAPP_COUNTRY EC
        WHERE EC.SOB_ID              = W_SOB_ID
          AND EC.COUNTRY_CODE        = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'PERSON_NUM' THEN
    -- PERSON.
      BEGIN
        SELECT PM.NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM HRM_PERSON_MASTER PM
        WHERE PM.SOB_ID          = W_SOB_ID
          AND PM.PERSON_NUM      = W_MANAGEMENT_VAULE
          AND EXISTS (SELECT 'X'
                        FROM HRM_CORP_MASTER CM
                      WHERE CM.SOB_ID       = PM.SOB_ID
                        AND CM.ORG_ID       = PM.ORG_ID
                        AND CM.CORP_ID      = PM.CORP_ID
                        AND CM.DEFAULT_FLAG = 'Y'
                     )
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'DEPT' THEN
    -- 부서.
      BEGIN
        SELECT DM.DEPT_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_DEPT_MASTER DM
        WHERE DM.SOB_ID              = W_SOB_ID
          AND DM.DEPT_CODE           = W_MANAGEMENT_VAULE
          AND EXISTS (SELECT 'X'
                        FROM FI_ACCOUNT_BOOK AB
                      WHERE AB.SOB_ID           = DM.SOB_ID
                        AND AB.DEPT_LEVEL       = DM.DEPT_LEVEL
                        AND AB.OPERATING_FLAG   = 'Y'
                     )
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'COSTCENTER' THEN
    -- 원가코드.
      BEGIN
        SELECT CC.COST_CENTER_DESC AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM CST_COST_CENTER CC
        WHERE CC.SOB_ID                  = W_SOB_ID
          AND CC.COST_CENTER_CODE        = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'CURRENCY' THEN
    -- 통화.
      BEGIN
        SELECT EC.CURRENCY_DESC AS MANAGEMENT_NAME
         INTO V_CONTROL_ITEM_DESC
         FROM EAPP_CURRENCY     EC
        WHERE EC.SOB_ID             = W_SOB_ID
          AND EC.ORG_ID             = FI_COMMON_G.OPERATING_ORG_F(W_SOB_ID)
          AND EC.CURRENCY_CODE      = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'BANK' THEN
    -- 은행.
      BEGIN
        SELECT FB.BANK_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_BANK FB
         WHERE FB.BANK_GROUP              = '-'
           AND FB.BANK_CODE               = W_MANAGEMENT_VAULE
           AND FB.SOB_ID                  = W_SOB_ID
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
    ELSIF V_LOOKUP_TYPE = 'ENTERTAIN' THEN
    -- 접대비구분.
      BEGIN
        SELECT FI.CODE_NAME AS MANAGEMENT_NAME
          INTO V_CONTROL_ITEM_DESC
          FROM FI_COMMON_TLV FI
        WHERE FI.GROUP_CODE          = 'ENTERTAIN_TYPE'
          AND FI.SOB_ID              = W_SOB_ID
          AND FI.CODE                = W_MANAGEMENT_VAULE
        ;
      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;  
    ELSE
      NULL;
    END IF;
    RETURN V_CONTROL_ITEM_DESC;
  END CONTROL_ITEM_DESC_F;

-- 계정 잔액관리항목 Lookup Type.
  FUNCTION CONTROL_ITEM_LOOKUP_TYPE_F
          ( W_ACCOUNT_CONTROL_ID  IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_CONTROL_ID%TYPE
          , W_ACCOUNT_DR_CR       IN FI_ACCOUNT_CONTROL_ITEM.ACCOUNT_DR_CR%TYPE
          , W_MANAGEMENT_FIELD    IN VARCHAR2
          , W_SOB_ID              IN FI_ACCOUNT_CONTROL_ITEM.SOB_ID%TYPE
          ) RETURN VARCHAR2
  AS
    V_LOOKUP_TYPE                   FI_COMMON.VALUE1%TYPE := NULL;
  BEGIN
    -- LOOKUP 타입 조회.
    BEGIN
      SELECT FC.VALUE3
        INTO V_LOOKUP_TYPE
        FROM FI_COMMON FC
      WHERE FC.SOB_ID                 = W_SOB_ID 
       AND FC.COMMON_ID               IN 
             ( SELECT  CASE W_MANAGEMENT_FIELD
                         WHEN 'MANAGEMENT1_ID' THEN ACI.MANAGEMENT1_ID
                         WHEN 'MANAGEMENT2_ID' THEN ACI.MANAGEMENT2_ID
                         WHEN 'REFER1_ID' THEN ACI.REFER1_ID
                         WHEN 'REFER2_ID' THEN ACI.REFER2_ID
                         WHEN 'REFER3_ID' THEN ACI.REFER3_ID
                         WHEN 'REFER4_ID' THEN ACI.REFER4_ID
                         WHEN 'REFER5_ID' THEN ACI.REFER5_ID
                         WHEN 'REFER6_ID' THEN ACI.REFER6_ID
                         WHEN 'REFER7_ID' THEN ACI.REFER7_ID
                         WHEN 'REFER8_ID' THEN ACI.REFER8_ID
                         WHEN 'REFER9_ID' THEN ACI.REFER9_ID
                         ELSE NULL
                       END AS VALUE_ID
                FROM FI_ACCOUNT_CONTROL_ITEM ACI
               WHERE ACI.ACCOUNT_CONTROL_ID     = W_ACCOUNT_CONTROL_ID
                 AND ACI.ACCOUNT_DR_CR          = W_ACCOUNT_DR_CR
                 AND ACI.SOB_ID                 = FC.SOB_ID
              );
    EXCEPTION WHEN OTHERS THEN
      V_LOOKUP_TYPE := NULL;
    END;
    RETURN V_LOOKUP_TYPE;
  END CONTROL_ITEM_LOOKUP_TYPE_F;

END FI_ACCOUNT_CONTROL_ITEM_G; 
/
