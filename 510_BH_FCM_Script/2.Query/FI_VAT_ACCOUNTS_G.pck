CREATE OR REPLACE PACKAGE FI_VAT_ACCOUNTS_G
AS

-- VAT관리 계정 조회.
  PROCEDURE SELECT_VAT_ACCOUNTS
            ( P_CURSOR              OUT TYPES.TCURSOR
            , P_ACCOUNT_CONTROL_ID  IN 
            FI_VAT_ACCOUNTS.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID              IN FI_VAT_ACCOUNTS.SOB_ID%TYPE
            , P_ENABLED_FLAG        IN FI_VAT_ACCOUNTS.ENABLED_FLAG%TYPE
            );

-- VAT관리 계정 INSERT.
  PROCEDURE INSERT_VAT_ACCOUNTS
            ( P_ACCOUNT_CONTROL_ID IN FI_VAT_ACCOUNTS.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE       IN FI_VAT_ACCOUNTS.ACCOUNT_CODE%TYPE
            , P_SOB_ID             IN FI_VAT_ACCOUNTS.SOB_ID%TYPE
            , P_VAT_GUBUN          IN FI_VAT_ACCOUNTS.VAT_GUBUN%TYPE
            , P_VAT_TYPE           IN FI_VAT_ACCOUNTS.VAT_TYPE%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_VAT_ACCOUNTS.VAT_ENABLED_FLAG%TYPE
            , P_VAT_ASSET_GB       IN FI_VAT_ACCOUNTS.VAT_ASSET_GB%TYPE
            , P_VAT_DOCUMENT_TYPE  IN FI_VAT_ACCOUNTS.VAT_DOCUMENT_TYPE%TYPE
            , P_ENABLED_FLAG       IN FI_VAT_ACCOUNTS.ENABLED_FLAG%TYPE
            , P_USER_ID            IN FI_VAT_ACCOUNTS.CREATED_BY%TYPE 
            );

-- VAT관리 계정 UPDATE.
  PROCEDURE UPDATE_VAT_ACCOUNTS
            ( W_ACCOUNT_CONTROL_ID IN FI_VAT_ACCOUNTS.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID             IN FI_VAT_ACCOUNTS.SOB_ID%TYPE
            , P_VAT_GUBUN          IN FI_VAT_ACCOUNTS.VAT_GUBUN%TYPE
            , P_VAT_TYPE           IN FI_VAT_ACCOUNTS.VAT_TYPE%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_VAT_ACCOUNTS.VAT_ENABLED_FLAG%TYPE
            , P_VAT_ASSET_GB       IN FI_VAT_ACCOUNTS.VAT_ASSET_GB%TYPE
            , P_VAT_DOCUMENT_TYPE  IN FI_VAT_ACCOUNTS.VAT_DOCUMENT_TYPE%TYPE
            , P_ENABLED_FLAG       IN FI_VAT_ACCOUNTS.ENABLED_FLAG%TYPE
            , P_USER_ID            IN FI_VAT_ACCOUNTS.CREATED_BY%TYPE 
            );

-- 계정세트에서 부가세 사용여부 변경시 사용하는 프로시져.
  PROCEDURE SAVE_VAT_ACCOUNTS
            ( P_ACCOUNT_CONTROL_ID IN FI_VAT_ACCOUNTS.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE       IN FI_VAT_ACCOUNTS.ACCOUNT_CODE%TYPE
            , P_SOB_ID             IN FI_VAT_ACCOUNTS.SOB_ID%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_VAT_ACCOUNTS.VAT_ENABLED_FLAG%TYPE
            , P_ENABLED_FLAG       IN FI_VAT_ACCOUNTS.ENABLED_FLAG%TYPE
            , P_USER_ID            IN FI_VAT_ACCOUNTS.CREATED_BY%TYPE 
            );
                                   
END FI_VAT_ACCOUNTS_G;
/
CREATE OR REPLACE PACKAGE BODY FI_VAT_ACCOUNTS_G
AS
/******************************************************************************/
/* Project      : FPCB ERP
/* Module       : FCM
/* Program Name : FI_VAT_ACCOUNTS_G
/* Description  : 부가세관련 계정.
/*
/* Reference by : FI_ACCOUNT_CONTROL에서 VAT_ENABLED_FLAG 변경시 TRIGGER를 통해 반영됨.
/* Program History
/*------------------------------------------------------------------------------
/*   Date       In Charge          Description
/*------------------------------------------------------------------------------
/* 07-JUN-2010  Jeon Ho Su          Initialize
/******************************************************************************/
-- VAT관리 계정 조회.
  PROCEDURE SELECT_VAT_ACCOUNTS
            ( P_CURSOR              OUT TYPES.TCURSOR
            , P_ACCOUNT_CONTROL_ID  IN FI_VAT_ACCOUNTS.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID              IN FI_VAT_ACCOUNTS.SOB_ID%TYPE
            , P_ENABLED_FLAG        IN FI_VAT_ACCOUNTS.ENABLED_FLAG%TYPE
            )
  AS
  BEGIN
    OPEN P_CURSOR FOR
      SELECT VA.ACCOUNT_CONTROL_ID
           , VA.ACCOUNT_CODE
           , AC.ACCOUNT_DESC
           , FI_COMMON_G.CODE_NAME_F('VAT_GUBUN', VA.VAT_GUBUN, VA.SOB_ID) AS VAT_GUBUN_DESC
           , VA.VAT_GUBUN
           , FI_COMMON_G.CODE_NAME_F('VAT_TYPE', VA.VAT_TYPE, VA.SOB_ID) AS VAT_TYPE_DESC
           , VA.VAT_TYPE
           , VA.VAT_ENABLED_FLAG
           , FI_COMMON_G.CODE_NAME_F('VAT_ASSET_GB', VA.VAT_ASSET_GB, VA.SOB_ID) AS VAT_ASSET_GB_DESC
           , VA.VAT_ASSET_GB
           , FI_COMMON_G.CODE_NAME_F('VAT_DOC_TYPE', VA.VAT_DOCUMENT_TYPE, VA.SOB_ID) AS VAT_DOC_TYPE_DESC
           , VA.VAT_DOCUMENT_TYPE
           , VA.ENABLED_FLAG
        FROM FI_VAT_ACCOUNTS VA
          , FI_ACCOUNT_CONTROL AC
      WHERE VA.ACCOUNT_CONTROL_ID       = AC.ACCOUNT_CONTROL_ID
        AND VA.ACCOUNT_CONTROL_ID       = NVL(P_ACCOUNT_CONTROL_ID, VA.ACCOUNT_CONTROL_ID)
        AND VA.SOB_ID                   = P_SOB_ID
        AND VA.ENABLED_FLAG             = DECODE(P_ENABLED_FLAG, 'Y', 'Y', VA.ENABLED_FLAG)
      ORDER BY VA.ACCOUNT_CODE
      ;
  END SELECT_VAT_ACCOUNTS;

-- VAT관리 계정 INSERT.
  PROCEDURE INSERT_VAT_ACCOUNTS
            ( P_ACCOUNT_CONTROL_ID IN FI_VAT_ACCOUNTS.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE       IN FI_VAT_ACCOUNTS.ACCOUNT_CODE%TYPE
            , P_SOB_ID             IN FI_VAT_ACCOUNTS.SOB_ID%TYPE
            , P_VAT_GUBUN          IN FI_VAT_ACCOUNTS.VAT_GUBUN%TYPE
            , P_VAT_TYPE           IN FI_VAT_ACCOUNTS.VAT_TYPE%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_VAT_ACCOUNTS.VAT_ENABLED_FLAG%TYPE
            , P_VAT_ASSET_GB       IN FI_VAT_ACCOUNTS.VAT_ASSET_GB%TYPE
            , P_VAT_DOCUMENT_TYPE  IN FI_VAT_ACCOUNTS.VAT_DOCUMENT_TYPE%TYPE
            , P_ENABLED_FLAG       IN FI_VAT_ACCOUNTS.ENABLED_FLAG%TYPE
            , P_USER_ID            IN FI_VAT_ACCOUNTS.CREATED_BY%TYPE 
            )
  AS
    V_SYSDATE DATE := GET_LOCAL_DATE(P_SOB_ID);
    V_RECORD_COUNT                 NUMBER := 0;
  BEGIN
    V_RECORD_COUNT := 0;
    BEGIN
      SELECT COUNT(VA.ACCOUNT_CODE) AS RECORD_COUNT
        INTO V_RECORD_COUNT
        FROM FI_VAT_ACCOUNTS VA
      WHERE VA.ACCOUNT_CONTROL_ID = P_ACCOUNT_CONTROL_ID
        AND VA.SOB_ID           = P_SOB_ID
      ;
    EXCEPTION WHEN OTHERS THEN
      V_RECORD_COUNT := 0;
    END;
    IF V_RECORD_COUNT > 0 THEN
     RAISE ERRNUMS.Exist_Data;
    END IF;
    
    INSERT INTO FI_VAT_ACCOUNTS
    ( ACCOUNT_CONTROL_ID
    , ACCOUNT_CODE 
    , SOB_ID 
    , VAT_GUBUN 
    , VAT_TYPE 
    , VAT_ENABLED_FLAG 
    , VAT_ASSET_GB 
    , VAT_DOCUMENT_TYPE 
    , ENABLED_FLAG 
    , CREATION_DATE 
    , CREATED_BY 
    , LAST_UPDATE_DATE 
    , LAST_UPDATED_BY )
    VALUES
    ( P_ACCOUNT_CONTROL_ID
    , P_ACCOUNT_CODE
    , P_SOB_ID
    , P_VAT_GUBUN
    , P_VAT_TYPE
    , NVL(P_VAT_ENABLED_FLAG, 'N')
    , P_VAT_ASSET_GB
    , P_VAT_DOCUMENT_TYPE
    , NVL(P_ENABLED_FLAG, 'N')
    , V_SYSDATE
    , P_USER_ID
    , V_SYSDATE
    , P_USER_ID );
  EXCEPTION
    WHEN ERRNUMS.Exist_Data THEN
    RAISE_APPLICATION_ERROR(-20001, EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'EAPP_90003', '&&FIELD_NAME:=Account Code(계정코드)'));
  END INSERT_VAT_ACCOUNTS;

-- VAT관리 계정 UPDATE.
  PROCEDURE UPDATE_VAT_ACCOUNTS
            ( W_ACCOUNT_CONTROL_ID IN FI_VAT_ACCOUNTS.ACCOUNT_CONTROL_ID%TYPE
            , P_SOB_ID             IN FI_VAT_ACCOUNTS.SOB_ID%TYPE
            , P_VAT_GUBUN          IN FI_VAT_ACCOUNTS.VAT_GUBUN%TYPE
            , P_VAT_TYPE           IN FI_VAT_ACCOUNTS.VAT_TYPE%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_VAT_ACCOUNTS.VAT_ENABLED_FLAG%TYPE
            , P_VAT_ASSET_GB       IN FI_VAT_ACCOUNTS.VAT_ASSET_GB%TYPE
            , P_VAT_DOCUMENT_TYPE  IN FI_VAT_ACCOUNTS.VAT_DOCUMENT_TYPE%TYPE
            , P_ENABLED_FLAG       IN FI_VAT_ACCOUNTS.ENABLED_FLAG%TYPE
            , P_USER_ID            IN FI_VAT_ACCOUNTS.CREATED_BY%TYPE 
            )
  AS
    V_SYSDATE DATE := GET_LOCAL_DATE(P_SOB_ID);
  BEGIN
    UPDATE FI_VAT_ACCOUNTS
      SET VAT_GUBUN          = P_VAT_GUBUN
        , VAT_TYPE           = P_VAT_TYPE
        , VAT_ENABLED_FLAG   = NVL(P_VAT_ENABLED_FLAG, 'N')
        , VAT_ASSET_GB       = P_VAT_ASSET_GB
        , VAT_DOCUMENT_TYPE  = P_VAT_DOCUMENT_TYPE
        , ENABLED_FLAG       = NVL(P_ENABLED_FLAG, 'N')
        , LAST_UPDATE_DATE   = V_SYSDATE
        , LAST_UPDATED_BY    = P_USER_ID
    WHERE ACCOUNT_CONTROL_ID = W_ACCOUNT_CONTROL_ID
      AND SOB_ID             = P_SOB_ID
    ;  
  END UPDATE_VAT_ACCOUNTS;

-- 계정세트에서 부가세 사용여부 변경시 사용하는 프로시져.
  PROCEDURE SAVE_VAT_ACCOUNTS
            ( P_ACCOUNT_CONTROL_ID IN FI_VAT_ACCOUNTS.ACCOUNT_CONTROL_ID%TYPE
            , P_ACCOUNT_CODE       IN FI_VAT_ACCOUNTS.ACCOUNT_CODE%TYPE
            , P_SOB_ID             IN FI_VAT_ACCOUNTS.SOB_ID%TYPE
            , P_VAT_ENABLED_FLAG   IN FI_VAT_ACCOUNTS.VAT_ENABLED_FLAG%TYPE
            , P_ENABLED_FLAG       IN FI_VAT_ACCOUNTS.ENABLED_FLAG%TYPE
            , P_USER_ID            IN FI_VAT_ACCOUNTS.CREATED_BY%TYPE 
            )
  AS
    V_SYSDATE     DATE := GET_LOCAL_DATE(P_SOB_ID);
    V_VAT_GUBUN   FI_VAT_ACCOUNTS.VAT_GUBUN%TYPE;
  BEGIN
    UPDATE FI_VAT_ACCOUNTS
      SET VAT_ENABLED_FLAG   = P_VAT_ENABLED_FLAG
        , ENABLED_FLAG       = P_ENABLED_FLAG
        , LAST_UPDATE_DATE   = V_SYSDATE
        , LAST_UPDATED_BY    = P_USER_ID
    WHERE ACCOUNT_CONTROL_ID = P_ACCOUNT_CONTROL_ID
      AND SOB_ID             = P_SOB_ID
    ;  
    IF SQL%ROWCOUNT = 0 THEN
      IF SUBSTR(P_ACCOUNT_CODE, 1, 1) = '1' THEN
        V_VAT_GUBUN := '1';
      ELSE
        V_VAT_GUBUN := '2';
      END IF;
      INSERT INTO FI_VAT_ACCOUNTS
      ( ACCOUNT_CONTROL_ID
      , ACCOUNT_CODE 
      , SOB_ID 
      , VAT_GUBUN 
      , VAT_ENABLED_FLAG 
      , ENABLED_FLAG 
      , CREATION_DATE 
      , CREATED_BY 
      , LAST_UPDATE_DATE 
      , LAST_UPDATED_BY )
      VALUES
      ( P_ACCOUNT_CONTROL_ID
      , P_ACCOUNT_CODE
      , P_SOB_ID
      , V_VAT_GUBUN
      , NVL(P_VAT_ENABLED_FLAG, 'Y')
      , NVL(P_ENABLED_FLAG, 'Y')
      , V_SYSDATE
      , P_USER_ID
      , V_SYSDATE
      , P_USER_ID );
    END IF;
  END SAVE_VAT_ACCOUNTS;
  
END FI_VAT_ACCOUNTS_G;
/
