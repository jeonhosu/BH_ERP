SELECT     
      TO_CHAR(VM.VAT_ISSUE_DATE, 'YYYY-MM-DD') AS VAT_ISSUE_DATE
    , FI_COMMON_G.CODE_NAME_F('VAT_GUBUN', VM.VAT_GUBUN, VM.SOB_ID) AS VAT_GUBUN_DESC
    , VM.VAT_GUBUN
    --, FI_COMMON_G.CODE_NAME_F('VAT_TYPE', VM.VAT_TYPE, VM.SOB_ID) AS VAT_TYPE_DESC
    , CASE
        WHEN GROUPING(TO_CHAR(VM.VAT_ISSUE_DATE, 'YYYY-MM')) = 1 THEN '[' || EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'EAPP_10045', NULL) || ']'   --총합계
        WHEN GROUPING(VM.VAT_ISSUE_DATE) = 1 THEN '[' || EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'EAPP_10046', NULL) || ']'--소계
        ELSE FI_COMMON_G.CODE_NAME_F('VAT_TYPE', VM.VAT_TYPE, VM.SOB_ID)
      END AS VAT_TYPE_DESC   ----세무유형
    , VM.VAT_TYPE
    , CASE
        WHEN GROUPING(TO_CHAR(VM.VAT_ISSUE_DATE, 'YYYY-MM')) = 1 THEN '[' || TO_CHAR(COUNT(VM.VAT_ISSUE_DATE), 'FM999,999,999') || ']'
        WHEN GROUPING(VM.VAT_ISSUE_DATE) = 1 THEN '[' || TO_CHAR(COUNT(VM.VAT_ISSUE_DATE), 'FM999,999,999') || ']'
        ELSE VM.REMARK
      END AS REMARK
      /*CASE
        WHEN GROUPING(TO_CHAR(VM.VAT_ISSUE_DATE, 'YYYY-MM')) = 1 THEN EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10279', '&&CNT:=' || TO_CHAR(COUNT(VM.VAT_ISSUE_DATE), 'FM999,999,999'))
        WHEN GROUPING(VM.VAT_ISSUE_DATE) = 1 THEN EAPP_MESSAGE_G.RETURN_TEXT_F(USERENV_G.GET_TERRITORY_S_F, 'FCM_10279', '&&CNT:=' || TO_CHAR(COUNT(VM.VAT_ISSUE_DATE), 'FM999,999,999'))
        ELSE VM.REMARK
      END AS REMARK*/
    , DECODE(GROUPING(VM.VAT_ISSUE_DATE), 1,  0, MAX(VM.CUSTOMER_ID)) AS CUSTOMER_ID
    , SC.SUPP_CUST_CODE AS CUSTOMER_CODE
    , SC.SUPP_CUST_NAME AS CUSTOMER_NAME
    , SUM(VM.GL_AMOUNT) AS GL_AMOUNT
    , SUM(VM.VAT_AMOUNT) AS VAT_AMOUNT
    , SUM(NVL(VM.GL_AMOUNT, 0) + NVL(VM.VAT_AMOUNT, 0)) AS TOTAL_AMOUNT
    , CASE
        WHEN VM.VAT_ISSUE_DATE = VM.GL_DATE THEN 'N'
        ELSE 'Y'
      END AS DATE_CHECK
    , CASE
        WHEN ROUND(VM.GL_AMOUNT * 0.1, 0) - NVL(VM.VAT_AMOUNT, 0) > 20 THEN 'Y'
        ELSE 'N'
      END AS AMOUNT_CHECK
    , VM.CREDITCARD_CODE
    , FCC.CARD_NUM
    , FCC.CARD_NAME
    , VM.CASH_RECEIPT_NUM
    , VM.CURRENCY_CODE
    , DECODE(GROUPING(VM.VAT_ISSUE_DATE), 1,  0, MAX(VM.EXCHANGE_RATE)) AS EXCHANGE_RATE
    , SUM(VM.GL_CURR_AMOUNT) AS GL_CURR_AMOUNT
    , VM.GL_NUM
    , TO_CHAR(VM.GL_DATE, 'YYYY-MM-DD') AS GL_DATE
    , DECODE(GROUPING(VM.VAT_ISSUE_DATE), 1,  0, MAX(VM.ACCOUNT_CONTROL_ID)) AS ACCOUNT_CONTROL_ID
    , AC.ACCOUNT_CODE
    , AC.ACCOUNT_DESC
    , DECODE(GROUPING(VM.VAT_ISSUE_DATE), 1,  0, MAX(VM.SLIP_HEADER_ID)) AS SLIP_HEADER_ID
    , DECODE(GROUPING(VM.VAT_ISSUE_DATE), 1,  0, MAX(VM.SLIP_LINE_ID)) AS SLIP_LINE_ID
  FROM FI_VAT_MASTER VM
    , FI_ACCOUNT_CONTROL AC
    , FI_SUPP_CUST_V SC     --거래처[ S(SUPP) : 매입처, C(CUST) : 매출처 ]
    , FI_CREDIT_CARD FCC
WHERE VM.ACCOUNT_CONTROL_ID       = AC.ACCOUNT_CONTROL_ID
  AND VM.SOB_ID                   = AC.SOB_ID
  AND VM.CUSTOMER_ID              = SC.SUPP_CUST_ID
  AND VM.SOB_ID                   = SC.SOB_ID
  AND VM.CREDITCARD_CODE          = FCC.CARD_CODE(+)
  AND VM.SOB_ID                   = FCC.SOB_ID(+)
  AND VM.TAX_CODE                 = '110'
  AND VM.VAT_ISSUE_DATE           BETWEEN &W_ISSUE_DATE_FR AND &W_ISSUE_DATE_TO
  AND VM.SOB_ID                   = &W_SOB_ID
  AND VM.VAT_TYPE                 = NVL(&W_VAT_TYPE, VM.VAT_TYPE)
  AND VM.VAT_GUBUN                = NVL(&W_VAT_GUBUN, VM.VAT_GUBUN)
  AND VM.CUSTOMER_ID              = NVL(&W_CUSTOMER_ID, VM.CUSTOMER_ID)
GROUP BY ROLLUP
    ((TO_CHAR(VM.VAT_ISSUE_DATE, 'YYYY-MM'))
    , (VM.VAT_ISSUE_DATE
    , VM.SLIP_LINE_ID
    , FI_COMMON_G.CODE_NAME_F('VAT_GUBUN', VM.VAT_GUBUN, VM.SOB_ID)
    , VM.VAT_GUBUN
    , FI_COMMON_G.CODE_NAME_F('VAT_TYPE', VM.VAT_TYPE, VM.SOB_ID)
    , VM.VAT_TYPE
    , VM.REMARK
    , SC.SUPP_CUST_CODE
    , SC.SUPP_CUST_NAME
    , CASE
        WHEN VM.VAT_ISSUE_DATE = VM.GL_DATE THEN 'N'
        ELSE 'Y'
      END
    , CASE
        WHEN ROUND(VM.GL_AMOUNT * 0.1, 0) - NVL(VM.VAT_AMOUNT, 0) > 20 THEN 'Y'
        ELSE 'N'
      END
    , VM.CREDITCARD_CODE
    , FCC.CARD_NUM
    , FCC.CARD_NAME
    , VM.CASH_RECEIPT_NUM
    , VM.CURRENCY_CODE
    , VM.GL_NUM
    , VM.GL_DATE
    , AC.ACCOUNT_CODE
    , AC.ACCOUNT_DESC))
  ORDER BY VM.VAT_ISSUE_DATE, VM.SLIP_LINE_ID
  ;
        /*
        
        A.SOB_ID = W_SOB_ID  --회사아이디
            --AND A.ORG_ID = '101'    --사업부아이디
            AND A.TAX_CODE = W_TAX_CODE --사업장
            AND A.VAT_ISSUE_DATE BETWEEN W_ISSUE_DATE_FR AND W_ISSUE_DATE_TO --신고기준일자
            
            AND A.VAT_GUBUN = NVL(W_VAT_CLASS, A.VAT_GUBUN)      --거래구분(1:매입, 2:매출)
            AND A.VAT_TYPE_ID = NVL(W_VAT_TYPE_ID, A.VAT_TYPE_ID)  --세무유형아이디
            AND A.SUPPLIER_ID = NVL(W_SUPPLIER_ID, A.SUPPLIER_ID)  --거래처아이디                            
            
            AND A.SUPPLIER_ID = SC.SUPP_CUST_ID     --거래처아이디    
            AND A.SLIP_LINE_ID = SL.SLIP_LINE_ID    --전표라인아이디
        GROUP BY ROLLUP(      
            (VAT_GUBUN, VAT_TYPE_ID)
            , (A.SOB_ID, A.ORG_ID, VAT_TYPE_ID, VAT_REASON_CODE, SUPPLIER_ID, SC.SUPP_CUST_CODE
               , SC.SUPP_CUST_NAME, TAX_REG_NO, VAT_ISSUE_DATE, A.GL_DATE, A.GL_AMOUNT, A.VAT_AMOUNT
               , CREDITCARD_CODE, SL.REFER3, SL.REFER6, SL.REFER5
               , CASH_RECEIPT_NUM, A.SLIP_LINE_ID, A.ACCOUNT_CODE, SL.REMARK
               , A.GL_NUM, A.SLIP_HEADER_ID)    )        
        ;
*/
