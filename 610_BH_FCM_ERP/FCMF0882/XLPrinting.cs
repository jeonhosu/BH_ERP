using System;

namespace FCMF0882
{
    public class XLPrinting
    {
        #region ----- Variables -----

        private InfoSummit.Win.ControlAdv.ISAppInterface mAppInterface = null;
        private InfoSummit.Win.ControlAdv.ISMessageAdapter mMessageAdapter = null;

        private XL.XLPrint mPrinting = null;

        private string mMessageError = string.Empty;

        private int mPageNumber = 0;

        private string mXLOpenFileName = string.Empty;

        private int mCopyLineSUM = 1;         //엑셀의 선택된 쉬트의 복사되어질 시작 행 위치, 복사 행 누적
        private int mIncrementCopyMAX = 129;  //복사되어질 행의 범위

        private int mCopyColumnSTART = 1; //복사되어  진 행 누적 수
        private int mCopyColumnEND = 43;  //엑셀의 선택된 쉬트의 복사되어질 끝 열 위치

        #endregion;

        #region ----- Property -----

        public string ErrorMessage
        {
            get
            {
                return mMessageError;
            }
        }

        public string OpenFileNameExcel
        {
            set
            {
                mXLOpenFileName = value;
            }
        }

        #endregion;

        #region ----- Constructor -----

        public XLPrinting(InfoSummit.Win.ControlAdv.ISAppInterface pAppInterface, InfoSummit.Win.ControlAdv.ISMessageAdapter pMessageAdapter)
        {
            mPrinting = new XL.XLPrint();
            mAppInterface = pAppInterface;
            mMessageAdapter = pMessageAdapter;
        }

        #endregion;

        #region ----- XL File Open -----

        public bool XLFileOpen()
        {
            bool IsOpen = false;

            try
            {
                IsOpen = mPrinting.XLOpenFile(mXLOpenFileName);
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
            }

            return IsOpen;
        }

        #endregion;

        #region ----- Dispose -----

        public void Dispose()
        {
            mPrinting.XLOpenFileClose();
            mPrinting.XLClose();
        }

        #endregion;

        #region ----- MaxIncrement Methods ----

        private int MaxIncrement(string pPathBase, string pSaveFileName)
        {
            int vMaxNumber = 0;
            System.IO.DirectoryInfo vFolder = new System.IO.DirectoryInfo(pPathBase);
            string vPattern = string.Format("{0}*", pSaveFileName);
            System.IO.FileInfo[] vFiles = vFolder.GetFiles(vPattern);

            foreach (System.IO.FileInfo vFile in vFiles)
            {
                string vFileNameExt = vFile.Name;
                int vCutStart = vFileNameExt.LastIndexOf(".");
                string vFileName = vFileNameExt.Substring(0, vCutStart);

                int vCutRight = 3;
                int vSkip = vFileName.Length - vCutRight;
                string vTextNumber = vFileName.Substring(vSkip, vCutRight);
                int vNumber = int.Parse(vTextNumber);

                if (vNumber > vMaxNumber)
                {
                    vMaxNumber = vNumber;
                }
            }

            return vMaxNumber;
        }

        #endregion;

        #region ----- Line SLIP Methods ----

        #region ----- Set Array ----

        private void SetArray1(System.Data.DataTable pTable, out int[] pGDColumn, out int[] pXLColumn)
        {
            pGDColumn = new int[198];
            pXLColumn = new int[198];

            pGDColumn[0] = pTable.Columns.IndexOf("GUBUN_1");              //신고서구분_예정
            pGDColumn[1] = pTable.Columns.IndexOf("GUBUN_2");              //신고서구분_확정
            pGDColumn[2] = pTable.Columns.IndexOf("GUBUN_3");              //신고서구분_기한후과세표준
            pGDColumn[3] = pTable.Columns.IndexOf("GUBUN_4");              //신고서구분_영세율등조기환급
            pGDColumn[4] = pTable.Columns.IndexOf("FISCAL_YEAR");          //신고기간_출력용
            pGDColumn[5] = pTable.Columns.IndexOf("TITLE_2");              //상호
            pGDColumn[6] = pTable.Columns.IndexOf("TITLE_3");              //성명
            pGDColumn[7] = pTable.Columns.IndexOf("TITLE_4_01");           //출력용 사업자등록번호_01
            pGDColumn[8] = pTable.Columns.IndexOf("TITLE_4_02");           //출력용 사업자등록번호_02
            pGDColumn[9] = pTable.Columns.IndexOf("TITLE_4_03");           //출력용 사업자등록번호_03
            pGDColumn[10] = pTable.Columns.IndexOf("TITLE_4_04");          //출력용 사업자등록번호_04
            pGDColumn[11] = pTable.Columns.IndexOf("TITLE_4_05");          //출력용 사업자등록번호_05
            pGDColumn[12] = pTable.Columns.IndexOf("TITLE_4_06");          //출력용 사업자등록번호_06
            pGDColumn[13] = pTable.Columns.IndexOf("TITLE_4_07");          //출력용 사업자등록번호_07
            pGDColumn[14] = pTable.Columns.IndexOf("TITLE_4_08");          //출력용 사업자등록번호_08
            pGDColumn[15] = pTable.Columns.IndexOf("TITLE_4_09");          //출력용 사업자등록번호_09
            pGDColumn[16] = pTable.Columns.IndexOf("TITLE_4_10");          //출력용 사업자등록번호_10
            pGDColumn[17] = pTable.Columns.IndexOf("TITLE_4_01");          //출력용 사업자등록번호_01
            pGDColumn[18] = pTable.Columns.IndexOf("TITLE_4_02");          //출력용 사업자등록번호_02
            pGDColumn[19] = pTable.Columns.IndexOf("TITLE_4_03");          //출력용 사업자등록번호_03
            pGDColumn[20] = pTable.Columns.IndexOf("TITLE_4_04");          //출력용 사업자등록번호_04
            pGDColumn[21] = pTable.Columns.IndexOf("TITLE_4_05");          //출력용 사업자등록번호_05
            pGDColumn[22] = pTable.Columns.IndexOf("TITLE_4_06");          //출력용 사업자등록번호_06
            pGDColumn[23] = pTable.Columns.IndexOf("TITLE_4_07");          //출력용 사업자등록번호_07
            pGDColumn[24] = pTable.Columns.IndexOf("TITLE_4_08");          //출력용 사업자등록번호_08
            pGDColumn[25] = pTable.Columns.IndexOf("TITLE_4_09");          //출력용 사업자등록번호_09
            pGDColumn[26] = pTable.Columns.IndexOf("TITLE_4_10");          //출력용 사업자등록번호_10
            pGDColumn[27] = pTable.Columns.IndexOf("TITLE_5");             //법인등록번호
            pGDColumn[28] = pTable.Columns.IndexOf("TITLE_6");             //사업장전화
            pGDColumn[29] = pTable.Columns.IndexOf("TITLE_7");             //주소지전화
            pGDColumn[30] = pTable.Columns.IndexOf("TITLE_8");             //휴대전화
            pGDColumn[31] = pTable.Columns.IndexOf("TITLE_9");             //사업장주소
            pGDColumn[32] = pTable.Columns.IndexOf("TITLE_10");            //전자우편주소
            pGDColumn[33] = pTable.Columns.IndexOf("DEAL_BANK");           //거래은행
            pGDColumn[34] = pTable.Columns.IndexOf("DEAL_BRANCH");         //거래지점
            pGDColumn[35] = pTable.Columns.IndexOf("ACC_NO");              //계좌번호
            pGDColumn[36] = pTable.Columns.IndexOf("CLOSURE_DATE_PRINT");  //출력용 폐업일
            pGDColumn[37] = pTable.Columns.IndexOf("CLOSURE_REASON");      //폐업사유
            pGDColumn[38] = pTable.Columns.IndexOf("TITLE_14_PRINT");      //출력용 작성일자
            pGDColumn[39] = pTable.Columns.IndexOf("TITLE_15");            //신고인
            pGDColumn[40] = pTable.Columns.IndexOf("TITLE_16");            //세무서
            pGDColumn[41] = pTable.Columns.IndexOf("COL1_1");              //과세_세금계산서발급분_금액
            pGDColumn[42] = pTable.Columns.IndexOf("COL1_2");              //과세_세금계산서발급분_세액
            pGDColumn[43] = pTable.Columns.IndexOf("COL2_1");              //과세_매입자발행세금계산서_금액
            pGDColumn[44] = pTable.Columns.IndexOf("COL2_2");              //과세_매입자발행세금계산서_세액
            pGDColumn[45] = pTable.Columns.IndexOf("COL3_1");              //과세_신용카드_현금영수증발행분_금액
            pGDColumn[46] = pTable.Columns.IndexOf("COL3_2");              //과세_신용카드_현금영수증발행분_세액
            pGDColumn[47] = pTable.Columns.IndexOf("COL4_1");              //과세_기타_금액
            pGDColumn[48] = pTable.Columns.IndexOf("COL4_2");              //과세_기타_세액
            pGDColumn[49] = pTable.Columns.IndexOf("COL5_1");              //영세율_세금계산서발급분_금액
            pGDColumn[50] = pTable.Columns.IndexOf("COL6_1");              //영세율_기타_금액
            pGDColumn[51] = pTable.Columns.IndexOf("COL7_1");              //예정신고누락분_금액
            pGDColumn[52] = pTable.Columns.IndexOf("COL7_2");              //예정신고누락분_세액
            pGDColumn[53] = pTable.Columns.IndexOf("COL8_2");              //대손세액가감_세액
            pGDColumn[54] = pTable.Columns.IndexOf("COL9_1");              //합계_금액
            pGDColumn[55] = pTable.Columns.IndexOf("COL9_2");              //합계_세액
            pGDColumn[56] = pTable.Columns.IndexOf("COL10_1");             //매입_일반매입_금액
            pGDColumn[57] = pTable.Columns.IndexOf("COL10_2");             //매입_일반매입_세액
            pGDColumn[58] = pTable.Columns.IndexOf("COL11_1");             //매입_고정자산매입_금액
            pGDColumn[59] = pTable.Columns.IndexOf("COL11_2");             //매입_고장자산매입_세액
            pGDColumn[60] = pTable.Columns.IndexOf("COL12_1");             //매입_예정신고누락분_금액
            pGDColumn[61] = pTable.Columns.IndexOf("COL12_2");             //매입_예정신고누락분_세액
            pGDColumn[62] = pTable.Columns.IndexOf("COL13_1");             //매입_매입자발행세금계산서_금액
            pGDColumn[63] = pTable.Columns.IndexOf("COL13_2");             //매입_매입자발행세금계산서_세액
            pGDColumn[64] = pTable.Columns.IndexOf("COL14_1");             //매입_기타공제매입세액_금액
            pGDColumn[65] = pTable.Columns.IndexOf("COL14_2");             //매입_기타공제매입세액_세액
            pGDColumn[66] = pTable.Columns.IndexOf("COL15_1");             //매입_합계_금액
            pGDColumn[67] = pTable.Columns.IndexOf("COL15_2");             //매입_합계_세액
            pGDColumn[68] = pTable.Columns.IndexOf("COL16_1");             //매입_공제받지못할매입세액_금액
            pGDColumn[69] = pTable.Columns.IndexOf("COL16_2");             //매입_공제받지못할매입세액_세액
            pGDColumn[70] = pTable.Columns.IndexOf("COL17_1");             //매입_차감계_금액
            pGDColumn[71] = pTable.Columns.IndexOf("COL17_2");             //매입_차감계_세액
            pGDColumn[72] = pTable.Columns.IndexOf("COL_DA");              //납부세액
            pGDColumn[73] = pTable.Columns.IndexOf("COL18_2");             //기타경감공제세액
            pGDColumn[74] = pTable.Columns.IndexOf("COL19_2");             //신용카드매출전표등발행공제등
            pGDColumn[75] = pTable.Columns.IndexOf("COL20_2");             //경감공제_합계
            pGDColumn[76] = pTable.Columns.IndexOf("COL21_2");             //예정신고미환급세액
            pGDColumn[77] = pTable.Columns.IndexOf("COL22_2");             //예정고지세액
            pGDColumn[78] = pTable.Columns.IndexOf("COL23_2");             //금지금_매입자_납부특례_기납부세액
            pGDColumn[79] = pTable.Columns.IndexOf("COL24_2");             //가산세액계
            pGDColumn[80] = pTable.Columns.IndexOf("COL25");               //차가감하여납부할세액
            pGDColumn[81] = pTable.Columns.IndexOf("COL26_1");             //과세표준_업태1
            pGDColumn[82] = pTable.Columns.IndexOf("COL26_2");             //과세표준_종목1
            pGDColumn[83] = pTable.Columns.IndexOf("COL26_3");             //과세표준_금액1
            pGDColumn[84] = pTable.Columns.IndexOf("COL27_1");             //과세표준_업태2
            pGDColumn[85] = pTable.Columns.IndexOf("COL27_2");             //과세표준_종목2
            pGDColumn[86] = pTable.Columns.IndexOf("COL27_3");             //과세표준_금액2
            pGDColumn[87] = pTable.Columns.IndexOf("COL28_1");             //과세표준_업태3
            pGDColumn[88] = pTable.Columns.IndexOf("COL28_2");             //과세표준_종목3
            pGDColumn[89] = pTable.Columns.IndexOf("COL28_3");             //과세표준_금액3
            pGDColumn[90] = pTable.Columns.IndexOf("COL29_1");             //과세표준_업태4
            pGDColumn[91] = pTable.Columns.IndexOf("COL29_2");             //과세표준_종목4
            pGDColumn[92] = pTable.Columns.IndexOf("COL29_3");             //과세표준_금액4
            pGDColumn[93] = pTable.Columns.IndexOf("COL30");               //과세표준_합계
            pGDColumn[94] = pTable.Columns.IndexOf("TITLE_13_1");          //출력용 업종코드_01
            pGDColumn[95] = pTable.Columns.IndexOf("TITLE_13_2");          //출력용 업종코드_02
            pGDColumn[96] = pTable.Columns.IndexOf("TITLE_13_3");          //출력용 업종코드_03
            pGDColumn[97] = pTable.Columns.IndexOf("TITLE_13_4");          //출력용 업종코드_04
            pGDColumn[98] = pTable.Columns.IndexOf("TITLE_13_5");          //출력용 업종코드_05
            pGDColumn[99] = pTable.Columns.IndexOf("TITLE_13_6");          //출력용 업종코드_06
            pGDColumn[100] = pTable.Columns.IndexOf("COL31_1");            //예정신고_매출_과세_세금계산서_금액
            pGDColumn[101] = pTable.Columns.IndexOf("COL31_2");            //예정신고_매출_과세_세금계산서_세액
            pGDColumn[102] = pTable.Columns.IndexOf("COL32_1");            //예정신고_매출_과세_기타_금액
            pGDColumn[103] = pTable.Columns.IndexOf("COL32_2");            //예정신고_매출_과세_기타_세액
            pGDColumn[104] = pTable.Columns.IndexOf("COL33_1");            //예정신고_매출_영세율_세금계산서
            pGDColumn[105] = pTable.Columns.IndexOf("COL34_1");            //예정신고_매출_영세율_기타
            pGDColumn[106] = pTable.Columns.IndexOf("COL35_1");            //예정신고_매출_합계_금액
            pGDColumn[107] = pTable.Columns.IndexOf("COL35_2");            //예정신고_매출_합계_세액
            pGDColumn[108] = pTable.Columns.IndexOf("COL36_1");            //예정신고_매입_세금계산서_금액
            pGDColumn[109] = pTable.Columns.IndexOf("COL36_2");            //예정신고_매입_세금계산서_세액
            pGDColumn[110] = pTable.Columns.IndexOf("COL37_1");            //예정신고_매입_기타공제매입세액_금액
            pGDColumn[111] = pTable.Columns.IndexOf("COL37_2");            //예정신고_매입_기타공제매입세액_세액
            pGDColumn[112] = pTable.Columns.IndexOf("COL38_1");            //예정신고_매입_합계_금액
            pGDColumn[113] = pTable.Columns.IndexOf("COL38_2");            //예정신고_매입_합계_세액
            pGDColumn[114] = pTable.Columns.IndexOf("COL39_1");            //기타공제_신용카드_일반매입_금액
            pGDColumn[115] = pTable.Columns.IndexOf("COL39_2");            //기타공제_신용카드_일반매입_세액
            pGDColumn[116] = pTable.Columns.IndexOf("COL40_1");            //기타공제_신용카드_고정자산매입_금액
            pGDColumn[117] = pTable.Columns.IndexOf("COL40_2");            //기타공제_신용카드_고정자산매입_세액
            pGDColumn[118] = pTable.Columns.IndexOf("COL41_1");            //기타공제_의제매입세액_금액
            pGDColumn[119] = pTable.Columns.IndexOf("COL41_2");            //기타공제_의제매입세액_세액
            pGDColumn[120] = pTable.Columns.IndexOf("COL42_1");            //기타공제_재활용폐자원등매입세액_금액
            pGDColumn[121] = pTable.Columns.IndexOf("COL42_2");            //기타공제_재활용폐자원등매입세액_세액
            pGDColumn[122] = pTable.Columns.IndexOf("COL43_1");            //기타공제_고금의제매입세액_금액
            pGDColumn[123] = pTable.Columns.IndexOf("COL43_2");            //기타공제_고금의제매입세액_세액
            pGDColumn[124] = pTable.Columns.IndexOf("COL44_2");            //기타공제_과세사업전환매입세액_세액
            pGDColumn[125] = pTable.Columns.IndexOf("COL45_2");            //기타공제_재고매입세액_세액
            pGDColumn[126] = pTable.Columns.IndexOf("COL46_2");            //기타공제_변제대손세액_세액
            pGDColumn[127] = pTable.Columns.IndexOf("COL47_1");            //기타공제_합계_금액
            pGDColumn[128] = pTable.Columns.IndexOf("COL47_2");            //기타공제_헙계_세액
            pGDColumn[129] = pTable.Columns.IndexOf("COL48_1");            //공제받지못할매입세액_공제받지못할_금액
            pGDColumn[130] = pTable.Columns.IndexOf("COL48_2");            //공제받지못할매입세액_공제받지못할_세액
            pGDColumn[131] = pTable.Columns.IndexOf("COL49_1");            //공제받지못할매입세액_공통매입세액면세_금액
            pGDColumn[132] = pTable.Columns.IndexOf("COL49_2");            //공제받지못할매입세액_공통매입세액면세_세액
            pGDColumn[133] = pTable.Columns.IndexOf("COL50_1");            //공제받지못할매입세액_대손처분받은세액_금액
            pGDColumn[134] = pTable.Columns.IndexOf("COL50_2");            //공제받지못할매입세액_대손처분받은세액_세액
            pGDColumn[135] = pTable.Columns.IndexOf("COL51_1");            //공제받지못할매입세액_합계_금액
            pGDColumn[136] = pTable.Columns.IndexOf("COL51_2");            //공제받지못할매입세액_합계_세액
            pGDColumn[137] = pTable.Columns.IndexOf("COL52_2");            //기탁경감공제세액_전자신고세액공제_세액
            pGDColumn[138] = pTable.Columns.IndexOf("COL53_2");            //기타경감공제세액_전자세금계산서발급세액공제_세액
            pGDColumn[139] = pTable.Columns.IndexOf("COL54_2");            //기타경감공제세액_택시운송사업자경감세액_세액
            pGDColumn[140] = pTable.Columns.IndexOf("COL55_2");            //기타경감공제세액_현금영수증사업자세액공제_세액
            pGDColumn[141] = pTable.Columns.IndexOf("COL56_2");            //기타경감공제세액_기타_세액
            pGDColumn[142] = pTable.Columns.IndexOf("COL57_2");            //기타경감공제세액_합계_세액
            pGDColumn[143] = pTable.Columns.IndexOf("COL58_1");            //가산세명세_사업자미등록등_금액
            pGDColumn[144] = pTable.Columns.IndexOf("COL58_2");            //가산세명세_사업자미등록등_세액
            pGDColumn[145] = pTable.Columns.IndexOf("COL59_1");            //가산세명세_지연발급등_금액
            pGDColumn[146] = pTable.Columns.IndexOf("COL59_2");            //가산세명세_지연발급등_세액
            pGDColumn[147] = pTable.Columns.IndexOf("COL60_1");            //가산세명세_미발급등_금액
            pGDColumn[148] = pTable.Columns.IndexOf("COL60_2");            //가산세명세_미발급등_세액
            pGDColumn[149] = pTable.Columns.IndexOf("COL61_1");            //가산세명세_다음달15일이후_금액
            pGDColumn[150] = pTable.Columns.IndexOf("COL61_2");            //가산세명세_다음달15일이후_세액
            pGDColumn[151] = pTable.Columns.IndexOf("COL62_1");            //가산세명세_과세기간다음달15일이후_금액
            pGDColumn[152] = pTable.Columns.IndexOf("COL62_2");            //가산세명세_과세기간다음달15일이후_세액
            pGDColumn[153] = pTable.Columns.IndexOf("COL63_1");            //가산세명세_세금계산서합계표제출불성실_금액
            pGDColumn[154] = pTable.Columns.IndexOf("COL63_2");            //가산세명세_세금계산서합계표제출불성실_세액
            pGDColumn[155] = pTable.Columns.IndexOf("COL64_1");            //가산세명세_신고불성실_금액
            pGDColumn[156] = pTable.Columns.IndexOf("COL64_2");            //가산세명세_신고불성실_세액
            pGDColumn[157] = pTable.Columns.IndexOf("COL65_1");            //가산세명세_납부불성싱_금액
            pGDColumn[158] = pTable.Columns.IndexOf("COL65_2");            //가산세명세_납부불성실_세액
            pGDColumn[159] = pTable.Columns.IndexOf("COL66_1");            //가산세명세_영세율과세표준신고불성실_금액
            pGDColumn[160] = pTable.Columns.IndexOf("COL66_2");            //가산세명세_영세율과세표준신고불성실_세액
            pGDColumn[161] = pTable.Columns.IndexOf("COL67_1");            //가산세명세_현금매출명세서미제출등_금액
            pGDColumn[162] = pTable.Columns.IndexOf("COL67_2");            //가산세명세_현금매출명세서미제출등_세액
            pGDColumn[163] = pTable.Columns.IndexOf("COL68_2");            //가산세명세_합계_세액
            pGDColumn[164] = pTable.Columns.IndexOf("COL69_1");            //면세사업수입금액_업태1
            pGDColumn[165] = pTable.Columns.IndexOf("COL69_2");            //면세사업수입금액_종목1
            pGDColumn[166] = pTable.Columns.IndexOf("COL69_3");            //면세사업수입금액_금액1
            pGDColumn[167] = pTable.Columns.IndexOf("COL70_1");            //면세사업수입금액_업태2
            pGDColumn[168] = pTable.Columns.IndexOf("COL70_2");            //면세사업수입금액_종목2
            pGDColumn[169] = pTable.Columns.IndexOf("COL70_3");            //면세사업수입금액_금액2
            pGDColumn[170] = pTable.Columns.IndexOf("COL71_1");            //면세사업수입금액_업태3
            pGDColumn[171] = pTable.Columns.IndexOf("COL71_2");            //면세사업수입금액_종목3
            pGDColumn[172] = pTable.Columns.IndexOf("COL71_3");            //면세사업수입금액_금액3
            pGDColumn[173] = pTable.Columns.IndexOf("COL72");              //면세사업수입금액_합계
            pGDColumn[174] = pTable.Columns.IndexOf("TITLE_13_1");         //출력용 업종코드_01
            pGDColumn[175] = pTable.Columns.IndexOf("TITLE_13_2");         //출력용 업종코드_02
            pGDColumn[176] = pTable.Columns.IndexOf("TITLE_13_3");         //출력용 업종코드_03
            pGDColumn[177] = pTable.Columns.IndexOf("TITLE_13_4");         //출력용 업종코드_04
            pGDColumn[178] = pTable.Columns.IndexOf("TITLE_13_5");         //출력용 업종코드_05
            pGDColumn[179] = pTable.Columns.IndexOf("TITLE_13_6");         //출력용 업종코드_06
            pGDColumn[180] = pTable.Columns.IndexOf("COL73");              //계산서발급금액
            pGDColumn[181] = pTable.Columns.IndexOf("COL74");              //계산서수취금액
            pGDColumn[182] = pTable.Columns.IndexOf("R_ORIGIN_PLACE_VAT");          //경감공제세액 - 원산지확인서 발급공제세액
            pGDColumn[183] = pTable.Columns.IndexOf("A_TAX_RECEIVE_DELAY_AMT");     //가산세명세 - 세금계산서 지연수취금액
            pGDColumn[184] = pTable.Columns.IndexOf("A_TAX_RECEIVE_DELAY_VAT");     //가산세명세 - 세금계산서 지연수취세액
            // 2013년1기예정추가 //
            pGDColumn[185] = pTable.Columns.IndexOf("A_TAX_INV_SUM_BAD_AMT_1");     //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
            pGDColumn[186] = pTable.Columns.IndexOf("A_TAX_INV_SUM_BAD_VAT_1");     //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
            pGDColumn[187] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_1");          //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
            pGDColumn[188] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_1");          //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
            pGDColumn[189] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_2");          //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
            pGDColumn[190] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_2");          //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
            pGDColumn[191] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_3");          //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
            pGDColumn[192] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_3");          //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
            pGDColumn[193] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_4");          //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
            pGDColumn[194] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_4");          //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
            pGDColumn[195] = pTable.Columns.IndexOf("A_REALTY_LEASE_UNREPORT_AMT"); //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
            pGDColumn[196] = pTable.Columns.IndexOf("A_REALTY_LEASE_UNREPORT_VAT"); //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 
            pGDColumn[197] = pTable.Columns.IndexOf("TOT_REAL_VAT_AMOUNT");         //총괄납부사업자 납부할 세액  

            pXLColumn[0] = 22;  //GUBUN_1             신고서구분_예정
            pXLColumn[1] = 28;  //GUBUN_2             신고서구분_확정
            pXLColumn[2] = 22;  //GUBUN_3             신고서구분_기한후과세표준
            pXLColumn[3] = 22;  //GUBUN_4             신고서구분_영세율등조기환급
            pXLColumn[4] = 8;   //FISCAL_YEAR         신고기간_출력용
            pXLColumn[5] = 10;  //TITLE_2             상호
            pXLColumn[6] = 22;  //TITLE_3             성명
            pXLColumn[7] = 31;  //TITLE_4_01==========출력용 사업자등록번호_01_1장
            pXLColumn[8] = 32;  //TITLE_4_02          출력용 사업자등록번호_02_1장
            pXLColumn[9] = 33;  //TITLE_4_03          출력용 사업자등록번호_03_1장
            pXLColumn[10] = 35;  //TITLE_4_04          출력용 사업자등록번호_04_1장
            pXLColumn[11] = 36;  //TITLE_4_05          출력용 사업자등록번호_05_1장
            pXLColumn[12] = 38;  //TITLE_4_06          출력용 사업자등록번호_06_1장
            pXLColumn[13] = 39;  //TITLE_4_07          출력용 사업자등록번호_07_1장
            pXLColumn[14] = 40;  //TITLE_4_08          출력용 사업자등록번호_08_1장
            pXLColumn[15] = 41;  //TITLE_4_09          출력용 사업자등록번호_09_1장
            pXLColumn[16] = 42;  //TITLE_4_10==========출력용 사업자등록번호_10_1장
            pXLColumn[17] = 9;   //TITLE_4_01          출력용 사업자등록번호_01_2장
            pXLColumn[18] = 10;  //TITLE_4_02          출력용 사업자등록번호_02_2장
            pXLColumn[19] = 11;  //TITLE_4_03          출력용 사업자등록번호_03_2장
            pXLColumn[20] = 13;  //TITLE_4_04          출력용 사업자등록번호_04_2장
            pXLColumn[21] = 14;  //TITLE_4_05          출력용 사업자등록번호_05_2장
            pXLColumn[22] = 16;  //TITLE_4_06          출력용 사업자등록번호_06_2장
            pXLColumn[23] = 17;  //TITLE_4_07          출력용 사업자등록번호_07_2장
            pXLColumn[24] = 18;  //TITLE_4_08          출력용 사업자등록번호_08_2장
            pXLColumn[25] = 19;  //TITLE_4_09          출력용 사업자등록번호_09_2장
            pXLColumn[26] = 20;  //TITLE_4_10==========출력용 사업자등록번호_10_2장
            pXLColumn[27] = 10;  //TITLE_5             법인등록번호
            pXLColumn[28] = 28;  //TITLE_6             사업장전화
            pXLColumn[29] = 33;  //TITLE_7             주소지전화
            pXLColumn[30] = 38;  //TITLE_8             휴대전화
            pXLColumn[31] = 10;  //TITLE_9             사업장주소
            pXLColumn[32] = 33;  //TITLE_10            전자우편주소
            pXLColumn[33] = 17;  //DEAL_BANK           거래은행
            pXLColumn[34] = 24;  //DEAL_BRANCH         거래지점
            pXLColumn[35] = 34;  //ACC_NO              계좌번호
            pXLColumn[36] = 17;  //CLOSURE_DATE_PRINT  출력용 폐업일
            pXLColumn[37] = 30;  //CLOSURE_REASON      폐업사유
            pXLColumn[38] = 25;  //TITLE_14_PRINT      출력용 작성일자
            pXLColumn[39] = 30;  //TITLE_15            신고인
            pXLColumn[40] = 26;  //TITLE_16            세무서
            pXLColumn[41] = 21;  //COL1_1              과세_세금계산서발급분_금액
            pXLColumn[42] = 34;  //COL1_2              과세_세금계산서발급분_세액
            pXLColumn[43] = 21;  //COL2_1              과세_매입자발행세금계산서_금액
            pXLColumn[44] = 34;  //COL2_2              과세_매입자발행세금계산서_세액
            pXLColumn[45] = 21;  //COL3_1              과세_신용카드_현금영수증발행분_금액
            pXLColumn[46] = 34;  //COL3_2              과세_신용카드_현금영수증발행분_세액
            pXLColumn[47] = 21;  //COL4_1              과세_기타_금액
            pXLColumn[48] = 34;  //COL4_2              과세_기타_세액
            pXLColumn[49] = 21;  //COL5_1              영세율_세금계산서발급분_금액
            pXLColumn[50] = 21;  //COL6_1              영세율_기타_금액
            pXLColumn[51] = 21;  //COL7_1              예정신고누락분_금액
            pXLColumn[52] = 34;  //COL7_2              예정신고누락분_세액
            pXLColumn[53] = 34;  //COL8_2              대손세액가감_세액
            pXLColumn[54] = 21;  //COL9_1              합계_금액
            pXLColumn[55] = 34;  //COL9_2              합계_세액
            pXLColumn[56] = 21;  //COL10_1             매입_일반매입_금액
            pXLColumn[57] = 34;  //COL10_2             매입_일반매입_세액
            pXLColumn[58] = 21;  //COL11_1             매입_고정자산매입_금액
            pXLColumn[59] = 34;  //COL11_2             매입_고장자산매입_세액
            pXLColumn[60] = 21;  //COL12_1             매입_예정신고누락분_금액
            pXLColumn[61] = 34;  //COL12_2             매입_예정신고누락분_세액
            pXLColumn[62] = 21;  //COL13_1             매입_매입자발행세금계산서_금액
            pXLColumn[63] = 34;  //COL13_2             매입_매입자발행세금계산서_세액
            pXLColumn[64] = 21;  //COL14_1             매입_기타공제매입세액_금액
            pXLColumn[65] = 34;  //COL14_2             매입_기타공제매입세액_세액
            pXLColumn[66] = 21;  //COL15_1             매입_합계_금액
            pXLColumn[67] = 34;  //COL15_2             매입_합계_세액
            pXLColumn[68] = 21;  //COL16_1             매입_공제받지못할매입세액_금액
            pXLColumn[69] = 34;  //COL16_2             매입_공제받지못할매입세액_세액
            pXLColumn[70] = 21;  //COL17_1             매입_차감계_금액
            pXLColumn[71] = 34;  //COL17_2             매입_차감계_세액
            pXLColumn[72] = 34;  //COL_DA              납부세액
            pXLColumn[73] = 34;  //COL18_2             기타경감공제세액
            pXLColumn[74] = 34;  //COL19_2             신용카드매출전표등발행공제등
            pXLColumn[75] = 34;  //COL20_2             경감공제_합계
            pXLColumn[76] = 34;  //COL21_2             예정신고미환급세액
            pXLColumn[77] = 34;  //COL22_2             예정고지세액
            pXLColumn[78] = 34;  //COL23_2             금지금_매입자_납부특례_기납부세액
            pXLColumn[79] = 34;  //COL24_2             가산세액계
            pXLColumn[80] = 34;  //COL25               차가감하여납부할세액
            pXLColumn[81] = 4;   //COL26_1             과세표준_업태1
            pXLColumn[82] = 8;   //COL26_2             과세표준_종목1
            pXLColumn[83] = 19;  //COL26_3             과세표준_금액1
            pXLColumn[84] = 4;   //COL27_1             과세표준_업태2
            pXLColumn[85] = 8;   //COL27_2             과세표준_종목2
            pXLColumn[86] = 19;  //COL27_3             과세표준_금액2
            pXLColumn[87] = 4;   //COL28_1             과세표준_업태3
            pXLColumn[88] = 8;   //COL28_2             과세표준_종목3
            pXLColumn[89] = 19;  //COL28_3             과세표준_금액3
            pXLColumn[90] = 4;   //COL29_1             과세표준_업태4
            pXLColumn[91] = 8;   //COL29_2             과세표준_종목4
            pXLColumn[92] = 19;  //COL29_3             과세표준_금액4
            pXLColumn[93] = 19;  //COL30               과세표준_합계
            pXLColumn[94] = 13;  //TITLE_13_1==========출력용 업종코드_01_1장
            pXLColumn[95] = 14;  //TITLE_13_2          출력용 업종코드_02_1장
            pXLColumn[96] = 15;  //TITLE_13_3          출력용 업종코드_03_1장
            pXLColumn[97] = 16;  //TITLE_13_4          출력용 업종코드_04_1장
            pXLColumn[98] = 17;  //TITLE_13_5          출력용 업종코드_05_1장
            pXLColumn[99] = 18;  //TITLE_13_6==========출력용 업종코드_06_1장
            pXLColumn[100] = 21;  //COL31_1             예정신고_매출_과세_세금계산서_금액
            pXLColumn[101] = 34;  //COL31_2             예정신고_매출_과세_세금계산서_세액
            pXLColumn[102] = 21;  //COL32_1             예정신고_매출_과세_기타_금액
            pXLColumn[103] = 34;  //COL32_2             예정신고_매출_과세_기타_세액
            pXLColumn[104] = 21;  //COL33_1             예정신고_매출_영세율_세금계산서
            pXLColumn[105] = 21;  //COL34_1             예정신고_매출_영세율_기타
            pXLColumn[106] = 21;  //COL35_1             예정신고_매출_합계_금액
            pXLColumn[107] = 34;  //COL35_2             예정신고_매출_합계_세액
            pXLColumn[108] = 21;  //COL36_1             예정신고_매입_세금계산서_금액
            pXLColumn[109] = 34;  //COL36_2             예정신고_매입_세금계산서_세액
            pXLColumn[110] = 21;  //COL37_1             예정신고_매입_기타공제매입세액_금액
            pXLColumn[111] = 34;  //COL37_2             예정신고_매입_기타공제매입세액_세액
            pXLColumn[112] = 21;  //COL38_1             예정신고_매입_합계_금액
            pXLColumn[113] = 34;  //COL38_2             예정신고_매입_합계_세액
            pXLColumn[114] = 21;  //COL39_1             기타공제_신용카드_일반매입_금액
            pXLColumn[115] = 34;  //COL39_2             기타공제_신용카드_일반매입_세액
            pXLColumn[116] = 21;  //COL40_1             기타공제_신용카드_고정자산매입_금액
            pXLColumn[117] = 34;  //COL40_2             기타공제_신용카드_고정자산매입_세액
            pXLColumn[118] = 21;  //COL41_1             기타공제_의제매입세액_금액
            pXLColumn[119] = 34;  //COL41_2             기타공제_의제매입세액_세액
            pXLColumn[120] = 21;  //COL42_1             기타공제_재활용폐자원등매입세액_금액
            pXLColumn[121] = 34;  //COL42_2             기타공제_재활용폐자원등매입세액_세액
            pXLColumn[122] = 21;  //COL43_1             기타공제_고금의제매입세액_금액
            pXLColumn[123] = 34;  //COL43_2             기타공제_고금의제매입세액_세액
            pXLColumn[124] = 34;  //COL44_2             기타공제_과세사업전환매입세액_세액
            pXLColumn[125] = 34;  //COL45_2             기타공제_재고매입세액_세액
            pXLColumn[126] = 34;  //COL46_2             기타공제_변제대손세액_세액
            pXLColumn[127] = 21;  //COL47_1             기타공제_합계_금액
            pXLColumn[128] = 34;  //COL47_2             기타공제_헙계_세액
            pXLColumn[129] = 21;  //COL48_1             공제받지못할매입세액_공제받지못할_금액
            pXLColumn[130] = 34;  //COL48_2             공제받지못할매입세액_공제받지못할_세액
            pXLColumn[131] = 21;  //COL49_1             공제받지못할매입세액_공통매입세액면세_금액
            pXLColumn[132] = 34;  //COL49_2             공제받지못할매입세액_공통매입세액면세_세액
            pXLColumn[133] = 21;  //COL50_1             공제받지못할매입세액_대손처분받은세액_금액
            pXLColumn[134] = 34;  //COL50_2             공제받지못할매입세액_대손처분받은세액_세액
            pXLColumn[135] = 21;  //COL51_1             공제받지못할매입세액_합계_금액
            pXLColumn[136] = 34;  //COL51_2             공제받지못할매입세액_합계_세액

            pXLColumn[137] = 34;  //COL52_2             기탁경감공제세액_전자신고세액공제_세액
            pXLColumn[138] = 34;  //COL53_2             기타경감공제세액_전자세금계산서발급세액공제_세액
            pXLColumn[139] = 34;  //COL54_2             기타경감공제세액_택시운송사업자경감세액_세액
            pXLColumn[140] = 34;  //COL55_2             기타경감공제세액_현금영수증사업자세액공제_세액
            pXLColumn[141] = 34;  //COL56_2             기타경감공제세액_기타_세액
            pXLColumn[142] = 34;  //COL57_2             기타경감공제세액_합계_세액
            pXLColumn[143] = 21;  //COL58_1             가산세명세_사업자미등록등_금액
            pXLColumn[144] = 34;  //COL58_2             가산세명세_사업자미등록등_세액
            pXLColumn[145] = 21;  //COL59_1             가산세명세_지연발급등_금액
            pXLColumn[146] = 34;  //COL59_2             가산세명세_지연발급등_세액
            pXLColumn[147] = 21;  //COL60_1             가산세명세_미발급등_금액
            pXLColumn[148] = 34;  //COL60_2             가산세명세_미발급등_세액
            pXLColumn[149] = 21;  //COL61_1             가산세명세_다음달15일이후_금액
            pXLColumn[150] = 34;  //COL61_2             가산세명세_다음달15일이후_세액
            pXLColumn[151] = 21;  //COL62_1             가산세명세_과세기간다음달15일이후_금액
            pXLColumn[152] = 34;  //COL62_2             가산세명세_과세기간다음달15일이후_세액
            pXLColumn[153] = 21;  //COL63_1             가산세명세_세금계산서합계표제출불성실_금액
            pXLColumn[154] = 34;  //COL63_2             가산세명세_세금계산서합계표제출불성실_세액
            pXLColumn[155] = 21;  //COL64_1             가산세명세_신고불성실_금액
            pXLColumn[156] = 34;  //COL64_2             가산세명세_신고불성실_세액
            pXLColumn[157] = 21;  //COL65_1             가산세명세_납부불성싱_금액
            pXLColumn[158] = 34;  //COL65_2             가산세명세_납부불성실_세액
            pXLColumn[159] = 21;  //COL66_1             가산세명세_영세율과세표준신고불성실_금액
            pXLColumn[160] = 34;  //COL66_2             가산세명세_영세율과세표준신고불성실_세액
            pXLColumn[161] = 21;  //COL67_1             가산세명세_현금매출명세서미제출등_금액
            pXLColumn[162] = 34;  //COL67_2             가산세명세_현금매출명세서미제출등_세액
            pXLColumn[163] = 34;  //COL68_2             가산세명세_합계_세액
            pXLColumn[164] = 9;   //COL69_1             면세사업수입금액_업태1
            pXLColumn[165] = 17;  //COL69_2             면세사업수입금액_종목1
            pXLColumn[166] = 34;  //COL69_3             면세사업수입금액_금액1
            pXLColumn[167] = 9;   //COL70_1             면세사업수입금액_업태2
            pXLColumn[168] = 17;  //COL70_2             면세사업수입금액_종목2
            pXLColumn[169] = 34;  //COL70_3             면세사업수입금액_금액2
            pXLColumn[170] = 9;   //COL71_1             면세사업수입금액_업태3
            pXLColumn[171] = 17;  //COL71_2             면세사업수입금액_종목3
            pXLColumn[172] = 34;  //COL71_3             면세사업수입금액_금액3
            pXLColumn[173] = 34;  //COL72               면세사업수입금액_합계
            pXLColumn[174] = 28;  //TITLE_13_1==========출력용 업종코드_01_2장
            pXLColumn[175] = 29;  //TITLE_13_2          출력용 업종코드_02_2장
            pXLColumn[176] = 30;  //TITLE_13_3          출력용 업종코드_03_2장
            pXLColumn[177] = 31;  //TITLE_13_4          출력용 업종코드_04_2장
            pXLColumn[178] = 32;  //TITLE_13_5          출력용 업종코드_05_2장
            pXLColumn[179] = 33;  //TITLE_13_6==========출력용 업종코드_06_2장
            pXLColumn[180] = 17;  //COL73               계산서발급금액
            pXLColumn[181] = 17;  //COL74               계산서수취금액

            pXLColumn[182] = 34;  //경감공제세액 - 원산지확인서 발급공제세액
            pXLColumn[183] = 21;  //가산세명세 - 세금계산서 지연수취금액
            pXLColumn[184] = 34;  //가산세명세 - 세금계산서 지연수취세액

            //2031년1기예정 추가 //
            pXLColumn[185] = 21;  //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
            pXLColumn[186] = 34;  //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
            pXLColumn[187] = 21;  //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
            pXLColumn[188] = 34;  //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
            pXLColumn[189] = 21;  //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
            pXLColumn[190] = 34;  //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
            pXLColumn[191] = 21;  //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
            pXLColumn[192] = 34;  //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
            pXLColumn[193] = 21;  //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
            pXLColumn[194] = 34;  //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
            pXLColumn[195] = 21;  //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
            pXLColumn[196] = 34;  //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 

            pXLColumn[197] = 34;  //총괄납부사업자 납부할 세액  
        }


        private void SetArray1_201401(System.Data.DataTable pTable, out int[] pGDColumn, out int[] pXLColumn)
        {
            pGDColumn = new int[210];
            pXLColumn = new int[210];

            pGDColumn[0] = pTable.Columns.IndexOf("GUBUN_1");              //신고서구분_예정
            pGDColumn[1] = pTable.Columns.IndexOf("GUBUN_2");              //신고서구분_확정
            pGDColumn[2] = pTable.Columns.IndexOf("GUBUN_3");              //신고서구분_기한후과세표준
            pGDColumn[3] = pTable.Columns.IndexOf("GUBUN_4");              //신고서구분_영세율등조기환급
            pGDColumn[4] = pTable.Columns.IndexOf("FISCAL_YEAR");          //신고기간_출력용
            pGDColumn[5] = pTable.Columns.IndexOf("TITLE_2");              //상호
            pGDColumn[6] = pTable.Columns.IndexOf("TITLE_3");              //성명
            pGDColumn[7] = pTable.Columns.IndexOf("TITLE_4_01");           //출력용 사업자등록번호_01
            pGDColumn[8] = pTable.Columns.IndexOf("TITLE_4_02");           //출력용 사업자등록번호_02
            pGDColumn[9] = pTable.Columns.IndexOf("TITLE_4_03");           //출력용 사업자등록번호_03
            pGDColumn[10] = pTable.Columns.IndexOf("TITLE_4_04");          //출력용 사업자등록번호_04
            pGDColumn[11] = pTable.Columns.IndexOf("TITLE_4_05");          //출력용 사업자등록번호_05
            pGDColumn[12] = pTable.Columns.IndexOf("TITLE_4_06");          //출력용 사업자등록번호_06
            pGDColumn[13] = pTable.Columns.IndexOf("TITLE_4_07");          //출력용 사업자등록번호_07
            pGDColumn[14] = pTable.Columns.IndexOf("TITLE_4_08");          //출력용 사업자등록번호_08
            pGDColumn[15] = pTable.Columns.IndexOf("TITLE_4_09");          //출력용 사업자등록번호_09
            pGDColumn[16] = pTable.Columns.IndexOf("TITLE_4_10");          //출력용 사업자등록번호_10
            pGDColumn[17] = pTable.Columns.IndexOf("TITLE_4_01");          //출력용 사업자등록번호_01
            pGDColumn[18] = pTable.Columns.IndexOf("TITLE_4_02");          //출력용 사업자등록번호_02
            pGDColumn[19] = pTable.Columns.IndexOf("TITLE_4_03");          //출력용 사업자등록번호_03
            pGDColumn[20] = pTable.Columns.IndexOf("TITLE_4_04");          //출력용 사업자등록번호_04
            pGDColumn[21] = pTable.Columns.IndexOf("TITLE_4_05");          //출력용 사업자등록번호_05
            pGDColumn[22] = pTable.Columns.IndexOf("TITLE_4_06");          //출력용 사업자등록번호_06
            pGDColumn[23] = pTable.Columns.IndexOf("TITLE_4_07");          //출력용 사업자등록번호_07
            pGDColumn[24] = pTable.Columns.IndexOf("TITLE_4_08");          //출력용 사업자등록번호_08
            pGDColumn[25] = pTable.Columns.IndexOf("TITLE_4_09");          //출력용 사업자등록번호_09
            pGDColumn[26] = pTable.Columns.IndexOf("TITLE_4_10");          //출력용 사업자등록번호_10
            pGDColumn[27] = pTable.Columns.IndexOf("TITLE_5");             //법인등록번호
            pGDColumn[28] = pTable.Columns.IndexOf("TITLE_6");             //사업장전화
            pGDColumn[29] = pTable.Columns.IndexOf("TITLE_7");             //주소지전화
            pGDColumn[30] = pTable.Columns.IndexOf("TITLE_8");             //휴대전화
            pGDColumn[31] = pTable.Columns.IndexOf("TITLE_9");             //사업장주소
            pGDColumn[32] = pTable.Columns.IndexOf("TITLE_10");            //전자우편주소
            pGDColumn[33] = pTable.Columns.IndexOf("DEAL_BANK");           //거래은행
            pGDColumn[34] = pTable.Columns.IndexOf("DEAL_BRANCH");         //거래지점
            pGDColumn[35] = pTable.Columns.IndexOf("ACC_NO");              //계좌번호
            pGDColumn[36] = pTable.Columns.IndexOf("CLOSURE_DATE_PRINT");  //출력용 폐업일
            pGDColumn[37] = pTable.Columns.IndexOf("CLOSURE_REASON");      //폐업사유
            pGDColumn[38] = pTable.Columns.IndexOf("TITLE_14_PRINT");      //출력용 작성일자
            pGDColumn[39] = pTable.Columns.IndexOf("TITLE_15");            //신고인
            pGDColumn[40] = pTable.Columns.IndexOf("TITLE_16");            //세무서
            pGDColumn[41] = pTable.Columns.IndexOf("COL1_1");              //과세_세금계산서발급분_금액
            pGDColumn[42] = pTable.Columns.IndexOf("COL1_2");              //과세_세금계산서발급분_세액
            pGDColumn[43] = pTable.Columns.IndexOf("COL2_1");              //과세_매입자발행세금계산서_금액
            pGDColumn[44] = pTable.Columns.IndexOf("COL2_2");              //과세_매입자발행세금계산서_세액
            pGDColumn[45] = pTable.Columns.IndexOf("COL3_1");              //과세_신용카드_현금영수증발행분_금액
            pGDColumn[46] = pTable.Columns.IndexOf("COL3_2");              //과세_신용카드_현금영수증발행분_세액
            pGDColumn[47] = pTable.Columns.IndexOf("COL4_1");              //과세_기타_금액
            pGDColumn[48] = pTable.Columns.IndexOf("COL4_2");              //과세_기타_세액
            pGDColumn[49] = pTable.Columns.IndexOf("COL5_1");              //영세율_세금계산서발급분_금액
            pGDColumn[50] = pTable.Columns.IndexOf("COL6_1");              //영세율_기타_금액
            pGDColumn[51] = pTable.Columns.IndexOf("COL7_1");              //예정신고누락분_금액
            pGDColumn[52] = pTable.Columns.IndexOf("COL7_2");              //예정신고누락분_세액
            pGDColumn[53] = pTable.Columns.IndexOf("COL8_2");              //대손세액가감_세액
            pGDColumn[54] = pTable.Columns.IndexOf("COL9_1");              //합계_금액
            pGDColumn[55] = pTable.Columns.IndexOf("COL9_2");              //합계_세액
            pGDColumn[56] = pTable.Columns.IndexOf("COL10_1");             //매입_일반매입_금액
            pGDColumn[57] = pTable.Columns.IndexOf("COL10_2");             //매입_일반매입_세액
            pGDColumn[58] = pTable.Columns.IndexOf("COL11_1");             //매입_고정자산매입_금액
            pGDColumn[59] = pTable.Columns.IndexOf("COL11_2");             //매입_고장자산매입_세액
            pGDColumn[60] = pTable.Columns.IndexOf("COL12_1");             //매입_예정신고누락분_금액
            pGDColumn[61] = pTable.Columns.IndexOf("COL12_2");             //매입_예정신고누락분_세액
            pGDColumn[62] = pTable.Columns.IndexOf("COL13_1");             //매입_매입자발행세금계산서_금액
            pGDColumn[63] = pTable.Columns.IndexOf("COL13_2");             //매입_매입자발행세금계산서_세액
            pGDColumn[64] = pTable.Columns.IndexOf("COL14_1");             //매입_기타공제매입세액_금액
            pGDColumn[65] = pTable.Columns.IndexOf("COL14_2");             //매입_기타공제매입세액_세액
            pGDColumn[66] = pTable.Columns.IndexOf("COL15_1");             //매입_합계_금액
            pGDColumn[67] = pTable.Columns.IndexOf("COL15_2");             //매입_합계_세액
            pGDColumn[68] = pTable.Columns.IndexOf("COL16_1");             //매입_공제받지못할매입세액_금액
            pGDColumn[69] = pTable.Columns.IndexOf("COL16_2");             //매입_공제받지못할매입세액_세액
            pGDColumn[70] = pTable.Columns.IndexOf("COL17_1");             //매입_차감계_금액
            pGDColumn[71] = pTable.Columns.IndexOf("COL17_2");             //매입_차감계_세액
            pGDColumn[72] = pTable.Columns.IndexOf("COL_DA");              //납부세액
            pGDColumn[73] = pTable.Columns.IndexOf("COL18_2");             //기타경감공제세액
            pGDColumn[74] = pTable.Columns.IndexOf("COL19_2");             //신용카드매출전표등발행공제등
            pGDColumn[75] = pTable.Columns.IndexOf("COL20_2");             //경감공제_합계
            pGDColumn[76] = pTable.Columns.IndexOf("COL21_2");             //예정신고미환급세액
            pGDColumn[77] = pTable.Columns.IndexOf("COL22_2");             //예정고지세액
            pGDColumn[78] = pTable.Columns.IndexOf("COL23_2");             //금지금_매입자_납부특례_기납부세액
            pGDColumn[79] = pTable.Columns.IndexOf("COL24_2");             //가산세액계
            pGDColumn[80] = pTable.Columns.IndexOf("COL25");               //차가감하여납부할세액
            pGDColumn[81] = pTable.Columns.IndexOf("COL26_1");             //과세표준_업태1
            pGDColumn[82] = pTable.Columns.IndexOf("COL26_2");             //과세표준_종목1
            pGDColumn[83] = pTable.Columns.IndexOf("COL26_3");             //과세표준_금액1
            pGDColumn[84] = pTable.Columns.IndexOf("COL27_1");             //과세표준_업태2
            pGDColumn[85] = pTable.Columns.IndexOf("COL27_2");             //과세표준_종목2
            pGDColumn[86] = pTable.Columns.IndexOf("COL27_3");             //과세표준_금액2
            pGDColumn[87] = pTable.Columns.IndexOf("COL28_1");             //과세표준_업태3
            pGDColumn[88] = pTable.Columns.IndexOf("COL28_2");             //과세표준_종목3
            pGDColumn[89] = pTable.Columns.IndexOf("COL28_3");             //과세표준_금액3
            pGDColumn[90] = pTable.Columns.IndexOf("COL29_1");             //과세표준_업태4
            pGDColumn[91] = pTable.Columns.IndexOf("COL29_2");             //과세표준_종목4
            pGDColumn[92] = pTable.Columns.IndexOf("COL29_3");             //과세표준_금액4
            pGDColumn[93] = pTable.Columns.IndexOf("COL30");               //과세표준_합계
            pGDColumn[94] = pTable.Columns.IndexOf("TITLE_13_1");          //출력용 업종코드_01
            pGDColumn[95] = pTable.Columns.IndexOf("TITLE_13_2");          //출력용 업종코드_02
            pGDColumn[96] = pTable.Columns.IndexOf("TITLE_13_3");          //출력용 업종코드_03
            pGDColumn[97] = pTable.Columns.IndexOf("TITLE_13_4");          //출력용 업종코드_04
            pGDColumn[98] = pTable.Columns.IndexOf("TITLE_13_5");          //출력용 업종코드_05
            pGDColumn[99] = pTable.Columns.IndexOf("TITLE_13_6");          //출력용 업종코드_06
            pGDColumn[100] = pTable.Columns.IndexOf("COL31_1");            //예정신고_매출_과세_세금계산서_금액
            pGDColumn[101] = pTable.Columns.IndexOf("COL31_2");            //예정신고_매출_과세_세금계산서_세액
            pGDColumn[102] = pTable.Columns.IndexOf("COL32_1");            //예정신고_매출_과세_기타_금액
            pGDColumn[103] = pTable.Columns.IndexOf("COL32_2");            //예정신고_매출_과세_기타_세액
            pGDColumn[104] = pTable.Columns.IndexOf("COL33_1");            //예정신고_매출_영세율_세금계산서
            pGDColumn[105] = pTable.Columns.IndexOf("COL34_1");            //예정신고_매출_영세율_기타
            pGDColumn[106] = pTable.Columns.IndexOf("COL35_1");            //예정신고_매출_합계_금액
            pGDColumn[107] = pTable.Columns.IndexOf("COL35_2");            //예정신고_매출_합계_세액
            pGDColumn[108] = pTable.Columns.IndexOf("COL36_1");            //예정신고_매입_세금계산서_금액
            pGDColumn[109] = pTable.Columns.IndexOf("COL36_2");            //예정신고_매입_세금계산서_세액
            pGDColumn[110] = pTable.Columns.IndexOf("COL37_1");            //예정신고_매입_기타공제매입세액_금액
            pGDColumn[111] = pTable.Columns.IndexOf("COL37_2");            //예정신고_매입_기타공제매입세액_세액
            pGDColumn[112] = pTable.Columns.IndexOf("COL38_1");            //예정신고_매입_합계_금액
            pGDColumn[113] = pTable.Columns.IndexOf("COL38_2");            //예정신고_매입_합계_세액
            pGDColumn[114] = pTable.Columns.IndexOf("COL39_1");            //기타공제_신용카드_일반매입_금액
            pGDColumn[115] = pTable.Columns.IndexOf("COL39_2");            //기타공제_신용카드_일반매입_세액
            pGDColumn[116] = pTable.Columns.IndexOf("COL40_1");            //기타공제_신용카드_고정자산매입_금액
            pGDColumn[117] = pTable.Columns.IndexOf("COL40_2");            //기타공제_신용카드_고정자산매입_세액
            pGDColumn[118] = pTable.Columns.IndexOf("COL41_1");            //기타공제_의제매입세액_금액
            pGDColumn[119] = pTable.Columns.IndexOf("COL41_2");            //기타공제_의제매입세액_세액
            pGDColumn[120] = pTable.Columns.IndexOf("COL42_1");            //기타공제_재활용폐자원등매입세액_금액
            pGDColumn[121] = pTable.Columns.IndexOf("COL42_2");            //기타공제_재활용폐자원등매입세액_세액
            pGDColumn[122] = pTable.Columns.IndexOf("COL43_1");            //기타공제_고금의제매입세액_금액
            pGDColumn[123] = pTable.Columns.IndexOf("COL43_2");            //기타공제_고금의제매입세액_세액
            pGDColumn[124] = pTable.Columns.IndexOf("COL44_2");            //기타공제_과세사업전환매입세액_세액
            pGDColumn[125] = pTable.Columns.IndexOf("COL45_2");            //기타공제_재고매입세액_세액
            pGDColumn[126] = pTable.Columns.IndexOf("COL46_2");            //기타공제_변제대손세액_세액
            pGDColumn[127] = pTable.Columns.IndexOf("COL47_1");            //기타공제_합계_금액
            pGDColumn[128] = pTable.Columns.IndexOf("COL47_2");            //기타공제_헙계_세액
            pGDColumn[129] = pTable.Columns.IndexOf("COL48_1");            //공제받지못할매입세액_공제받지못할_금액
            pGDColumn[130] = pTable.Columns.IndexOf("COL48_2");            //공제받지못할매입세액_공제받지못할_세액
            pGDColumn[131] = pTable.Columns.IndexOf("COL49_1");            //공제받지못할매입세액_공통매입세액면세_금액
            pGDColumn[132] = pTable.Columns.IndexOf("COL49_2");            //공제받지못할매입세액_공통매입세액면세_세액
            pGDColumn[133] = pTable.Columns.IndexOf("COL50_1");            //공제받지못할매입세액_대손처분받은세액_금액
            pGDColumn[134] = pTable.Columns.IndexOf("COL50_2");            //공제받지못할매입세액_대손처분받은세액_세액
            pGDColumn[135] = pTable.Columns.IndexOf("COL51_1");            //공제받지못할매입세액_합계_금액
            pGDColumn[136] = pTable.Columns.IndexOf("COL51_2");            //공제받지못할매입세액_합계_세액
            pGDColumn[137] = pTable.Columns.IndexOf("COL52_2");            //기탁경감공제세액_전자신고세액공제_세액
            pGDColumn[138] = pTable.Columns.IndexOf("COL53_2");            //기타경감공제세액_전자세금계산서발급세액공제_세액
            pGDColumn[139] = pTable.Columns.IndexOf("COL54_2");            //기타경감공제세액_택시운송사업자경감세액_세액
            pGDColumn[140] = pTable.Columns.IndexOf("COL55_2");            //기타경감공제세액_현금영수증사업자세액공제_세액
            pGDColumn[141] = pTable.Columns.IndexOf("COL56_2");            //기타경감공제세액_기타_세액
            pGDColumn[142] = pTable.Columns.IndexOf("COL57_2");            //기타경감공제세액_합계_세액
            pGDColumn[143] = pTable.Columns.IndexOf("COL58_1");            //가산세명세_사업자미등록등_금액
            pGDColumn[144] = pTable.Columns.IndexOf("COL58_2");            //가산세명세_사업자미등록등_세액
            pGDColumn[145] = pTable.Columns.IndexOf("COL59_1");            //가산세명세_지연발급등_금액
            pGDColumn[146] = pTable.Columns.IndexOf("COL59_2");            //가산세명세_지연발급등_세액
            pGDColumn[147] = pTable.Columns.IndexOf("COL60_1");            //가산세명세_미발급등_금액
            pGDColumn[148] = pTable.Columns.IndexOf("COL60_2");            //가산세명세_미발급등_세액
            pGDColumn[149] = pTable.Columns.IndexOf("COL61_1");            //가산세명세_다음달15일이후_금액
            pGDColumn[150] = pTable.Columns.IndexOf("COL61_2");            //가산세명세_다음달15일이후_세액
            pGDColumn[151] = pTable.Columns.IndexOf("COL62_1");            //가산세명세_과세기간다음달15일이후_금액
            pGDColumn[152] = pTable.Columns.IndexOf("COL62_2");            //가산세명세_과세기간다음달15일이후_세액
            pGDColumn[153] = pTable.Columns.IndexOf("COL63_1");            //가산세명세_세금계산서합계표제출불성실_금액
            pGDColumn[154] = pTable.Columns.IndexOf("COL63_2");            //가산세명세_세금계산서합계표제출불성실_세액
            pGDColumn[155] = pTable.Columns.IndexOf("COL64_1");            //가산세명세_신고불성실_금액
            pGDColumn[156] = pTable.Columns.IndexOf("COL64_2");            //가산세명세_신고불성실_세액
            pGDColumn[157] = pTable.Columns.IndexOf("COL65_1");            //가산세명세_납부불성싱_금액
            pGDColumn[158] = pTable.Columns.IndexOf("COL65_2");            //가산세명세_납부불성실_세액
            pGDColumn[159] = pTable.Columns.IndexOf("COL66_1");            //가산세명세_영세율과세표준신고불성실_금액
            pGDColumn[160] = pTable.Columns.IndexOf("COL66_2");            //가산세명세_영세율과세표준신고불성실_세액
            pGDColumn[161] = pTable.Columns.IndexOf("COL67_1");            //가산세명세_현금매출명세서미제출등_금액
            pGDColumn[162] = pTable.Columns.IndexOf("COL67_2");            //가산세명세_현금매출명세서미제출등_세액
            pGDColumn[163] = pTable.Columns.IndexOf("COL68_2");            //가산세명세_합계_세액
            pGDColumn[164] = pTable.Columns.IndexOf("COL69_1");            //면세사업수입금액_업태1
            pGDColumn[165] = pTable.Columns.IndexOf("COL69_2");            //면세사업수입금액_종목1
            pGDColumn[166] = pTable.Columns.IndexOf("COL69_3");            //면세사업수입금액_금액1
            pGDColumn[167] = pTable.Columns.IndexOf("COL70_1");            //면세사업수입금액_업태2
            pGDColumn[168] = pTable.Columns.IndexOf("COL70_2");            //면세사업수입금액_종목2
            pGDColumn[169] = pTable.Columns.IndexOf("COL70_3");            //면세사업수입금액_금액2
            pGDColumn[170] = pTable.Columns.IndexOf("COL71_1");            //면세사업수입금액_업태3
            pGDColumn[171] = pTable.Columns.IndexOf("COL71_2");            //면세사업수입금액_종목3
            pGDColumn[172] = pTable.Columns.IndexOf("COL71_3");            //면세사업수입금액_금액3
            pGDColumn[173] = pTable.Columns.IndexOf("COL72");              //면세사업수입금액_합계
            pGDColumn[174] = pTable.Columns.IndexOf("TITLE_13_1");         //출력용 업종코드_01
            pGDColumn[175] = pTable.Columns.IndexOf("TITLE_13_2");         //출력용 업종코드_02
            pGDColumn[176] = pTable.Columns.IndexOf("TITLE_13_3");         //출력용 업종코드_03
            pGDColumn[177] = pTable.Columns.IndexOf("TITLE_13_4");         //출력용 업종코드_04
            pGDColumn[178] = pTable.Columns.IndexOf("TITLE_13_5");         //출력용 업종코드_05
            pGDColumn[179] = pTable.Columns.IndexOf("TITLE_13_6");         //출력용 업종코드_06
            pGDColumn[180] = pTable.Columns.IndexOf("COL73");              //계산서발급금액
            pGDColumn[181] = pTable.Columns.IndexOf("COL74");              //계산서수취금액
            pGDColumn[182] = pTable.Columns.IndexOf("R_ORIGIN_PLACE_VAT");          //경감공제세액 - 원산지확인서 발급공제세액
            pGDColumn[183] = pTable.Columns.IndexOf("A_TAX_RECEIVE_DELAY_AMT");     //가산세명세 - 세금계산서 지연수취금액
            pGDColumn[184] = pTable.Columns.IndexOf("A_TAX_RECEIVE_DELAY_VAT");     //가산세명세 - 세금계산서 지연수취세액
            // 2013년1기예정추가 //
            pGDColumn[185] = pTable.Columns.IndexOf("A_TAX_INV_SUM_BAD_AMT_1");     //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
            pGDColumn[186] = pTable.Columns.IndexOf("A_TAX_INV_SUM_BAD_VAT_1");     //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
            pGDColumn[187] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_1");          //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
            pGDColumn[188] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_1");          //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
            pGDColumn[189] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_2");          //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
            pGDColumn[190] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_2");          //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
            pGDColumn[191] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_3");          //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
            pGDColumn[192] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_3");          //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
            pGDColumn[193] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_4");          //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
            pGDColumn[194] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_4");          //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
            pGDColumn[195] = pTable.Columns.IndexOf("A_REALTY_LEASE_UNREPORT_AMT"); //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
            pGDColumn[196] = pTable.Columns.IndexOf("A_REALTY_LEASE_UNREPORT_VAT"); //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 
            pGDColumn[197] = pTable.Columns.IndexOf("TOT_REAL_VAT_AMOUNT");         //총괄납부사업자 납부할 세액  

            //2014.1기 예정 추가 
            pGDColumn[198] = pTable.Columns.IndexOf("COL26_4");                     //과세표준1 생산요소
            pGDColumn[199] = pTable.Columns.IndexOf("COL27_4");                     //과세표준2 생산요소 
            pGDColumn[200] = pTable.Columns.IndexOf("COL28_4");                     //과세표준3 생산요소 
            pGDColumn[201] = pTable.Columns.IndexOf("COL29_4");                     //과세표준4 생산요소 
            pGDColumn[202] = pTable.Columns.IndexOf("PROXY_PAY_TAX_VAT");           //사업양수자의 대리납부 기납부세액 
            pGDColumn[203] = pTable.Columns.IndexOf("SPECIAL_PAY_TAX_VAT");         //매입자 납부특례 기납부세액 
            pGDColumn[204] = pTable.Columns.IndexOf("E_FORE_TOUR_REFUND_VAT");      //외국인 관광객에 대한 환급세액 
            pGDColumn[205] = pTable.Columns.IndexOf("A_MISS_DEAL_ACCOUNT_AMT");     //매입자 납부특례 거래계좌 미사용 AMT 
            pGDColumn[206] = pTable.Columns.IndexOf("A_MISS_DEAL_ACCOUNT_VAT");     //매입자 납부특례 거래계좌 미사용 VAT
            pGDColumn[207] = pTable.Columns.IndexOf("A_DELAY_PAYMENT_AMT");         //매입자 납부특례 거래계좌 지연입금 AMT 
            pGDColumn[208] = pTable.Columns.IndexOf("A_DELAY_PAYMENT_VAT");         //매입자 납부특례 거래계좌 지연입금 VAT 
            pGDColumn[209] = pTable.Columns.IndexOf("P_EXPORT_IMPORT_POSTPONE_VAT");//수출기업 수입분 납부유예


            pXLColumn[0] = 22;  //GUBUN_1             신고서구분_예정
            pXLColumn[1] = 28;  //GUBUN_2             신고서구분_확정
            pXLColumn[2] = 22;  //GUBUN_3             신고서구분_기한후과세표준
            pXLColumn[3] = 22;  //GUBUN_4             신고서구분_영세율등조기환급
            pXLColumn[4] = 8;   //FISCAL_YEAR         신고기간_출력용
            pXLColumn[5] = 10;  //TITLE_2             상호
            pXLColumn[6] = 22;  //TITLE_3             성명
            pXLColumn[7] = 31;  //TITLE_4_01==========출력용 사업자등록번호_01_1장
            pXLColumn[8] = 32;  //TITLE_4_02          출력용 사업자등록번호_02_1장
            pXLColumn[9] = 33;  //TITLE_4_03          출력용 사업자등록번호_03_1장
            pXLColumn[10] = 35;  //TITLE_4_04          출력용 사업자등록번호_04_1장
            pXLColumn[11] = 36;  //TITLE_4_05          출력용 사업자등록번호_05_1장
            pXLColumn[12] = 38;  //TITLE_4_06          출력용 사업자등록번호_06_1장
            pXLColumn[13] = 39;  //TITLE_4_07          출력용 사업자등록번호_07_1장
            pXLColumn[14] = 40;  //TITLE_4_08          출력용 사업자등록번호_08_1장
            pXLColumn[15] = 41;  //TITLE_4_09          출력용 사업자등록번호_09_1장
            pXLColumn[16] = 42;  //TITLE_4_10==========출력용 사업자등록번호_10_1장
            pXLColumn[17] = 9;   //TITLE_4_01          출력용 사업자등록번호_01_2장
            pXLColumn[18] = 10;  //TITLE_4_02          출력용 사업자등록번호_02_2장
            pXLColumn[19] = 11;  //TITLE_4_03          출력용 사업자등록번호_03_2장
            pXLColumn[20] = 13;  //TITLE_4_04          출력용 사업자등록번호_04_2장
            pXLColumn[21] = 14;  //TITLE_4_05          출력용 사업자등록번호_05_2장
            pXLColumn[22] = 16;  //TITLE_4_06          출력용 사업자등록번호_06_2장
            pXLColumn[23] = 17;  //TITLE_4_07          출력용 사업자등록번호_07_2장
            pXLColumn[24] = 18;  //TITLE_4_08          출력용 사업자등록번호_08_2장
            pXLColumn[25] = 19;  //TITLE_4_09          출력용 사업자등록번호_09_2장
            pXLColumn[26] = 20;  //TITLE_4_10==========출력용 사업자등록번호_10_2장
            pXLColumn[27] = 10;  //TITLE_5             법인등록번호
            pXLColumn[28] = 28;  //TITLE_6             사업장전화
            pXLColumn[29] = 33;  //TITLE_7             주소지전화
            pXLColumn[30] = 38;  //TITLE_8             휴대전화
            pXLColumn[31] = 10;  //TITLE_9             사업장주소
            pXLColumn[32] = 33;  //TITLE_10            전자우편주소
            pXLColumn[33] = 17;  //DEAL_BANK           거래은행
            pXLColumn[34] = 24;  //DEAL_BRANCH         거래지점
            pXLColumn[35] = 34;  //ACC_NO              계좌번호
            pXLColumn[36] = 17;  //CLOSURE_DATE_PRINT  출력용 폐업일
            pXLColumn[37] = 30;  //CLOSURE_REASON      폐업사유
            pXLColumn[38] = 26;  //TITLE_14_PRINT      출력용 작성일자
            pXLColumn[39] = 31;  //TITLE_15            신고인
            pXLColumn[40] = 26;  //TITLE_16            세무서
            pXLColumn[41] = 21;  //COL1_1              과세_세금계산서발급분_금액
            pXLColumn[42] = 34;  //COL1_2              과세_세금계산서발급분_세액
            pXLColumn[43] = 21;  //COL2_1              과세_매입자발행세금계산서_금액
            pXLColumn[44] = 34;  //COL2_2              과세_매입자발행세금계산서_세액
            pXLColumn[45] = 21;  //COL3_1              과세_신용카드_현금영수증발행분_금액
            pXLColumn[46] = 34;  //COL3_2              과세_신용카드_현금영수증발행분_세액
            pXLColumn[47] = 21;  //COL4_1              과세_기타_금액
            pXLColumn[48] = 34;  //COL4_2              과세_기타_세액
            pXLColumn[49] = 21;  //COL5_1              영세율_세금계산서발급분_금액
            pXLColumn[50] = 21;  //COL6_1              영세율_기타_금액
            pXLColumn[51] = 21;  //COL7_1              예정신고누락분_금액
            pXLColumn[52] = 34;  //COL7_2              예정신고누락분_세액
            pXLColumn[53] = 34;  //COL8_2              대손세액가감_세액
            pXLColumn[54] = 21;  //COL9_1              합계_금액
            pXLColumn[55] = 34;  //COL9_2              합계_세액
            pXLColumn[56] = 21;  //COL10_1             매입_일반매입_금액
            pXLColumn[57] = 34;  //COL10_2             매입_일반매입_세액
            pXLColumn[58] = 21;  //COL11_1             매입_고정자산매입_금액
            pXLColumn[59] = 34;  //COL11_2             매입_고장자산매입_세액
            pXLColumn[60] = 21;  //COL12_1             매입_예정신고누락분_금액
            pXLColumn[61] = 34;  //COL12_2             매입_예정신고누락분_세액
            pXLColumn[62] = 21;  //COL13_1             매입_매입자발행세금계산서_금액
            pXLColumn[63] = 34;  //COL13_2             매입_매입자발행세금계산서_세액
            pXLColumn[64] = 21;  //COL14_1             매입_기타공제매입세액_금액
            pXLColumn[65] = 34;  //COL14_2             매입_기타공제매입세액_세액
            pXLColumn[66] = 21;  //COL15_1             매입_합계_금액
            pXLColumn[67] = 34;  //COL15_2             매입_합계_세액
            pXLColumn[68] = 21;  //COL16_1             매입_공제받지못할매입세액_금액
            pXLColumn[69] = 34;  //COL16_2             매입_공제받지못할매입세액_세액
            pXLColumn[70] = 21;  //COL17_1             매입_차감계_금액
            pXLColumn[71] = 34;  //COL17_2             매입_차감계_세액
            pXLColumn[72] = 34;  //COL_DA              납부세액
            pXLColumn[73] = 34;  //COL18_2             기타경감공제세액
            pXLColumn[74] = 34;  //COL19_2             신용카드매출전표등발행공제등
            pXLColumn[75] = 34;  //COL20_2             경감공제_합계
            pXLColumn[76] = 34;  //COL21_2             예정신고미환급세액
            pXLColumn[77] = 34;  //COL22_2             예정고지세액
            pXLColumn[78] = 34;  //COL23_2             금지금_매입자_납부특례_기납부세액
            pXLColumn[79] = 34;  //COL24_2             가산세액계
            pXLColumn[80] = 34;  //COL25               차가감하여납부할세액
            pXLColumn[81] = 3;   //COL26_1             과세표준_업태1
            pXLColumn[82] = 7;   //COL26_2             과세표준_종목1
            pXLColumn[83] = 22;  //COL26_3             과세표준_금액1
            pXLColumn[84] = 3;   //COL27_1             과세표준_업태2
            pXLColumn[85] = 7;   //COL27_2             과세표준_종목2
            pXLColumn[86] = 22;  //COL27_3             과세표준_금액2
            pXLColumn[87] = 3;   //COL28_1             과세표준_업태3
            pXLColumn[88] = 7;   //COL28_2             과세표준_종목3
            pXLColumn[89] = 22;  //COL28_3             과세표준_금액3
            pXLColumn[90] = 3;   //COL29_1             과세표준_업태4
            pXLColumn[91] = 7;   //COL29_2             과세표준_종목4
            pXLColumn[92] = 22;  //COL29_3             과세표준_금액4
            pXLColumn[93] = 22;  //COL30               과세표준_합계
            pXLColumn[94] = 16;  //TITLE_13_1==========출력용 업종코드_01_1장
            pXLColumn[95] = 17;  //TITLE_13_2          출력용 업종코드_02_1장
            pXLColumn[96] = 18;  //TITLE_13_3          출력용 업종코드_03_1장
            pXLColumn[97] = 19;  //TITLE_13_4          출력용 업종코드_04_1장
            pXLColumn[98] = 20;  //TITLE_13_5          출력용 업종코드_05_1장
            pXLColumn[99] = 21;  //TITLE_13_6==========출력용 업종코드_06_1장
            pXLColumn[100] = 21;  //COL31_1             예정신고_매출_과세_세금계산서_금액
            pXLColumn[101] = 34;  //COL31_2             예정신고_매출_과세_세금계산서_세액
            pXLColumn[102] = 21;  //COL32_1             예정신고_매출_과세_기타_금액
            pXLColumn[103] = 34;  //COL32_2             예정신고_매출_과세_기타_세액
            pXLColumn[104] = 21;  //COL33_1             예정신고_매출_영세율_세금계산서
            pXLColumn[105] = 21;  //COL34_1             예정신고_매출_영세율_기타
            pXLColumn[106] = 21;  //COL35_1             예정신고_매출_합계_금액
            pXLColumn[107] = 34;  //COL35_2             예정신고_매출_합계_세액
            pXLColumn[108] = 21;  //COL36_1             예정신고_매입_세금계산서_금액
            pXLColumn[109] = 34;  //COL36_2             예정신고_매입_세금계산서_세액
            pXLColumn[110] = 21;  //COL37_1             예정신고_매입_기타공제매입세액_금액
            pXLColumn[111] = 34;  //COL37_2             예정신고_매입_기타공제매입세액_세액
            pXLColumn[112] = 21;  //COL38_1             예정신고_매입_합계_금액
            pXLColumn[113] = 34;  //COL38_2             예정신고_매입_합계_세액
            pXLColumn[114] = 21;  //COL39_1             기타공제_신용카드_일반매입_금액
            pXLColumn[115] = 34;  //COL39_2             기타공제_신용카드_일반매입_세액
            pXLColumn[116] = 21;  //COL40_1             기타공제_신용카드_고정자산매입_금액
            pXLColumn[117] = 34;  //COL40_2             기타공제_신용카드_고정자산매입_세액
            pXLColumn[118] = 21;  //COL41_1             기타공제_의제매입세액_금액
            pXLColumn[119] = 34;  //COL41_2             기타공제_의제매입세액_세액
            pXLColumn[120] = 21;  //COL42_1             기타공제_재활용폐자원등매입세액_금액
            pXLColumn[121] = 34;  //COL42_2             기타공제_재활용폐자원등매입세액_세액
            pXLColumn[122] = 21;  //COL43_1             기타공제_고금의제매입세액_금액
            pXLColumn[123] = 34;  //COL43_2             기타공제_고금의제매입세액_세액
            pXLColumn[124] = 34;  //COL44_2             기타공제_과세사업전환매입세액_세액
            pXLColumn[125] = 34;  //COL45_2             기타공제_재고매입세액_세액
            pXLColumn[126] = 34;  //COL46_2             기타공제_변제대손세액_세액
            pXLColumn[127] = 21;  //COL47_1             기타공제_합계_금액
            pXLColumn[128] = 34;  //COL47_2             기타공제_헙계_세액
            pXLColumn[129] = 21;  //COL48_1             공제받지못할매입세액_공제받지못할_금액
            pXLColumn[130] = 34;  //COL48_2             공제받지못할매입세액_공제받지못할_세액
            pXLColumn[131] = 21;  //COL49_1             공제받지못할매입세액_공통매입세액면세_금액
            pXLColumn[132] = 34;  //COL49_2             공제받지못할매입세액_공통매입세액면세_세액
            pXLColumn[133] = 21;  //COL50_1             공제받지못할매입세액_대손처분받은세액_금액
            pXLColumn[134] = 34;  //COL50_2             공제받지못할매입세액_대손처분받은세액_세액
            pXLColumn[135] = 21;  //COL51_1             공제받지못할매입세액_합계_금액
            pXLColumn[136] = 34;  //COL51_2             공제받지못할매입세액_합계_세액

            pXLColumn[137] = 34;  //COL52_2             기탁경감공제세액_전자신고세액공제_세액
            pXLColumn[138] = 34;  //COL53_2             기타경감공제세액_전자세금계산서발급세액공제_세액
            pXLColumn[139] = 34;  //COL54_2             기타경감공제세액_택시운송사업자경감세액_세액
            pXLColumn[140] = 34;  //COL55_2             기타경감공제세액_현금영수증사업자세액공제_세액
            pXLColumn[141] = 34;  //COL56_2             기타경감공제세액_기타_세액
            pXLColumn[142] = 34;  //COL57_2             기타경감공제세액_합계_세액
            pXLColumn[143] = 21;  //COL58_1             가산세명세_사업자미등록등_금액
            pXLColumn[144] = 34;  //COL58_2             가산세명세_사업자미등록등_세액
            pXLColumn[145] = 21;  //COL59_1             가산세명세_지연발급등_금액
            pXLColumn[146] = 34;  //COL59_2             가산세명세_지연발급등_세액
            pXLColumn[147] = 21;  //COL60_1             가산세명세_미발급등_금액
            pXLColumn[148] = 34;  //COL60_2             가산세명세_미발급등_세액
            pXLColumn[149] = 21;  //COL61_1             가산세명세_다음달15일이후_금액
            pXLColumn[150] = 34;  //COL61_2             가산세명세_다음달15일이후_세액
            pXLColumn[151] = 21;  //COL62_1             가산세명세_과세기간다음달15일이후_금액
            pXLColumn[152] = 34;  //COL62_2             가산세명세_과세기간다음달15일이후_세액
            pXLColumn[153] = 21;  //COL63_1             가산세명세_세금계산서합계표제출불성실_금액
            pXLColumn[154] = 34;  //COL63_2             가산세명세_세금계산서합계표제출불성실_세액
            pXLColumn[155] = 21;  //COL64_1             가산세명세_신고불성실_금액
            pXLColumn[156] = 34;  //COL64_2             가산세명세_신고불성실_세액
            pXLColumn[157] = 21;  //COL65_1             가산세명세_납부불성싱_금액
            pXLColumn[158] = 34;  //COL65_2             가산세명세_납부불성실_세액
            pXLColumn[159] = 21;  //COL66_1             가산세명세_영세율과세표준신고불성실_금액
            pXLColumn[160] = 34;  //COL66_2             가산세명세_영세율과세표준신고불성실_세액
            pXLColumn[161] = 21;  //COL67_1             가산세명세_현금매출명세서미제출등_금액
            pXLColumn[162] = 34;  //COL67_2             가산세명세_현금매출명세서미제출등_세액
            pXLColumn[163] = 34;  //COL68_2             가산세명세_합계_세액
            pXLColumn[164] = 9;   //COL69_1             면세사업수입금액_업태1
            pXLColumn[165] = 17;  //COL69_2             면세사업수입금액_종목1
            pXLColumn[166] = 34;  //COL69_3             면세사업수입금액_금액1
            pXLColumn[167] = 9;   //COL70_1             면세사업수입금액_업태2
            pXLColumn[168] = 17;  //COL70_2             면세사업수입금액_종목2
            pXLColumn[169] = 34;  //COL70_3             면세사업수입금액_금액2
            pXLColumn[170] = 9;   //COL71_1             면세사업수입금액_업태3
            pXLColumn[171] = 17;  //COL71_2             면세사업수입금액_종목3
            pXLColumn[172] = 34;  //COL71_3             면세사업수입금액_금액3
            pXLColumn[173] = 34;  //COL72               면세사업수입금액_합계
            pXLColumn[174] = 28;  //TITLE_13_1==========출력용 업종코드_01_2장
            pXLColumn[175] = 29;  //TITLE_13_2          출력용 업종코드_02_2장
            pXLColumn[176] = 30;  //TITLE_13_3          출력용 업종코드_03_2장
            pXLColumn[177] = 31;  //TITLE_13_4          출력용 업종코드_04_2장
            pXLColumn[178] = 32;  //TITLE_13_5          출력용 업종코드_05_2장
            pXLColumn[179] = 33;  //TITLE_13_6==========출력용 업종코드_06_2장
            pXLColumn[180] = 17;  //COL73               계산서발급금액
            pXLColumn[181] = 17;  //COL74               계산서수취금액

            pXLColumn[182] = 34;  //경감공제세액 - 원산지확인서 발급공제세액
            pXLColumn[183] = 21;  //가산세명세 - 세금계산서 지연수취금액
            pXLColumn[184] = 34;  //가산세명세 - 세금계산서 지연수취세액

            //2031년1기예정 추가 //
            pXLColumn[185] = 21;  //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
            pXLColumn[186] = 34;  //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
            pXLColumn[187] = 21;  //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
            pXLColumn[188] = 34;  //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
            pXLColumn[189] = 21;  //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
            pXLColumn[190] = 34;  //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
            pXLColumn[191] = 21;  //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
            pXLColumn[192] = 34;  //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
            pXLColumn[193] = 21;  //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
            pXLColumn[194] = 34;  //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
            pXLColumn[195] = 21;  //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
            pXLColumn[196] = 34;  //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 

            pXLColumn[197] = 34;  //총괄납부사업자 납부할 세액  

            //2014.1기 예정 추가 
            pXLColumn[198] = 12;                    //과세표준1 생산요소
            pXLColumn[199] = 12;                    //과세표준2 생산요소 
            pXLColumn[200] = 12;                    //과세표준3 생산요소 
            pXLColumn[201] = 12;                    //과세표준4 생산요소 
            pXLColumn[202] = 34;                    //사업양수자의 대리납부 기납부세액 
            pXLColumn[203] = 34;                    //매입자 납부특례 기납부세액 
            pXLColumn[204] = 34;                    //외국인 관광객에 대한 환급세액 
            pXLColumn[205] = 21;                    //매입자 납부특례 거래계좌 미사용 AMT 
            pXLColumn[206] = 34;                    //매입자 납부특례 거래계좌 미사용 VAT
            pXLColumn[207] = 21;                    //매입자 납부특례 거래계좌 지연입금 AMT 
            pXLColumn[208] = 34;                    //매입자 납부특례 거래계좌 지연입금 VAT 
            pXLColumn[209] = 34;                    //수출기업 수입분 납부유예 VAT 
        }

        private void SetArray1_013(System.Data.DataTable pTable, out int[] pGDColumn, out int[] pXLColumn)
        {
            pGDColumn = new int[217];
            pXLColumn = new int[217];

            pGDColumn[0] = pTable.Columns.IndexOf("GUBUN_1");              //신고서구분_예정
            pGDColumn[1] = pTable.Columns.IndexOf("GUBUN_2");              //신고서구분_확정
            pGDColumn[2] = pTable.Columns.IndexOf("GUBUN_3");              //신고서구분_기한후과세표준
            pGDColumn[3] = pTable.Columns.IndexOf("GUBUN_4");              //신고서구분_영세율등조기환급
            pGDColumn[4] = pTable.Columns.IndexOf("FISCAL_YEAR");          //신고기간_출력용
            pGDColumn[5] = pTable.Columns.IndexOf("TITLE_2");              //상호
            pGDColumn[6] = pTable.Columns.IndexOf("TITLE_3");              //성명
            pGDColumn[7] = pTable.Columns.IndexOf("TITLE_4_01");           //출력용 사업자등록번호_01
            pGDColumn[8] = pTable.Columns.IndexOf("TITLE_4_02");           //출력용 사업자등록번호_02
            pGDColumn[9] = pTable.Columns.IndexOf("TITLE_4_03");           //출력용 사업자등록번호_03
            pGDColumn[10] = pTable.Columns.IndexOf("TITLE_4_04");          //출력용 사업자등록번호_04
            pGDColumn[11] = pTable.Columns.IndexOf("TITLE_4_05");          //출력용 사업자등록번호_05
            pGDColumn[12] = pTable.Columns.IndexOf("TITLE_4_06");          //출력용 사업자등록번호_06
            pGDColumn[13] = pTable.Columns.IndexOf("TITLE_4_07");          //출력용 사업자등록번호_07
            pGDColumn[14] = pTable.Columns.IndexOf("TITLE_4_08");          //출력용 사업자등록번호_08
            pGDColumn[15] = pTable.Columns.IndexOf("TITLE_4_09");          //출력용 사업자등록번호_09
            pGDColumn[16] = pTable.Columns.IndexOf("TITLE_4_10");          //출력용 사업자등록번호_10
            pGDColumn[17] = pTable.Columns.IndexOf("TITLE_4_01");          //출력용 사업자등록번호_01
            pGDColumn[18] = pTable.Columns.IndexOf("TITLE_4_02");          //출력용 사업자등록번호_02
            pGDColumn[19] = pTable.Columns.IndexOf("TITLE_4_03");          //출력용 사업자등록번호_03
            pGDColumn[20] = pTable.Columns.IndexOf("TITLE_4_04");          //출력용 사업자등록번호_04
            pGDColumn[21] = pTable.Columns.IndexOf("TITLE_4_05");          //출력용 사업자등록번호_05
            pGDColumn[22] = pTable.Columns.IndexOf("TITLE_4_06");          //출력용 사업자등록번호_06
            pGDColumn[23] = pTable.Columns.IndexOf("TITLE_4_07");          //출력용 사업자등록번호_07
            pGDColumn[24] = pTable.Columns.IndexOf("TITLE_4_08");          //출력용 사업자등록번호_08
            pGDColumn[25] = pTable.Columns.IndexOf("TITLE_4_09");          //출력용 사업자등록번호_09
            pGDColumn[26] = pTable.Columns.IndexOf("TITLE_4_10");          //출력용 사업자등록번호_10
            pGDColumn[27] = pTable.Columns.IndexOf("TITLE_5");             //법인등록번호
            pGDColumn[28] = pTable.Columns.IndexOf("TITLE_6");             //사업장전화
            pGDColumn[29] = pTable.Columns.IndexOf("TITLE_7");             //주소지전화
            pGDColumn[30] = pTable.Columns.IndexOf("TITLE_8");             //휴대전화
            pGDColumn[31] = pTable.Columns.IndexOf("TITLE_9");             //사업장주소
            pGDColumn[32] = pTable.Columns.IndexOf("TITLE_10");            //전자우편주소
            pGDColumn[33] = pTable.Columns.IndexOf("DEAL_BANK");           //거래은행
            pGDColumn[34] = pTable.Columns.IndexOf("DEAL_BRANCH");         //거래지점
            pGDColumn[35] = pTable.Columns.IndexOf("ACC_NO");              //계좌번호
            pGDColumn[36] = pTable.Columns.IndexOf("CLOSURE_DATE_PRINT");  //출력용 폐업일
            pGDColumn[37] = pTable.Columns.IndexOf("CLOSURE_REASON");      //폐업사유
            pGDColumn[38] = pTable.Columns.IndexOf("TITLE_14_PRINT");      //출력용 작성일자
            pGDColumn[39] = pTable.Columns.IndexOf("TITLE_15");            //신고인
            pGDColumn[40] = pTable.Columns.IndexOf("TITLE_16");            //세무서
            pGDColumn[41] = pTable.Columns.IndexOf("COL1_1");              //과세_세금계산서발급분_금액
            pGDColumn[42] = pTable.Columns.IndexOf("COL1_2");              //과세_세금계산서발급분_세액
            pGDColumn[43] = pTable.Columns.IndexOf("COL2_1");              //과세_매입자발행세금계산서_금액
            pGDColumn[44] = pTable.Columns.IndexOf("COL2_2");              //과세_매입자발행세금계산서_세액
            pGDColumn[45] = pTable.Columns.IndexOf("COL3_1");              //과세_신용카드_현금영수증발행분_금액
            pGDColumn[46] = pTable.Columns.IndexOf("COL3_2");              //과세_신용카드_현금영수증발행분_세액
            pGDColumn[47] = pTable.Columns.IndexOf("COL4_1");              //과세_기타_금액
            pGDColumn[48] = pTable.Columns.IndexOf("COL4_2");              //과세_기타_세액
            pGDColumn[49] = pTable.Columns.IndexOf("COL5_1");              //영세율_세금계산서발급분_금액
            pGDColumn[50] = pTable.Columns.IndexOf("COL6_1");              //영세율_기타_금액
            pGDColumn[51] = pTable.Columns.IndexOf("COL7_1");              //예정신고누락분_금액
            pGDColumn[52] = pTable.Columns.IndexOf("COL7_2");              //예정신고누락분_세액
            pGDColumn[53] = pTable.Columns.IndexOf("COL8_2");              //대손세액가감_세액
            pGDColumn[54] = pTable.Columns.IndexOf("COL9_1");              //합계_금액
            pGDColumn[55] = pTable.Columns.IndexOf("COL9_2");              //합계_세액
            pGDColumn[56] = pTable.Columns.IndexOf("COL10_1");             //매입_일반매입_금액
            pGDColumn[57] = pTable.Columns.IndexOf("COL10_2");             //매입_일반매입_세액
            pGDColumn[58] = pTable.Columns.IndexOf("COL11_1");             //매입_고정자산매입_금액
            pGDColumn[59] = pTable.Columns.IndexOf("COL11_2");             //매입_고장자산매입_세액
            pGDColumn[60] = pTable.Columns.IndexOf("COL12_1");             //매입_예정신고누락분_금액
            pGDColumn[61] = pTable.Columns.IndexOf("COL12_2");             //매입_예정신고누락분_세액
            pGDColumn[62] = pTable.Columns.IndexOf("COL13_1");             //매입_매입자발행세금계산서_금액
            pGDColumn[63] = pTable.Columns.IndexOf("COL13_2");             //매입_매입자발행세금계산서_세액
            pGDColumn[64] = pTable.Columns.IndexOf("COL14_1");             //매입_기타공제매입세액_금액
            pGDColumn[65] = pTable.Columns.IndexOf("COL14_2");             //매입_기타공제매입세액_세액
            pGDColumn[66] = pTable.Columns.IndexOf("COL15_1");             //매입_합계_금액
            pGDColumn[67] = pTable.Columns.IndexOf("COL15_2");             //매입_합계_세액
            pGDColumn[68] = pTable.Columns.IndexOf("COL16_1");             //매입_공제받지못할매입세액_금액
            pGDColumn[69] = pTable.Columns.IndexOf("COL16_2");             //매입_공제받지못할매입세액_세액
            pGDColumn[70] = pTable.Columns.IndexOf("COL17_1");             //매입_차감계_금액
            pGDColumn[71] = pTable.Columns.IndexOf("COL17_2");             //매입_차감계_세액
            pGDColumn[72] = pTable.Columns.IndexOf("COL_DA");              //납부세액
            pGDColumn[73] = pTable.Columns.IndexOf("COL18_2");             //기타경감공제세액
            pGDColumn[74] = pTable.Columns.IndexOf("COL19_2");             //신용카드매출전표등발행공제등
            pGDColumn[75] = pTable.Columns.IndexOf("COL20_2");             //경감공제_합계
            pGDColumn[76] = pTable.Columns.IndexOf("COL21_2");             //예정신고미환급세액
            pGDColumn[77] = pTable.Columns.IndexOf("COL22_2");             //예정고지세액
            pGDColumn[78] = pTable.Columns.IndexOf("COL23_2");             //금지금_매입자_납부특례_기납부세액
            pGDColumn[79] = pTable.Columns.IndexOf("COL24_2");             //가산세액계
            pGDColumn[80] = pTable.Columns.IndexOf("COL25");               //차가감하여납부할세액
            pGDColumn[81] = pTable.Columns.IndexOf("COL26_1");             //과세표준_업태1
            pGDColumn[82] = pTable.Columns.IndexOf("COL26_2");             //과세표준_종목1
            pGDColumn[83] = pTable.Columns.IndexOf("COL26_3");             //과세표준_금액1
            pGDColumn[84] = pTable.Columns.IndexOf("COL27_1");             //과세표준_업태2
            pGDColumn[85] = pTable.Columns.IndexOf("COL27_2");             //과세표준_종목2
            pGDColumn[86] = pTable.Columns.IndexOf("COL27_3");             //과세표준_금액2
            pGDColumn[87] = pTable.Columns.IndexOf("COL28_1");             //과세표준_업태3
            pGDColumn[88] = pTable.Columns.IndexOf("COL28_2");             //과세표준_종목3
            pGDColumn[89] = pTable.Columns.IndexOf("COL28_3");             //과세표준_금액3
            pGDColumn[90] = pTable.Columns.IndexOf("COL29_1");             //과세표준_업태4
            pGDColumn[91] = pTable.Columns.IndexOf("COL29_2");             //과세표준_종목4
            pGDColumn[92] = pTable.Columns.IndexOf("COL29_3");             //과세표준_금액4
            pGDColumn[93] = pTable.Columns.IndexOf("COL30");               //과세표준_합계
            pGDColumn[94] = pTable.Columns.IndexOf("TITLE_13_1");          //출력용 업종코드_01
            pGDColumn[95] = pTable.Columns.IndexOf("TITLE_13_2");          //출력용 업종코드_02
            pGDColumn[96] = pTable.Columns.IndexOf("TITLE_13_3");          //출력용 업종코드_03
            pGDColumn[97] = pTable.Columns.IndexOf("TITLE_13_4");          //출력용 업종코드_04
            pGDColumn[98] = pTable.Columns.IndexOf("TITLE_13_5");          //출력용 업종코드_05
            pGDColumn[99] = pTable.Columns.IndexOf("TITLE_13_6");          //출력용 업종코드_06
            pGDColumn[100] = pTable.Columns.IndexOf("COL31_1");            //예정신고_매출_과세_세금계산서_금액
            pGDColumn[101] = pTable.Columns.IndexOf("COL31_2");            //예정신고_매출_과세_세금계산서_세액
            pGDColumn[102] = pTable.Columns.IndexOf("COL32_1");            //예정신고_매출_과세_기타_금액
            pGDColumn[103] = pTable.Columns.IndexOf("COL32_2");            //예정신고_매출_과세_기타_세액
            pGDColumn[104] = pTable.Columns.IndexOf("COL33_1");            //예정신고_매출_영세율_세금계산서
            pGDColumn[105] = pTable.Columns.IndexOf("COL34_1");            //예정신고_매출_영세율_기타
            pGDColumn[106] = pTable.Columns.IndexOf("COL35_1");            //예정신고_매출_합계_금액
            pGDColumn[107] = pTable.Columns.IndexOf("COL35_2");            //예정신고_매출_합계_세액
            pGDColumn[108] = pTable.Columns.IndexOf("COL36_1");            //예정신고_매입_세금계산서_금액
            pGDColumn[109] = pTable.Columns.IndexOf("COL36_2");            //예정신고_매입_세금계산서_세액
            pGDColumn[110] = pTable.Columns.IndexOf("COL37_1");            //예정신고_매입_기타공제매입세액_금액
            pGDColumn[111] = pTable.Columns.IndexOf("COL37_2");            //예정신고_매입_기타공제매입세액_세액
            pGDColumn[112] = pTable.Columns.IndexOf("COL38_1");            //예정신고_매입_합계_금액
            pGDColumn[113] = pTable.Columns.IndexOf("COL38_2");            //예정신고_매입_합계_세액
            pGDColumn[114] = pTable.Columns.IndexOf("COL39_1");            //기타공제_신용카드_일반매입_금액
            pGDColumn[115] = pTable.Columns.IndexOf("COL39_2");            //기타공제_신용카드_일반매입_세액
            pGDColumn[116] = pTable.Columns.IndexOf("COL40_1");            //기타공제_신용카드_고정자산매입_금액
            pGDColumn[117] = pTable.Columns.IndexOf("COL40_2");            //기타공제_신용카드_고정자산매입_세액
            pGDColumn[118] = pTable.Columns.IndexOf("COL41_1");            //기타공제_의제매입세액_금액
            pGDColumn[119] = pTable.Columns.IndexOf("COL41_2");            //기타공제_의제매입세액_세액
            pGDColumn[120] = pTable.Columns.IndexOf("COL42_1");            //기타공제_재활용폐자원등매입세액_금액
            pGDColumn[121] = pTable.Columns.IndexOf("COL42_2");            //기타공제_재활용폐자원등매입세액_세액
            pGDColumn[122] = pTable.Columns.IndexOf("COL43_1");            //기타공제_고금의제매입세액_금액
            pGDColumn[123] = pTable.Columns.IndexOf("COL43_2");            //기타공제_고금의제매입세액_세액
            pGDColumn[124] = pTable.Columns.IndexOf("COL44_2");            //기타공제_과세사업전환매입세액_세액
            pGDColumn[125] = pTable.Columns.IndexOf("COL45_2");            //기타공제_재고매입세액_세액
            pGDColumn[126] = pTable.Columns.IndexOf("COL46_2");            //기타공제_변제대손세액_세액
            pGDColumn[127] = pTable.Columns.IndexOf("COL47_1");            //기타공제_합계_금액
            pGDColumn[128] = pTable.Columns.IndexOf("COL47_2");            //기타공제_헙계_세액
            pGDColumn[129] = pTable.Columns.IndexOf("COL48_1");            //공제받지못할매입세액_공제받지못할_금액
            pGDColumn[130] = pTable.Columns.IndexOf("COL48_2");            //공제받지못할매입세액_공제받지못할_세액
            pGDColumn[131] = pTable.Columns.IndexOf("COL49_1");            //공제받지못할매입세액_공통매입세액면세_금액
            pGDColumn[132] = pTable.Columns.IndexOf("COL49_2");            //공제받지못할매입세액_공통매입세액면세_세액
            pGDColumn[133] = pTable.Columns.IndexOf("COL50_1");            //공제받지못할매입세액_대손처분받은세액_금액
            pGDColumn[134] = pTable.Columns.IndexOf("COL50_2");            //공제받지못할매입세액_대손처분받은세액_세액
            pGDColumn[135] = pTable.Columns.IndexOf("COL51_1");            //공제받지못할매입세액_합계_금액
            pGDColumn[136] = pTable.Columns.IndexOf("COL51_2");            //공제받지못할매입세액_합계_세액
            pGDColumn[137] = pTable.Columns.IndexOf("COL52_2");            //기탁경감공제세액_전자신고세액공제_세액
            pGDColumn[138] = pTable.Columns.IndexOf("COL53_2");            //기타경감공제세액_전자세금계산서발급세액공제_세액
            pGDColumn[139] = pTable.Columns.IndexOf("COL54_2");            //기타경감공제세액_택시운송사업자경감세액_세액
            pGDColumn[140] = pTable.Columns.IndexOf("COL55_2");            //기타경감공제세액_현금영수증사업자세액공제_세액
            pGDColumn[141] = pTable.Columns.IndexOf("COL56_2");            //기타경감공제세액_기타_세액
            pGDColumn[142] = pTable.Columns.IndexOf("COL57_2");            //기타경감공제세액_합계_세액
            pGDColumn[143] = pTable.Columns.IndexOf("COL58_1");            //가산세명세_사업자미등록등_금액
            pGDColumn[144] = pTable.Columns.IndexOf("COL58_2");            //가산세명세_사업자미등록등_세액
            pGDColumn[145] = pTable.Columns.IndexOf("COL59_1");            //가산세명세_지연발급등_금액
            pGDColumn[146] = pTable.Columns.IndexOf("COL59_2");            //가산세명세_지연발급등_세액
            pGDColumn[147] = pTable.Columns.IndexOf("COL60_1");            //가산세명세_미발급등_금액
            pGDColumn[148] = pTable.Columns.IndexOf("COL60_2");            //가산세명세_미발급등_세액
            pGDColumn[149] = pTable.Columns.IndexOf("COL61_1");            //가산세명세_다음달15일이후_금액
            pGDColumn[150] = pTable.Columns.IndexOf("COL61_2");            //가산세명세_다음달15일이후_세액
            pGDColumn[151] = pTable.Columns.IndexOf("COL62_1");            //가산세명세_과세기간다음달15일이후_금액
            pGDColumn[152] = pTable.Columns.IndexOf("COL62_2");            //가산세명세_과세기간다음달15일이후_세액
            pGDColumn[153] = pTable.Columns.IndexOf("COL63_1");            //가산세명세_세금계산서합계표제출불성실_금액
            pGDColumn[154] = pTable.Columns.IndexOf("COL63_2");            //가산세명세_세금계산서합계표제출불성실_세액
            pGDColumn[155] = pTable.Columns.IndexOf("COL64_1");            //가산세명세_신고불성실_금액
            pGDColumn[156] = pTable.Columns.IndexOf("COL64_2");            //가산세명세_신고불성실_세액
            pGDColumn[157] = pTable.Columns.IndexOf("COL65_1");            //가산세명세_납부불성싱_금액
            pGDColumn[158] = pTable.Columns.IndexOf("COL65_2");            //가산세명세_납부불성실_세액
            pGDColumn[159] = pTable.Columns.IndexOf("COL66_1");            //가산세명세_영세율과세표준신고불성실_금액
            pGDColumn[160] = pTable.Columns.IndexOf("COL66_2");            //가산세명세_영세율과세표준신고불성실_세액
            pGDColumn[161] = pTable.Columns.IndexOf("COL67_1");            //가산세명세_현금매출명세서미제출등_금액
            pGDColumn[162] = pTable.Columns.IndexOf("COL67_2");            //가산세명세_현금매출명세서미제출등_세액
            pGDColumn[163] = pTable.Columns.IndexOf("COL68_2");            //가산세명세_합계_세액
            pGDColumn[164] = pTable.Columns.IndexOf("COL69_1");            //면세사업수입금액_업태1
            pGDColumn[165] = pTable.Columns.IndexOf("COL69_2");            //면세사업수입금액_종목1
            pGDColumn[166] = pTable.Columns.IndexOf("COL69_3");            //면세사업수입금액_금액1
            pGDColumn[167] = pTable.Columns.IndexOf("COL70_1");            //면세사업수입금액_업태2
            pGDColumn[168] = pTable.Columns.IndexOf("COL70_2");            //면세사업수입금액_종목2
            pGDColumn[169] = pTable.Columns.IndexOf("COL70_3");            //면세사업수입금액_금액2
            pGDColumn[170] = pTable.Columns.IndexOf("COL71_1");            //면세사업수입금액_업태3
            pGDColumn[171] = pTable.Columns.IndexOf("COL71_2");            //면세사업수입금액_종목3
            pGDColumn[172] = pTable.Columns.IndexOf("COL71_3");            //면세사업수입금액_금액3
            pGDColumn[173] = pTable.Columns.IndexOf("COL72");              //면세사업수입금액_합계
            pGDColumn[174] = pTable.Columns.IndexOf("TITLE_13_1");         //출력용 업종코드_01
            pGDColumn[175] = pTable.Columns.IndexOf("TITLE_13_2");         //출력용 업종코드_02
            pGDColumn[176] = pTable.Columns.IndexOf("TITLE_13_3");         //출력용 업종코드_03
            pGDColumn[177] = pTable.Columns.IndexOf("TITLE_13_4");         //출력용 업종코드_04
            pGDColumn[178] = pTable.Columns.IndexOf("TITLE_13_5");         //출력용 업종코드_05
            pGDColumn[179] = pTable.Columns.IndexOf("TITLE_13_6");         //출력용 업종코드_06
            pGDColumn[180] = pTable.Columns.IndexOf("COL73");              //계산서발급금액
            pGDColumn[181] = pTable.Columns.IndexOf("COL74");              //계산서수취금액
            pGDColumn[182] = pTable.Columns.IndexOf("R_ORIGIN_PLACE_VAT");          //경감공제세액 - 원산지확인서 발급공제세액
            pGDColumn[183] = pTable.Columns.IndexOf("A_TAX_RECEIVE_DELAY_AMT");     //가산세명세 - 세금계산서 지연수취금액
            pGDColumn[184] = pTable.Columns.IndexOf("A_TAX_RECEIVE_DELAY_VAT");     //가산세명세 - 세금계산서 지연수취세액
            // 2013년1기예정추가 //
            pGDColumn[185] = pTable.Columns.IndexOf("A_TAX_INV_SUM_BAD_AMT_1");     //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
            pGDColumn[186] = pTable.Columns.IndexOf("A_TAX_INV_SUM_BAD_VAT_1");     //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
            pGDColumn[187] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_1");          //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
            pGDColumn[188] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_1");          //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
            pGDColumn[189] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_2");          //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
            pGDColumn[190] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_2");          //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
            pGDColumn[191] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_3");          //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
            pGDColumn[192] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_3");          //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
            pGDColumn[193] = pTable.Columns.IndexOf("A_REPORT_BAD_AMT_4");          //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
            pGDColumn[194] = pTable.Columns.IndexOf("A_REPORT_BAD_VAT_4");          //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
            pGDColumn[195] = pTable.Columns.IndexOf("A_REALTY_LEASE_UNREPORT_AMT"); //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
            pGDColumn[196] = pTable.Columns.IndexOf("A_REALTY_LEASE_UNREPORT_VAT"); //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 
            pGDColumn[197] = pTable.Columns.IndexOf("TOT_REAL_VAT_AMOUNT");         //총괄납부사업자 납부할 세액  

            //2014.1기 예정 추가 
            pGDColumn[198] = pTable.Columns.IndexOf("COL26_4");                     //과세표준1 생산요소
            pGDColumn[199] = pTable.Columns.IndexOf("COL27_4");                     //과세표준2 생산요소 
            pGDColumn[200] = pTable.Columns.IndexOf("COL28_4");                     //과세표준3 생산요소 
            pGDColumn[201] = pTable.Columns.IndexOf("COL29_4");                     //과세표준4 생산요소 
            pGDColumn[202] = pTable.Columns.IndexOf("PROXY_PAY_TAX_VAT");           //사업양수자의 대리납부 기납부세액 
            pGDColumn[203] = pTable.Columns.IndexOf("SPECIAL_PAY_TAX_VAT");         //매입자 납부특례 기납부세액 
            pGDColumn[204] = pTable.Columns.IndexOf("E_FORE_TOUR_REFUND_VAT");      //외국인 관광객에 대한 환급세액 
            pGDColumn[205] = pTable.Columns.IndexOf("A_MISS_DEAL_ACCOUNT_AMT");     //매입자 납부특례 거래계좌 미사용 AMT 
            pGDColumn[206] = pTable.Columns.IndexOf("A_MISS_DEAL_ACCOUNT_VAT");     //매입자 납부특례 거래계좌 미사용 VAT
            pGDColumn[207] = pTable.Columns.IndexOf("A_DELAY_PAYMENT_AMT");         //매입자 납부특례 거래계좌 지연입금 AMT 
            pGDColumn[208] = pTable.Columns.IndexOf("A_DELAY_PAYMENT_VAT");         //매입자 납부특례 거래계좌 지연입금 VAT 
            pGDColumn[209] = pTable.Columns.IndexOf("P_EXPORT_IMPORT_POSTPONE_VAT");//수출기업 수입분 납부유예

            pGDColumn[210] = pTable.Columns.IndexOf("CARD_AGENT_PAY_TAX_VAT");      //신용카드업자가 대리납부 기납부세액
            pGDColumn[211] = pTable.Columns.IndexOf("SMALL_PB_REDUC_VAT_VAT");      //소규모 개인사업장 부가가치세 감면세액
            pGDColumn[212] = pTable.Columns.IndexOf("R_CARD_AGENT_PAY_TAX_VAT");     //대리납부 세액공제
            pGDColumn[213] = pTable.Columns.IndexOf("ZR_RECIPROCITY_YN");           //영세율상호주의 적용여부
            pGDColumn[214] = pTable.Columns.IndexOf("ZR_RECIPROCITY_TYPE");         //영세율상호주의 적용구분
            pGDColumn[215] = pTable.Columns.IndexOf("ZR_BUSINESS_ITEM");    //영세율상호주의 업종
            pGDColumn[216] = pTable.Columns.IndexOf("ZR_COUNTRY_CODE"); //영세율상호주의 국가
            
            pXLColumn[0] = 22;  //GUBUN_1             신고서구분_예정
            pXLColumn[1] = 28;  //GUBUN_2             신고서구분_확정
            pXLColumn[2] = 22;  //GUBUN_3             신고서구분_기한후과세표준
            pXLColumn[3] = 22;  //GUBUN_4             신고서구분_영세율등조기환급
            pXLColumn[4] = 8;   //FISCAL_YEAR         신고기간_출력용
            pXLColumn[5] = 10;  //TITLE_2             상호
            pXLColumn[6] = 22;  //TITLE_3             성명
            pXLColumn[7] = 31;  //TITLE_4_01==========출력용 사업자등록번호_01_1장
            pXLColumn[8] = 32;  //TITLE_4_02          출력용 사업자등록번호_02_1장
            pXLColumn[9] = 33;  //TITLE_4_03          출력용 사업자등록번호_03_1장
            pXLColumn[10] = 35;  //TITLE_4_04          출력용 사업자등록번호_04_1장
            pXLColumn[11] = 36;  //TITLE_4_05          출력용 사업자등록번호_05_1장
            pXLColumn[12] = 38;  //TITLE_4_06          출력용 사업자등록번호_06_1장
            pXLColumn[13] = 39;  //TITLE_4_07          출력용 사업자등록번호_07_1장
            pXLColumn[14] = 40;  //TITLE_4_08          출력용 사업자등록번호_08_1장
            pXLColumn[15] = 41;  //TITLE_4_09          출력용 사업자등록번호_09_1장
            pXLColumn[16] = 42;  //TITLE_4_10==========출력용 사업자등록번호_10_1장

            pXLColumn[17] = 9;   //TITLE_4_01          출력용 사업자등록번호_01_2장
            pXLColumn[18] = 10;  //TITLE_4_02          출력용 사업자등록번호_02_2장
            pXLColumn[19] = 11;  //TITLE_4_03          출력용 사업자등록번호_03_2장
            pXLColumn[20] = 13;  //TITLE_4_04          출력용 사업자등록번호_04_2장
            pXLColumn[21] = 14;  //TITLE_4_05          출력용 사업자등록번호_05_2장
            pXLColumn[22] = 16;  //TITLE_4_06          출력용 사업자등록번호_06_2장
            pXLColumn[23] = 17;  //TITLE_4_07          출력용 사업자등록번호_07_2장
            pXLColumn[24] = 18;  //TITLE_4_08          출력용 사업자등록번호_08_2장
            pXLColumn[25] = 19;  //TITLE_4_09          출력용 사업자등록번호_09_2장
            pXLColumn[26] = 20;  //TITLE_4_10==========출력용 사업자등록번호_10_2장
            pXLColumn[27] = 10;  //TITLE_5             법인등록번호
            pXLColumn[28] = 28;  //TITLE_6             사업장전화
            pXLColumn[29] = 33;  //TITLE_7             주소지전화
            pXLColumn[30] = 38;  //TITLE_8             휴대전화
            pXLColumn[31] = 10;  //TITLE_9             사업장주소
            pXLColumn[32] = 33;  //TITLE_10            전자우편주소
            pXLColumn[33] = 17;  //DEAL_BANK           거래은행
            pXLColumn[34] = 24;  //DEAL_BRANCH         거래지점
            pXLColumn[35] = 34;  //ACC_NO              계좌번호
            pXLColumn[36] = 17;  //CLOSURE_DATE_PRINT  출력용 폐업일
            pXLColumn[37] = 30;  //CLOSURE_REASON      폐업사유
            pXLColumn[38] = 26;  //TITLE_14_PRINT      출력용 작성일자
            pXLColumn[39] = 31;  //TITLE_15            신고인
            pXLColumn[40] = 26;  //TITLE_16            세무서
            pXLColumn[41] = 21;  //COL1_1              과세_세금계산서발급분_금액
            pXLColumn[42] = 34;  //COL1_2              과세_세금계산서발급분_세액
            pXLColumn[43] = 21;  //COL2_1              과세_매입자발행세금계산서_금액
            pXLColumn[44] = 34;  //COL2_2              과세_매입자발행세금계산서_세액
            pXLColumn[45] = 21;  //COL3_1              과세_신용카드_현금영수증발행분_금액
            pXLColumn[46] = 34;  //COL3_2              과세_신용카드_현금영수증발행분_세액
            pXLColumn[47] = 21;  //COL4_1              과세_기타_금액
            pXLColumn[48] = 34;  //COL4_2              과세_기타_세액
            pXLColumn[49] = 21;  //COL5_1              영세율_세금계산서발급분_금액
            pXLColumn[50] = 21;  //COL6_1              영세율_기타_금액
            pXLColumn[51] = 21;  //COL7_1              예정신고누락분_금액
            pXLColumn[52] = 34;  //COL7_2              예정신고누락분_세액
            pXLColumn[53] = 34;  //COL8_2              대손세액가감_세액
            pXLColumn[54] = 21;  //COL9_1              합계_금액
            pXLColumn[55] = 34;  //COL9_2              합계_세액
            pXLColumn[56] = 21;  //COL10_1             매입_일반매입_금액
            pXLColumn[57] = 34;  //COL10_2             매입_일반매입_세액
            pXLColumn[58] = 21;  //COL11_1             매입_고정자산매입_금액
            pXLColumn[59] = 34;  //COL11_2             매입_고장자산매입_세액
            pXLColumn[60] = 21;  //COL12_1             매입_예정신고누락분_금액
            pXLColumn[61] = 34;  //COL12_2             매입_예정신고누락분_세액
            pXLColumn[62] = 21;  //COL13_1             매입_매입자발행세금계산서_금액
            pXLColumn[63] = 34;  //COL13_2             매입_매입자발행세금계산서_세액
            pXLColumn[64] = 21;  //COL14_1             매입_기타공제매입세액_금액
            pXLColumn[65] = 34;  //COL14_2             매입_기타공제매입세액_세액
            pXLColumn[66] = 21;  //COL15_1             매입_합계_금액
            pXLColumn[67] = 34;  //COL15_2             매입_합계_세액
            pXLColumn[68] = 21;  //COL16_1             매입_공제받지못할매입세액_금액
            pXLColumn[69] = 34;  //COL16_2             매입_공제받지못할매입세액_세액
            pXLColumn[70] = 21;  //COL17_1             매입_차감계_금액
            pXLColumn[71] = 34;  //COL17_2             매입_차감계_세액
            pXLColumn[72] = 34;  //COL_DA              납부세액
            pXLColumn[73] = 34;  //COL18_2             기타경감공제세액
            pXLColumn[74] = 34;  //COL19_2             신용카드매출전표등발행공제등
            pXLColumn[75] = 34;  //COL20_2             경감공제_합계
            pXLColumn[76] = 34;  //COL21_2             예정신고미환급세액
            pXLColumn[77] = 34;  //COL22_2             예정고지세액
            pXLColumn[78] = 34;  //COL23_2             금지금_매입자_납부특례_기납부세액
            pXLColumn[79] = 34;  //COL24_2             가산세액계
            pXLColumn[80] = 34;  //COL25               차가감하여납부할세액
            pXLColumn[81] = 3;   //COL26_1             과세표준_업태1
            pXLColumn[82] = 7;   //COL26_2             과세표준_종목1
            pXLColumn[83] = 22;  //COL26_3             과세표준_금액1
            pXLColumn[84] = 3;   //COL27_1             과세표준_업태2
            pXLColumn[85] = 7;   //COL27_2             과세표준_종목2
            pXLColumn[86] = 22;  //COL27_3             과세표준_금액2
            pXLColumn[87] = 3;   //COL28_1             과세표준_업태3
            pXLColumn[88] = 7;   //COL28_2             과세표준_종목3
            pXLColumn[89] = 22;  //COL28_3             과세표준_금액3
            pXLColumn[90] = 3;   //COL29_1             과세표준_업태4
            pXLColumn[91] = 7;   //COL29_2             과세표준_종목4
            pXLColumn[92] = 22;  //COL29_3             과세표준_금액4
            pXLColumn[93] = 22;  //COL30               과세표준_합계
            pXLColumn[94] = 16;  //TITLE_13_1==========출력용 업종코드_01_1장
            pXLColumn[95] = 17;  //TITLE_13_2          출력용 업종코드_02_1장
            pXLColumn[96] = 18;  //TITLE_13_3          출력용 업종코드_03_1장
            pXLColumn[97] = 19;  //TITLE_13_4          출력용 업종코드_04_1장
            pXLColumn[98] = 20;  //TITLE_13_5          출력용 업종코드_05_1장
            pXLColumn[99] = 21;  //TITLE_13_6==========출력용 업종코드_06_1장
            pXLColumn[100] = 21;  //COL31_1             예정신고_매출_과세_세금계산서_금액
            pXLColumn[101] = 34;  //COL31_2             예정신고_매출_과세_세금계산서_세액
            pXLColumn[102] = 21;  //COL32_1             예정신고_매출_과세_기타_금액
            pXLColumn[103] = 34;  //COL32_2             예정신고_매출_과세_기타_세액
            pXLColumn[104] = 21;  //COL33_1             예정신고_매출_영세율_세금계산서
            pXLColumn[105] = 21;  //COL34_1             예정신고_매출_영세율_기타
            pXLColumn[106] = 21;  //COL35_1             예정신고_매출_합계_금액
            pXLColumn[107] = 34;  //COL35_2             예정신고_매출_합계_세액
            pXLColumn[108] = 21;  //COL36_1             예정신고_매입_세금계산서_금액
            pXLColumn[109] = 34;  //COL36_2             예정신고_매입_세금계산서_세액
            pXLColumn[110] = 21;  //COL37_1             예정신고_매입_기타공제매입세액_금액
            pXLColumn[111] = 34;  //COL37_2             예정신고_매입_기타공제매입세액_세액
            pXLColumn[112] = 21;  //COL38_1             예정신고_매입_합계_금액
            pXLColumn[113] = 34;  //COL38_2             예정신고_매입_합계_세액
            pXLColumn[114] = 21;  //COL39_1             기타공제_신용카드_일반매입_금액
            pXLColumn[115] = 34;  //COL39_2             기타공제_신용카드_일반매입_세액
            pXLColumn[116] = 21;  //COL40_1             기타공제_신용카드_고정자산매입_금액
            pXLColumn[117] = 34;  //COL40_2             기타공제_신용카드_고정자산매입_세액
            pXLColumn[118] = 21;  //COL41_1             기타공제_의제매입세액_금액
            pXLColumn[119] = 34;  //COL41_2             기타공제_의제매입세액_세액
            pXLColumn[120] = 21;  //COL42_1             기타공제_재활용폐자원등매입세액_금액
            pXLColumn[121] = 34;  //COL42_2             기타공제_재활용폐자원등매입세액_세액
            pXLColumn[122] = 21;  //COL43_1             기타공제_고금의제매입세액_금액
            pXLColumn[123] = 34;  //COL43_2             기타공제_고금의제매입세액_세액
            pXLColumn[124] = 34;  //COL44_2             기타공제_과세사업전환매입세액_세액
            pXLColumn[125] = 34;  //COL45_2             기타공제_재고매입세액_세액
            pXLColumn[126] = 34;  //COL46_2             기타공제_변제대손세액_세액
            pXLColumn[127] = 21;  //COL47_1             기타공제_합계_금액
            pXLColumn[128] = 34;  //COL47_2             기타공제_헙계_세액
            pXLColumn[129] = 21;  //COL48_1             공제받지못할매입세액_공제받지못할_금액
            pXLColumn[130] = 34;  //COL48_2             공제받지못할매입세액_공제받지못할_세액
            pXLColumn[131] = 21;  //COL49_1             공제받지못할매입세액_공통매입세액면세_금액
            pXLColumn[132] = 34;  //COL49_2             공제받지못할매입세액_공통매입세액면세_세액
            pXLColumn[133] = 21;  //COL50_1             공제받지못할매입세액_대손처분받은세액_금액
            pXLColumn[134] = 34;  //COL50_2             공제받지못할매입세액_대손처분받은세액_세액
            pXLColumn[135] = 21;  //COL51_1             공제받지못할매입세액_합계_금액
            pXLColumn[136] = 34;  //COL51_2             공제받지못할매입세액_합계_세액

            pXLColumn[137] = 34;  //COL52_2             기탁경감공제세액_전자신고세액공제_세액
            pXLColumn[138] = 34;  //COL53_2             기타경감공제세액_전자세금계산서발급세액공제_세액
            pXLColumn[139] = 34;  //COL54_2             기타경감공제세액_택시운송사업자경감세액_세액
            pXLColumn[140] = 34;  //COL55_2             기타경감공제세액_현금영수증사업자세액공제_세액
            pXLColumn[141] = 34;  //COL56_2             기타경감공제세액_기타_세액
            pXLColumn[142] = 34;  //COL57_2             기타경감공제세액_합계_세액
            pXLColumn[143] = 21;  //COL58_1             가산세명세_사업자미등록등_금액
            pXLColumn[144] = 34;  //COL58_2             가산세명세_사업자미등록등_세액
            pXLColumn[145] = 21;  //COL59_1             가산세명세_지연발급등_금액
            pXLColumn[146] = 34;  //COL59_2             가산세명세_지연발급등_세액
            pXLColumn[147] = 21;  //COL60_1             가산세명세_미발급등_금액
            pXLColumn[148] = 34;  //COL60_2             가산세명세_미발급등_세액
            pXLColumn[149] = 21;  //COL61_1             가산세명세_다음달15일이후_금액
            pXLColumn[150] = 34;  //COL61_2             가산세명세_다음달15일이후_세액
            pXLColumn[151] = 21;  //COL62_1             가산세명세_과세기간다음달15일이후_금액
            pXLColumn[152] = 34;  //COL62_2             가산세명세_과세기간다음달15일이후_세액
            pXLColumn[153] = 21;  //COL63_1             가산세명세_세금계산서합계표제출불성실_금액
            pXLColumn[154] = 34;  //COL63_2             가산세명세_세금계산서합계표제출불성실_세액
            pXLColumn[155] = 21;  //COL64_1             가산세명세_신고불성실_금액
            pXLColumn[156] = 34;  //COL64_2             가산세명세_신고불성실_세액
            pXLColumn[157] = 21;  //COL65_1             가산세명세_납부불성싱_금액
            pXLColumn[158] = 34;  //COL65_2             가산세명세_납부불성실_세액
            pXLColumn[159] = 21;  //COL66_1             가산세명세_영세율과세표준신고불성실_금액
            pXLColumn[160] = 34;  //COL66_2             가산세명세_영세율과세표준신고불성실_세액
            pXLColumn[161] = 21;  //COL67_1             가산세명세_현금매출명세서미제출등_금액
            pXLColumn[162] = 34;  //COL67_2             가산세명세_현금매출명세서미제출등_세액
            pXLColumn[163] = 34;  //COL68_2             가산세명세_합계_세액
            pXLColumn[164] = 9;   //COL69_1             면세사업수입금액_업태1
            pXLColumn[165] = 17;  //COL69_2             면세사업수입금액_종목1
            pXLColumn[166] = 34;  //COL69_3             면세사업수입금액_금액1
            pXLColumn[167] = 9;   //COL70_1             면세사업수입금액_업태2
            pXLColumn[168] = 17;  //COL70_2             면세사업수입금액_종목2
            pXLColumn[169] = 34;  //COL70_3             면세사업수입금액_금액2
            pXLColumn[170] = 9;   //COL71_1             면세사업수입금액_업태3
            pXLColumn[171] = 17;  //COL71_2             면세사업수입금액_종목3
            pXLColumn[172] = 34;  //COL71_3             면세사업수입금액_금액3
            pXLColumn[173] = 34;  //COL72               면세사업수입금액_합계
            pXLColumn[174] = 28;  //TITLE_13_1==========출력용 업종코드_01_2장
            pXLColumn[175] = 29;  //TITLE_13_2          출력용 업종코드_02_2장
            pXLColumn[176] = 30;  //TITLE_13_3          출력용 업종코드_03_2장
            pXLColumn[177] = 31;  //TITLE_13_4          출력용 업종코드_04_2장
            pXLColumn[178] = 32;  //TITLE_13_5          출력용 업종코드_05_2장
            pXLColumn[179] = 33;  //TITLE_13_6==========출력용 업종코드_06_2장
            pXLColumn[180] = 17;  //COL73               계산서발급금액
            pXLColumn[181] = 17;  //COL74               계산서수취금액

            pXLColumn[182] = 34;  //경감공제세액 - 원산지확인서 발급공제세액
            pXLColumn[183] = 21;  //가산세명세 - 세금계산서 지연수취금액
            pXLColumn[184] = 34;  //가산세명세 - 세금계산서 지연수취세액

            //2031년1기예정 추가 //
            pXLColumn[185] = 21;  //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
            pXLColumn[186] = 34;  //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
            pXLColumn[187] = 21;  //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
            pXLColumn[188] = 34;  //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
            pXLColumn[189] = 21;  //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
            pXLColumn[190] = 34;  //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
            pXLColumn[191] = 21;  //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
            pXLColumn[192] = 34;  //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
            pXLColumn[193] = 21;  //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
            pXLColumn[194] = 34;  //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
            pXLColumn[195] = 21;  //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
            pXLColumn[196] = 34;  //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 

            pXLColumn[197] = 34;  //총괄납부사업자 납부할 세액  

            //2014.1기 예정 추가 
            pXLColumn[198] = 12;                    //과세표준1 생산요소
            pXLColumn[199] = 12;                    //과세표준2 생산요소 
            pXLColumn[200] = 12;                    //과세표준3 생산요소 
            pXLColumn[201] = 12;                    //과세표준4 생산요소 
            pXLColumn[202] = 34;                    //사업양수자의 대리납부 기납부세액 
            pXLColumn[203] = 34;                    //매입자 납부특례 기납부세액 
            pXLColumn[204] = 34;                    //외국인 관광객에 대한 환급세액 
            pXLColumn[205] = 21;                    //매입자 납부특례 거래계좌 미사용 AMT 
            pXLColumn[206] = 34;                    //매입자 납부특례 거래계좌 미사용 VAT
            pXLColumn[207] = 21;                    //매입자 납부특례 거래계좌 지연입금 AMT 
            pXLColumn[208] = 34;                    //매입자 납부특례 거래계좌 지연입금 VAT 
            pXLColumn[209] = 34;                    //수출기업 수입분 납부유예 VAT 

            pXLColumn[210] = 34;  //신용카드업자가 대리납부 기납부세액
            pXLColumn[211] = 34;  //소규모 개인사업장 부가가치세 감면세액
            pXLColumn[212] = 34;  //대리납부 세액공제
            pXLColumn[213] = 12;  //영세율상호주의 적용여부
            pXLColumn[214] = 21;  //영세율상호주의 적용구분
            pXLColumn[215] = 30;  //영세율상호주의 업종
            pXLColumn[216] = 40;  //영세율상호주의 국가 
        }

        #endregion;

        #region ----- IsConvert Methods -----

        private bool IsConvertString(object pObject, out string pConvertString)
        {
            bool vIsConvert = false;
            pConvertString = string.Empty;

            try
            {
                if (pObject != null)
                {
                    vIsConvert = pObject is string;
                    if (vIsConvert == true)
                    {
                        pConvertString = pObject as string;
                    }
                }

            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mAppInterface.OnAppMessageEvent(mMessageError);
                System.Windows.Forms.Application.DoEvents();
            }

            return vIsConvert;
        }

        private bool IsConvertNumber(object pObject, out decimal pConvertDecimal)
        {
            bool vIsConvert = false;
            pConvertDecimal = 0m;

            try
            {
                if (pObject != null)
                {
                    vIsConvert = pObject is decimal;
                    if (vIsConvert == true)
                    {
                        decimal vIsConvertNum = (decimal)pObject;
                        pConvertDecimal = vIsConvertNum;
                    }
                }

            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mAppInterface.OnAppMessageEvent(mMessageError);
                System.Windows.Forms.Application.DoEvents();
            }

            return vIsConvert;
        }

        private bool IsConvertDate(object pObject, out System.DateTime pConvertDateTimeShort)
        {
            bool vIsConvert = false;
            pConvertDateTimeShort = new System.DateTime();

            try
            {
                if (pObject != null)
                {
                    vIsConvert = pObject is System.DateTime;
                    if (vIsConvert == true)
                    {
                        System.DateTime vDateTime = (System.DateTime)pObject;
                        pConvertDateTimeShort = vDateTime;
                    }
                }
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mAppInterface.OnAppMessageEvent(mMessageError);
                System.Windows.Forms.Application.DoEvents();
            }

            return vIsConvert;
        }

        #endregion;

        #region ----- XL Write Method ----

        private int XL_WRITE(System.Data.DataRow pRow, int[] pGDColumn, int[] pXLColumn)
        {
            int vXLine = 2; //엑셀에 내용이 표시되는 행 번호

            int vAddLine_01 = 52; //사업자등록번호_2장
            int vAddLine_02 = 28; //거래은행_1장
            int vAddLine_03 = 34; //신고인_1장

            int vGDColumnIndex = 0;
            int vXLColumnIndex = 0;

            object vObject = null;
            string vConvertString = string.Empty;
            decimal vConvertDecimal = 0m;
            bool IsConvert = false;
            bool IsBUSINESS_ITEM_CODE = false;

            try
            {
                mPrinting.XLActiveSheet("DESTINATION");

                // GUBUN_1      신고서구분_예정
                vGDColumnIndex = pGDColumn[0];
                vXLColumnIndex = pXLColumn[0];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // GUBUN_2      신고서구분_확정
                vGDColumnIndex = pGDColumn[1];
                vXLColumnIndex = pXLColumn[1];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //3
                //-------------------------------------------------------------------

                // GUBUN_3      신고서구분_기한후과세표준
                vGDColumnIndex = pGDColumn[2];
                vXLColumnIndex = pXLColumn[2];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //4
                //-------------------------------------------------------------------

                // GUBUN_4      신고서구분_영세율등조기환급
                vGDColumnIndex = pGDColumn[3];
                vXLColumnIndex = pXLColumn[3];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //6
                //-------------------------------------------------------------------

                // FISCAL_YEAR  신고기간_출력용
                vGDColumnIndex = pGDColumn[4];
                vXLColumnIndex = pXLColumn[4];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //7
                //-------------------------------------------------------------------

                // TITLE_2            상호
                vGDColumnIndex = pGDColumn[5];
                vXLColumnIndex = pXLColumn[5];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_3            성명
                vGDColumnIndex = pGDColumn[6];
                vXLColumnIndex = pXLColumn[6];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[7];
                vXLColumnIndex = pXLColumn[7];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[8];
                vXLColumnIndex = pXLColumn[8];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[9];
                vXLColumnIndex = pXLColumn[9];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[10];
                vXLColumnIndex = pXLColumn[10];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[11];
                vXLColumnIndex = pXLColumn[11];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[12];
                vXLColumnIndex = pXLColumn[12];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[13];
                vXLColumnIndex = pXLColumn[13];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[14];
                vXLColumnIndex = pXLColumn[14];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[15];
                vXLColumnIndex = pXLColumn[15];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[16];
                vXLColumnIndex = pXLColumn[16];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[17];
                vXLColumnIndex = pXLColumn[17];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[18];
                vXLColumnIndex = pXLColumn[18];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[19];
                vXLColumnIndex = pXLColumn[19];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[20];
                vXLColumnIndex = pXLColumn[20];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[21];
                vXLColumnIndex = pXLColumn[21];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[22];
                vXLColumnIndex = pXLColumn[22];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[23];
                vXLColumnIndex = pXLColumn[23];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[24];
                vXLColumnIndex = pXLColumn[24];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[25];
                vXLColumnIndex = pXLColumn[25];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[26];
                vXLColumnIndex = pXLColumn[26];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //8
                //-------------------------------------------------------------------

                // TITLE_5            법인등록번호
                vGDColumnIndex = pGDColumn[27];
                vXLColumnIndex = pXLColumn[27];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //9
                //-------------------------------------------------------------------

                // TITLE_6            사업장전화
                vGDColumnIndex = pGDColumn[28];
                vXLColumnIndex = pXLColumn[28];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_7            주소지전화
                vGDColumnIndex = pGDColumn[29];
                vXLColumnIndex = pXLColumn[29];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_8            휴대전화
                vGDColumnIndex = pGDColumn[30];
                vXLColumnIndex = pXLColumn[30];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //10
                //-------------------------------------------------------------------

                // TITLE_9            사업장주소
                vGDColumnIndex = pGDColumn[31];
                vXLColumnIndex = pXLColumn[31];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_10           전자우편주소
                vGDColumnIndex = pGDColumn[32];
                vXLColumnIndex = pXLColumn[32];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //14
                //-------------------------------------------------------------------

                // DEAL_BANK          거래은행
                vGDColumnIndex = pGDColumn[33];
                vXLColumnIndex = pXLColumn[33];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 은행", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }

                // DEAL_BRANCH        거래지점
                vGDColumnIndex = pGDColumn[34];
                vXLColumnIndex = pXLColumn[34];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 지점", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }

                // ACC_NO             계좌번호
                vGDColumnIndex = pGDColumn[35];
                vXLColumnIndex = pXLColumn[35];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }

                // CLOSURE_DATE_PRINT 출력용 폐업일
                vGDColumnIndex = pGDColumn[36];
                vXLColumnIndex = pXLColumn[36];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 1), vXLColumnIndex, vConvertString);
                }

                // CLOSURE_REASON     폐업사유
                vGDColumnIndex = pGDColumn[37];
                vXLColumnIndex = pXLColumn[37];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 1), vXLColumnIndex, vConvertString);
                }

                // TITLE_14_PRINT     출력용 작성일자
                vGDColumnIndex = pGDColumn[38];
                vXLColumnIndex = pXLColumn[38];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_03), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_03), vXLColumnIndex, vConvertString);
                }

                // TITLE_15           신고인
                vGDColumnIndex = pGDColumn[39];
                vXLColumnIndex = pXLColumn[39];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 1), vXLColumnIndex, vConvertString);
                }

                // TITLE_16           세무서
                vGDColumnIndex = pGDColumn[40];
                vXLColumnIndex = pXLColumn[40];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 4), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 4), vXLColumnIndex, vConvertString);
                }

                // COL1_1             과세_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[41];
                vXLColumnIndex = pXLColumn[41];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL1_2             과세_세금계산서발급분_세액
                vGDColumnIndex = pGDColumn[42];
                vXLColumnIndex = pXLColumn[42];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //15
                //-------------------------------------------------------------------

                // COL2_1             과세_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[43];
                vXLColumnIndex = pXLColumn[43];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL2_2             과세_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[44];
                vXLColumnIndex = pXLColumn[44];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //16
                //-------------------------------------------------------------------

                // COL3_1             과세_신용카드_현금영수증발행분_금액
                vGDColumnIndex = pGDColumn[45];
                vXLColumnIndex = pXLColumn[45];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL3_2             과세_신용카드_현금영수증발행분_세액
                vGDColumnIndex = pGDColumn[46];
                vXLColumnIndex = pXLColumn[46];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //17
                //-------------------------------------------------------------------

                // COL4_1             과세_기타_금액
                vGDColumnIndex = pGDColumn[47];
                vXLColumnIndex = pXLColumn[47];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL4_2             과세_기타_세액
                vGDColumnIndex = pGDColumn[48];
                vXLColumnIndex = pXLColumn[48];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //18
                //-------------------------------------------------------------------

                // COL5_1             영세율_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[49];
                vXLColumnIndex = pXLColumn[49];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //19
                //-------------------------------------------------------------------

                // COL6_1             영세율_기타_금액
                vGDColumnIndex = pGDColumn[50];
                vXLColumnIndex = pXLColumn[50];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //20
                //-------------------------------------------------------------------

                // COL7_1             예정신고누락분_금액
                vGDColumnIndex = pGDColumn[51];
                vXLColumnIndex = pXLColumn[51];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL7_2             예정신고누락분_세액
                vGDColumnIndex = pGDColumn[52];
                vXLColumnIndex = pXLColumn[52];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //21
                //-------------------------------------------------------------------

                // COL8_2             대손세액가감_세액
                vGDColumnIndex = pGDColumn[53];
                vXLColumnIndex = pXLColumn[53];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //22
                //-------------------------------------------------------------------

                // COL9_1             합계_금액
                vGDColumnIndex = pGDColumn[54];
                vXLColumnIndex = pXLColumn[54];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL9_2             합계_세액
                vGDColumnIndex = pGDColumn[55];
                vXLColumnIndex = pXLColumn[55];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //23
                //-------------------------------------------------------------------

                // COL10_1            매입_일반매입_금액
                vGDColumnIndex = pGDColumn[56];
                vXLColumnIndex = pXLColumn[56];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL10_2            매입_일반매입_세액
                vGDColumnIndex = pGDColumn[57];
                vXLColumnIndex = pXLColumn[57];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //24
                //-------------------------------------------------------------------

                // COL11_1            매입_고정자산매입_금액
                vGDColumnIndex = pGDColumn[58];
                vXLColumnIndex = pXLColumn[58];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL11_2            매입_고장자산매입_세액
                vGDColumnIndex = pGDColumn[59];
                vXLColumnIndex = pXLColumn[59];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //25
                //-------------------------------------------------------------------

                // COL12_1            매입_예정신고누락분_금액
                vGDColumnIndex = pGDColumn[60];
                vXLColumnIndex = pXLColumn[60];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL12_2            매입_예정신고누락분_세액
                vGDColumnIndex = pGDColumn[61];
                vXLColumnIndex = pXLColumn[61];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //26
                //-------------------------------------------------------------------

                // COL13_1            매입_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[62];
                vXLColumnIndex = pXLColumn[62];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL13_2            매입_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[63];
                vXLColumnIndex = pXLColumn[63];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //27
                //-------------------------------------------------------------------

                // COL14_1            매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[64];
                vXLColumnIndex = pXLColumn[64];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL14_2            매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[65];
                vXLColumnIndex = pXLColumn[65];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //28
                //-------------------------------------------------------------------

                // COL15_1            매입_합계_금액
                vGDColumnIndex = pGDColumn[66];
                vXLColumnIndex = pXLColumn[66];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL15_2            매입_합계_세액
                vGDColumnIndex = pGDColumn[67];
                vXLColumnIndex = pXLColumn[67];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //29
                //-------------------------------------------------------------------

                // COL16_1            매입_공제받지못할매입세액_금액
                vGDColumnIndex = pGDColumn[68];
                vXLColumnIndex = pXLColumn[68];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL16_2            매입_공제받지못할매입세액_세액
                vGDColumnIndex = pGDColumn[69];
                vXLColumnIndex = pXLColumn[69];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //30
                //-------------------------------------------------------------------

                // COL17_1            매입_차감계_금액
                vGDColumnIndex = pGDColumn[70];
                vXLColumnIndex = pXLColumn[70];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL17_2            매입_차감계_세액
                vGDColumnIndex = pGDColumn[71];
                vXLColumnIndex = pXLColumn[71];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //31
                //-------------------------------------------------------------------

                // COL_DA             납부세액
                vGDColumnIndex = pGDColumn[72];
                vXLColumnIndex = pXLColumn[72];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //32
                //-------------------------------------------------------------------

                // COL18_2            기타경감공제세액
                vGDColumnIndex = pGDColumn[73];
                vXLColumnIndex = pXLColumn[73];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //33
                //-------------------------------------------------------------------

                // COL19_2            신용카드매출전표등발행공제등
                vGDColumnIndex = pGDColumn[74];
                vXLColumnIndex = pXLColumn[74];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //34
                //-------------------------------------------------------------------

                // COL20_2            경감공제_합계
                vGDColumnIndex = pGDColumn[75];
                vXLColumnIndex = pXLColumn[75];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //35
                //-------------------------------------------------------------------

                // COL21_2            예정신고미환급세액
                vGDColumnIndex = pGDColumn[76];
                vXLColumnIndex = pXLColumn[76];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //36
                //-------------------------------------------------------------------

                // COL22_2            예정고지세액
                vGDColumnIndex = pGDColumn[77];
                vXLColumnIndex = pXLColumn[77];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //37
                //-------------------------------------------------------------------

                // COL23_2            금지금_매입자_납부특례_기납부세액
                vGDColumnIndex = pGDColumn[78];
                vXLColumnIndex = pXLColumn[78];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //38
                //-------------------------------------------------------------------

                // COL24_2            가산세액계
                vGDColumnIndex = pGDColumn[79];
                vXLColumnIndex = pXLColumn[79];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //39
                //-------------------------------------------------------------------

                // COL25              차가감하여납부할세액
                vGDColumnIndex = pGDColumn[80];
                vXLColumnIndex = pXLColumn[80];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //40
                //-------------------------------------------------------------------

                // TOT_REAL_VAT_AMOUNT              총괄납부사업자 납부할 세액 
                vGDColumnIndex = pGDColumn[197];
                vXLColumnIndex = pXLColumn[197];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 9; //49
                //-------------------------------------------------------------------

                // COL26_1            과세표준_업태1
                vGDColumnIndex = pGDColumn[81];
                vXLColumnIndex = pXLColumn[81];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL26_2            과세표준_종목1
                vGDColumnIndex = pGDColumn[82];
                vXLColumnIndex = pXLColumn[82];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////

                // COL26_3            과세표준_금액1
                vGDColumnIndex = pGDColumn[83];
                vXLColumnIndex = pXLColumn[83];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //50
                //-------------------------------------------------------------------

                // COL27_1            과세표준_업태2
                vGDColumnIndex = pGDColumn[84];
                vXLColumnIndex = pXLColumn[84];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL27_2            과세표준_종목2
                vGDColumnIndex = pGDColumn[85];
                vXLColumnIndex = pXLColumn[85];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL27_3            과세표준_금액2
                vGDColumnIndex = pGDColumn[86];
                vXLColumnIndex = pXLColumn[86];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //51
                //-------------------------------------------------------------------

                // COL28_1            과세표준_업태3
                vGDColumnIndex = pGDColumn[87];
                vXLColumnIndex = pXLColumn[87];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL28_2            과세표준_종목3
                vGDColumnIndex = pGDColumn[88];
                vXLColumnIndex = pXLColumn[88];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL28_3            과세표준_금액3
                vGDColumnIndex = pGDColumn[89];
                vXLColumnIndex = pXLColumn[89];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //52
                //-------------------------------------------------------------------

                // COL29_1            과세표준_업태4
                vGDColumnIndex = pGDColumn[90];
                vXLColumnIndex = pXLColumn[90];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL29_2            과세표준_종목4
                vGDColumnIndex = pGDColumn[91];
                vXLColumnIndex = pXLColumn[91];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL29_3            과세표준_금액4
                vGDColumnIndex = pGDColumn[92];
                vXLColumnIndex = pXLColumn[92];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //53
                //-------------------------------------------------------------------

                // COL30              과세표준_합계
                vGDColumnIndex = pGDColumn[93];
                vXLColumnIndex = pXLColumn[93];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 9; //62
                //-------------------------------------------------------------------

                // COL31_1  예정신고_매출_과세_세금계산서_금액
                vGDColumnIndex = pGDColumn[100];
                vXLColumnIndex = pXLColumn[100];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL31_2  예정신고_매출_과세_세금계산서_세액
                vGDColumnIndex = pGDColumn[101];
                vXLColumnIndex = pXLColumn[101];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //63
                //-------------------------------------------------------------------

                // COL32_1  예정신고_매출_과세_기타_금액
                vGDColumnIndex = pGDColumn[102];
                vXLColumnIndex = pXLColumn[102];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL32_2  예정신고_매출_과세_기타_세액
                vGDColumnIndex = pGDColumn[103];
                vXLColumnIndex = pXLColumn[103];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //64
                //-------------------------------------------------------------------

                // COL33_1  예정신고_매출_영세율_세금계산서
                vGDColumnIndex = pGDColumn[104];
                vXLColumnIndex = pXLColumn[104];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //65
                //-------------------------------------------------------------------

                // COL34_1  예정신고_매출_영세율_기타
                vGDColumnIndex = pGDColumn[105];
                vXLColumnIndex = pXLColumn[105];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //66
                //-------------------------------------------------------------------

                // COL35_1  예정신고_매출_합계_금액
                vGDColumnIndex = pGDColumn[106];
                vXLColumnIndex = pXLColumn[106];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL35_2  예정신고_매출_합계_세액
                vGDColumnIndex = pGDColumn[107];
                vXLColumnIndex = pXLColumn[107];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //67
                //-------------------------------------------------------------------

                // COL36_1  예정신고_매입_세금계산서_금액
                vGDColumnIndex = pGDColumn[108];
                vXLColumnIndex = pXLColumn[108];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL36_2  예정신고_매입_세금계산서_세액
                vGDColumnIndex = pGDColumn[109];
                vXLColumnIndex = pXLColumn[109];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //68
                //-------------------------------------------------------------------

                // COL37_1  예정신고_매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[110];
                vXLColumnIndex = pXLColumn[110];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL37_2  예정신고_매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[111];
                vXLColumnIndex = pXLColumn[111];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //69
                //-------------------------------------------------------------------

                // COL38_1  예정신고_매입_합계_금액
                vGDColumnIndex = pGDColumn[112];
                vXLColumnIndex = pXLColumn[112];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL38_2  예정신고_매입_합계_세액
                vGDColumnIndex = pGDColumn[113];
                vXLColumnIndex = pXLColumn[113];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //72
                //-------------------------------------------------------------------

                // COL39_1  기타공제_신용카드_일반매입_금액
                vGDColumnIndex = pGDColumn[114];
                vXLColumnIndex = pXLColumn[114];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL39_2  기타공제_신용카드_일반매입_세액
                vGDColumnIndex = pGDColumn[115];
                vXLColumnIndex = pXLColumn[115];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //73
                //-------------------------------------------------------------------

                // COL40_1  기타공제_신용카드_고정자산매입_금액
                vGDColumnIndex = pGDColumn[116];
                vXLColumnIndex = pXLColumn[116];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL40_2  기타공제_신용카드_고정자산매입_세액
                vGDColumnIndex = pGDColumn[117];
                vXLColumnIndex = pXLColumn[117];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //74
                //-------------------------------------------------------------------

                // COL41_1  기타공제_의제매입세액_금액
                vGDColumnIndex = pGDColumn[118];
                vXLColumnIndex = pXLColumn[118];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL41_2  기타공제_의제매입세액_세액
                vGDColumnIndex = pGDColumn[119];
                vXLColumnIndex = pXLColumn[119];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //75
                //-------------------------------------------------------------------

                // COL42_1  기타공제_재활용폐자원등매입세액_금액
                vGDColumnIndex = pGDColumn[120];
                vXLColumnIndex = pXLColumn[120];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL42_2  기타공제_재활용폐자원등매입세액_세액
                vGDColumnIndex = pGDColumn[121];
                vXLColumnIndex = pXLColumn[121];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //76
                //-------------------------------------------------------------------

                // COL43_1  기타공제_고금의제매입세액_금액
                vGDColumnIndex = pGDColumn[122];
                vXLColumnIndex = pXLColumn[122];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL43_2  기타공제_고금의제매입세액_세액
                vGDColumnIndex = pGDColumn[123];
                vXLColumnIndex = pXLColumn[123];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //77
                //-------------------------------------------------------------------

                // COL44_2  기타공제_과세사업전환매입세액_세액
                vGDColumnIndex = pGDColumn[124];
                vXLColumnIndex = pXLColumn[124];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //78
                //-------------------------------------------------------------------

                // COL45_2  기타공제_재고매입세액_세액
                vGDColumnIndex = pGDColumn[125];
                vXLColumnIndex = pXLColumn[125];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //79
                //-------------------------------------------------------------------

                // COL46_2  기타공제_변제대손세액_세액
                vGDColumnIndex = pGDColumn[126];
                vXLColumnIndex = pXLColumn[126];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //80
                //-------------------------------------------------------------------

                // COL47_1  기타공제_합계_금액
                vGDColumnIndex = pGDColumn[127];
                vXLColumnIndex = pXLColumn[127];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL47_2  기타공제_헙계_세액
                vGDColumnIndex = pGDColumn[128];
                vXLColumnIndex = pXLColumn[128];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //83
                //-------------------------------------------------------------------

                // COL48_1  공제받지못할매입세액_공제받지못할_금액
                vGDColumnIndex = pGDColumn[129];
                vXLColumnIndex = pXLColumn[129];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL48_2  공제받지못할매입세액_공제받지못할_세액
                vGDColumnIndex = pGDColumn[130];
                vXLColumnIndex = pXLColumn[130];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //84
                //-------------------------------------------------------------------

                // COL49_1  공제받지못할매입세액_공통매입세액면세_금액
                vGDColumnIndex = pGDColumn[131];
                vXLColumnIndex = pXLColumn[131];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL49_2  공제받지못할매입세액_공통매입세액면세_세액
                vGDColumnIndex = pGDColumn[132];
                vXLColumnIndex = pXLColumn[132];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //85
                //-------------------------------------------------------------------

                // COL50_1  공제받지못할매입세액_대손처분받은세액_금액
                vGDColumnIndex = pGDColumn[133];
                vXLColumnIndex = pXLColumn[133];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL50_2  공제받지못할매입세액_대손처분받은세액_세액
                vGDColumnIndex = pGDColumn[134];
                vXLColumnIndex = pXLColumn[134];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //86
                //-------------------------------------------------------------------

                // COL51_1  공제받지못할매입세액_합계_금액
                vGDColumnIndex = pGDColumn[135];
                vXLColumnIndex = pXLColumn[135];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL51_2  공제받지못할매입세액_합계_세액
                vGDColumnIndex = pGDColumn[136];
                vXLColumnIndex = pXLColumn[136];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //89
                //-------------------------------------------------------------------

                // COL52_2  기탁경감공제세액_전자신고세액공제_세액
                vGDColumnIndex = pGDColumn[137];
                vXLColumnIndex = pXLColumn[137];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //90
                //-------------------------------------------------------------------

                // COL53_2  기타경감공제세액_전자세금계산서발급세액공제_세액
                vGDColumnIndex = pGDColumn[138];
                vXLColumnIndex = pXLColumn[138];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //91
                //-------------------------------------------------------------------

                // COL54_2  기타경감공제세액_택시운송사업자경감세액_세액
                vGDColumnIndex = pGDColumn[139];
                vXLColumnIndex = pXLColumn[139];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //92
                //-------------------------------------------------------------------

                // R_ORIGIN_PLACE_VAT  기타경감공제세액_원산지확인서 발급공제세액
                vGDColumnIndex = pGDColumn[182];
                vXLColumnIndex = pXLColumn[182];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //93
                //-------------------------------------------------------------------

                // COL55_2  기타경감공제세액_현금영수증사업자세액공제_세액
                vGDColumnIndex = pGDColumn[140];
                vXLColumnIndex = pXLColumn[140];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //94
                //-------------------------------------------------------------------

                // COL56_2  기타경감공제세액_기타_세액
                vGDColumnIndex = pGDColumn[141];
                vXLColumnIndex = pXLColumn[141];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //95
                //-------------------------------------------------------------------

                // COL57_2  기타경감공제세액_합계_세액
                vGDColumnIndex = pGDColumn[142];
                vXLColumnIndex = pXLColumn[142];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //98
                //-------------------------------------------------------------------

                // COL58_1  가산세명세_사업자미등록등_금액
                vGDColumnIndex = pGDColumn[143];
                vXLColumnIndex = pXLColumn[143];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL58_2  가산세명세_사업자미등록등_세액
                vGDColumnIndex = pGDColumn[144];
                vXLColumnIndex = pXLColumn[144];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //99
                //-------------------------------------------------------------------

                // COL59_1  가산세명세_지연발급등_금액
                vGDColumnIndex = pGDColumn[145];
                vXLColumnIndex = pXLColumn[145];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL59_2  가산세명세_지연발급등_세액
                vGDColumnIndex = pGDColumn[146];
                vXLColumnIndex = pXLColumn[146];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //100
                //-------------------------------------------------------------------

                // 가산세명세 - 세금계산서 지연수취금액
                vGDColumnIndex = pGDColumn[183];
                vXLColumnIndex = pXLColumn[183];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // 가산세명세 - 세금계산서 지연수취세액
                vGDColumnIndex = pGDColumn[184];
                vXLColumnIndex = pXLColumn[184];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //101
                //-------------------------------------------------------------------

                // COL60_1  가산세명세_미발급등_금액
                vGDColumnIndex = pGDColumn[147];
                vXLColumnIndex = pXLColumn[147];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL60_2  가산세명세_미발급등_세액
                vGDColumnIndex = pGDColumn[148];
                vXLColumnIndex = pXLColumn[148];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //102
                //-------------------------------------------------------------------

                // COL61_1  가산세명세_다음달15일이후_금액
                vGDColumnIndex = pGDColumn[149];
                vXLColumnIndex = pXLColumn[149];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL61_2  가산세명세_다음달15일이후_세액
                vGDColumnIndex = pGDColumn[150];
                vXLColumnIndex = pXLColumn[150];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //103
                //-------------------------------------------------------------------

                // COL62_1  가산세명세_과세기간다음달15일이후_금액
                vGDColumnIndex = pGDColumn[151];
                vXLColumnIndex = pXLColumn[151];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL62_2  가산세명세_과세기간다음달15일이후_세액
                vGDColumnIndex = pGDColumn[152];
                vXLColumnIndex = pXLColumn[152];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //104
                //-------------------------------------------------------------------

                // COL63_1  가산세명세_세금계산서합계표제출불성실_금액
                vGDColumnIndex = pGDColumn[153];
                vXLColumnIndex = pXLColumn[153];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL63_2  가산세명세_세금계산서합계표제출불성실_세액
                vGDColumnIndex = pGDColumn[154];
                vXLColumnIndex = pXLColumn[154];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //105
                //-------------------------------------------------------------------

                //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
                vGDColumnIndex = pGDColumn[185];
                vXLColumnIndex = pXLColumn[185];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
                vGDColumnIndex = pGDColumn[186];
                vXLColumnIndex = pXLColumn[186];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //106
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[187];
                vXLColumnIndex = pXLColumn[187];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[188];
                vXLColumnIndex = pXLColumn[188];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //107
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
                vGDColumnIndex = pGDColumn[189];
                vXLColumnIndex = pXLColumn[189];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
                vGDColumnIndex = pGDColumn[190];
                vXLColumnIndex = pXLColumn[190];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //108
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[191];
                vXLColumnIndex = pXLColumn[191];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[192];
                vXLColumnIndex = pXLColumn[192];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //109
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
                vGDColumnIndex = pGDColumn[193];
                vXLColumnIndex = pXLColumn[193];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
                vGDColumnIndex = pGDColumn[194];
                vXLColumnIndex = pXLColumn[194];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }


                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //110
                //-------------------------------------------------------------------

                //가산세명세_납부불성싱_금액
                vGDColumnIndex = pGDColumn[157];
                vXLColumnIndex = pXLColumn[157];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세_납부불성실_세액
                vGDColumnIndex = pGDColumn[158];
                vXLColumnIndex = pXLColumn[158];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //111
                //-------------------------------------------------------------------

                // COL66_1  가산세명세_영세율과세표준신고불성실_금액
                vGDColumnIndex = pGDColumn[159];
                vXLColumnIndex = pXLColumn[159];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL66_2  가산세명세_영세율과세표준신고불성실_세액
                vGDColumnIndex = pGDColumn[160];
                vXLColumnIndex = pXLColumn[160];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //112
                //-------------------------------------------------------------------

                // COL67_1  가산세명세_현금매출명세서미제출등_금액
                vGDColumnIndex = pGDColumn[161];
                vXLColumnIndex = pXLColumn[161];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL67_2  가산세명세_현금매출명세서미제출등_세액
                vGDColumnIndex = pGDColumn[162];
                vXLColumnIndex = pXLColumn[162];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //113
                //-------------------------------------------------------------------

                //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
                vGDColumnIndex = pGDColumn[195];
                vXLColumnIndex = pXLColumn[195];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 
                vGDColumnIndex = pGDColumn[196];
                vXLColumnIndex = pXLColumn[196];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //114
                //-------------------------------------------------------------------

                // COL68_2  가산세명세_합계_세액
                vGDColumnIndex = pGDColumn[163];
                vXLColumnIndex = pXLColumn[163];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //117
                //-------------------------------------------------------------------

                // COL69_1  면세사업수입금액_업태1
                vGDColumnIndex = pGDColumn[164];
                vXLColumnIndex = pXLColumn[164];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL69_2  면세사업수입금액_종목1
                vGDColumnIndex = pGDColumn[165];
                vXLColumnIndex = pXLColumn[165];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL69_3  면세사업수입금액_금액1
                vGDColumnIndex = pGDColumn[166];
                vXLColumnIndex = pXLColumn[166];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //118
                //-------------------------------------------------------------------

                // COL70_1  면세사업수입금액_업태2
                vGDColumnIndex = pGDColumn[167];
                vXLColumnIndex = pXLColumn[167];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL70_2  면세사업수입금액_종목2
                vGDColumnIndex = pGDColumn[168];
                vXLColumnIndex = pXLColumn[168];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL70_3  면세사업수입금액_금액2
                vGDColumnIndex = pGDColumn[169];
                vXLColumnIndex = pXLColumn[169];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //119
                //-------------------------------------------------------------------

                // COL71_1  면세사업수입금액_업태3
                vGDColumnIndex = pGDColumn[170];
                vXLColumnIndex = pXLColumn[170];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL71_2  면세사업수입금액_종목3
                vGDColumnIndex = pGDColumn[171];
                vXLColumnIndex = pXLColumn[171];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL71_3  면세사업수입금액_금액3
                vGDColumnIndex = pGDColumn[172];
                vXLColumnIndex = pXLColumn[172];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //120
                //-------------------------------------------------------------------

                // COL72    면세사업수입금액_합계
                vGDColumnIndex = pGDColumn[173];
                vXLColumnIndex = pXLColumn[173];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //122
                //-------------------------------------------------------------------

                // COL73    계산서발급금액
                vGDColumnIndex = pGDColumn[180];
                vXLColumnIndex = pXLColumn[180];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //123
                //-------------------------------------------------------------------

                // COL74    계산서수취금액
                vGDColumnIndex = pGDColumn[181];
                vXLColumnIndex = pXLColumn[181];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1;
                //-------------------------------------------------------------------
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mAppInterface.OnAppMessageEvent(mMessageError);
                System.Windows.Forms.Application.DoEvents();
            }

            return vXLine;
        }

        private int XL_WRITE_201401(System.Data.DataRow pRow, int[] pGDColumn, int[] pXLColumn)
        {
            int vXLine = 2; //엑셀에 내용이 표시되는 행 번호

            int vAddLine_01 = 54; //사업자등록번호_2장
            int vAddLine_02 = 30; //거래은행_1장
            int vAddLine_03 = 36; //신고인_1장

            int vGDColumnIndex = 0;
            int vXLColumnIndex = 0;

            object vObject = null;
            string vConvertString = string.Empty;
            decimal vConvertDecimal = 0m;
            bool IsConvert = false;
            bool IsBUSINESS_ITEM_CODE = false;

            try
            {
                mPrinting.XLActiveSheet("DESTINATION");

                // GUBUN_1      신고서구분_예정
                vGDColumnIndex = pGDColumn[0];
                vXLColumnIndex = pXLColumn[0];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // GUBUN_2      신고서구분_확정
                vGDColumnIndex = pGDColumn[1];
                vXLColumnIndex = pXLColumn[1];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //3
                //-------------------------------------------------------------------

                // GUBUN_3      신고서구분_기한후과세표준
                vGDColumnIndex = pGDColumn[2];
                vXLColumnIndex = pXLColumn[2];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //4
                //-------------------------------------------------------------------

                // GUBUN_4      신고서구분_영세율등조기환급
                vGDColumnIndex = pGDColumn[3];
                vXLColumnIndex = pXLColumn[3];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //6
                //-------------------------------------------------------------------

                // FISCAL_YEAR  신고기간_출력용
                vGDColumnIndex = pGDColumn[4];
                vXLColumnIndex = pXLColumn[4];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //7
                //-------------------------------------------------------------------

                // TITLE_2            상호
                vGDColumnIndex = pGDColumn[5];
                vXLColumnIndex = pXLColumn[5];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_3            성명
                vGDColumnIndex = pGDColumn[6];
                vXLColumnIndex = pXLColumn[6];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[7];
                vXLColumnIndex = pXLColumn[7];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[8];
                vXLColumnIndex = pXLColumn[8];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[9];
                vXLColumnIndex = pXLColumn[9];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[10];
                vXLColumnIndex = pXLColumn[10];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[11];
                vXLColumnIndex = pXLColumn[11];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[12];
                vXLColumnIndex = pXLColumn[12];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[13];
                vXLColumnIndex = pXLColumn[13];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[14];
                vXLColumnIndex = pXLColumn[14];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[15];
                vXLColumnIndex = pXLColumn[15];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[16];
                vXLColumnIndex = pXLColumn[16];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[17];
                vXLColumnIndex = pXLColumn[17];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[18];
                vXLColumnIndex = pXLColumn[18];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[19];
                vXLColumnIndex = pXLColumn[19];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[20];
                vXLColumnIndex = pXLColumn[20];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[21];
                vXLColumnIndex = pXLColumn[21];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[22];
                vXLColumnIndex = pXLColumn[22];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[23];
                vXLColumnIndex = pXLColumn[23];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[24];
                vXLColumnIndex = pXLColumn[24];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[25];
                vXLColumnIndex = pXLColumn[25];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[26];
                vXLColumnIndex = pXLColumn[26];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //8
                //-------------------------------------------------------------------

                // TITLE_5            법인등록번호
                vGDColumnIndex = pGDColumn[27];
                vXLColumnIndex = pXLColumn[27];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //9
                //-------------------------------------------------------------------

                // TITLE_6            사업장전화
                vGDColumnIndex = pGDColumn[28];
                vXLColumnIndex = pXLColumn[28];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_7            주소지전화
                vGDColumnIndex = pGDColumn[29];
                vXLColumnIndex = pXLColumn[29];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_8            휴대전화
                vGDColumnIndex = pGDColumn[30];
                vXLColumnIndex = pXLColumn[30];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //10
                //-------------------------------------------------------------------

                // TITLE_9            사업장주소
                vGDColumnIndex = pGDColumn[31];
                vXLColumnIndex = pXLColumn[31];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_10           전자우편주소
                vGDColumnIndex = pGDColumn[32];
                vXLColumnIndex = pXLColumn[32];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //14
                //-------------------------------------------------------------------

                // DEAL_BANK          거래은행
                vGDColumnIndex = pGDColumn[33];
                vXLColumnIndex = pXLColumn[33];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 은행", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }

                // DEAL_BRANCH        거래지점
                vGDColumnIndex = pGDColumn[34];
                vXLColumnIndex = pXLColumn[34];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 지점", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }

                // ACC_NO             계좌번호
                vGDColumnIndex = pGDColumn[35];
                vXLColumnIndex = pXLColumn[35];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }

                // CLOSURE_DATE_PRINT 출력용 폐업일
                vGDColumnIndex = pGDColumn[36];
                vXLColumnIndex = pXLColumn[36];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 1), vXLColumnIndex, vConvertString);
                }

                // CLOSURE_REASON     폐업사유
                vGDColumnIndex = pGDColumn[37];
                vXLColumnIndex = pXLColumn[37];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 1), vXLColumnIndex, vConvertString);
                }

                // TITLE_14_PRINT     출력용 작성일자
                vGDColumnIndex = pGDColumn[38];
                vXLColumnIndex = pXLColumn[38];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_03), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_03), vXLColumnIndex, vConvertString);
                }

                // TITLE_15           신고인
                vGDColumnIndex = pGDColumn[39];
                vXLColumnIndex = pXLColumn[39];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 1), vXLColumnIndex, vConvertString);
                }

                // TITLE_16           세무서
                vGDColumnIndex = pGDColumn[40];
                vXLColumnIndex = pXLColumn[40];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 4), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 4), vXLColumnIndex, vConvertString);
                }

                // COL1_1             과세_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[41];
                vXLColumnIndex = pXLColumn[41];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL1_2             과세_세금계산서발급분_세액
                vGDColumnIndex = pGDColumn[42];
                vXLColumnIndex = pXLColumn[42];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //15
                //-------------------------------------------------------------------

                // COL2_1             과세_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[43];
                vXLColumnIndex = pXLColumn[43];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL2_2             과세_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[44];
                vXLColumnIndex = pXLColumn[44];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //16
                //-------------------------------------------------------------------

                // COL3_1             과세_신용카드_현금영수증발행분_금액
                vGDColumnIndex = pGDColumn[45];
                vXLColumnIndex = pXLColumn[45];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL3_2             과세_신용카드_현금영수증발행분_세액
                vGDColumnIndex = pGDColumn[46];
                vXLColumnIndex = pXLColumn[46];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //17
                //-------------------------------------------------------------------

                // COL4_1             과세_기타_금액
                vGDColumnIndex = pGDColumn[47];
                vXLColumnIndex = pXLColumn[47];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL4_2             과세_기타_세액
                vGDColumnIndex = pGDColumn[48];
                vXLColumnIndex = pXLColumn[48];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //18
                //-------------------------------------------------------------------

                // COL5_1             영세율_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[49];
                vXLColumnIndex = pXLColumn[49];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //19
                //-------------------------------------------------------------------

                // COL6_1             영세율_기타_금액
                vGDColumnIndex = pGDColumn[50];
                vXLColumnIndex = pXLColumn[50];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //20
                //-------------------------------------------------------------------

                // COL7_1             예정신고누락분_금액
                vGDColumnIndex = pGDColumn[51];
                vXLColumnIndex = pXLColumn[51];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL7_2             예정신고누락분_세액
                vGDColumnIndex = pGDColumn[52];
                vXLColumnIndex = pXLColumn[52];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //21
                //-------------------------------------------------------------------

                // COL8_2             대손세액가감_세액
                vGDColumnIndex = pGDColumn[53];
                vXLColumnIndex = pXLColumn[53];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //22
                //-------------------------------------------------------------------

                // COL9_1             합계_금액
                vGDColumnIndex = pGDColumn[54];
                vXLColumnIndex = pXLColumn[54];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL9_2             합계_세액
                vGDColumnIndex = pGDColumn[55];
                vXLColumnIndex = pXLColumn[55];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //23
                //-------------------------------------------------------------------

                // COL10_1            매입_일반매입_금액
                vGDColumnIndex = pGDColumn[56];
                vXLColumnIndex = pXLColumn[56];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL10_2            매입_일반매입_세액
                vGDColumnIndex = pGDColumn[57];
                vXLColumnIndex = pXLColumn[57];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //24 
                //-------------------------------------------------------------------
                // COL10-1_2            매입_일반매입_세액
                vGDColumnIndex = pGDColumn[209];
                vXLColumnIndex = pXLColumn[209];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //24
                //-------------------------------------------------------------------

                // COL11_1            매입_고정자산매입_금액
                vGDColumnIndex = pGDColumn[58];
                vXLColumnIndex = pXLColumn[58];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL11_2            매입_고장자산매입_세액
                vGDColumnIndex = pGDColumn[59];
                vXLColumnIndex = pXLColumn[59];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //25
                //-------------------------------------------------------------------

                // COL12_1            매입_예정신고누락분_금액
                vGDColumnIndex = pGDColumn[60];
                vXLColumnIndex = pXLColumn[60];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL12_2            매입_예정신고누락분_세액
                vGDColumnIndex = pGDColumn[61];
                vXLColumnIndex = pXLColumn[61];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //26
                //-------------------------------------------------------------------

                // COL13_1            매입_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[62];
                vXLColumnIndex = pXLColumn[62];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL13_2            매입_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[63];
                vXLColumnIndex = pXLColumn[63];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //27
                //-------------------------------------------------------------------

                // COL14_1            매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[64];
                vXLColumnIndex = pXLColumn[64];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL14_2            매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[65];
                vXLColumnIndex = pXLColumn[65];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //28
                //-------------------------------------------------------------------

                // COL15_1            매입_합계_금액
                vGDColumnIndex = pGDColumn[66];
                vXLColumnIndex = pXLColumn[66];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL15_2            매입_합계_세액
                vGDColumnIndex = pGDColumn[67];
                vXLColumnIndex = pXLColumn[67];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //29
                //-------------------------------------------------------------------

                // COL16_1            매입_공제받지못할매입세액_금액
                vGDColumnIndex = pGDColumn[68];
                vXLColumnIndex = pXLColumn[68];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL16_2            매입_공제받지못할매입세액_세액
                vGDColumnIndex = pGDColumn[69];
                vXLColumnIndex = pXLColumn[69];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //30
                //-------------------------------------------------------------------

                // COL17_1            매입_차감계_금액
                vGDColumnIndex = pGDColumn[70];
                vXLColumnIndex = pXLColumn[70];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL17_2            매입_차감계_세액
                vGDColumnIndex = pGDColumn[71];
                vXLColumnIndex = pXLColumn[71];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //31
                //-------------------------------------------------------------------

                // COL_DA             납부세액
                vGDColumnIndex = pGDColumn[72];
                vXLColumnIndex = pXLColumn[72];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //32
                //-------------------------------------------------------------------

                // COL18_2            기타경감공제세액
                vGDColumnIndex = pGDColumn[73];
                vXLColumnIndex = pXLColumn[73];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //33
                //-------------------------------------------------------------------

                // COL19_2            신용카드매출전표등발행공제등
                vGDColumnIndex = pGDColumn[74];
                vXLColumnIndex = pXLColumn[74];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //34
                //-------------------------------------------------------------------

                // COL20_2            경감공제_합계
                vGDColumnIndex = pGDColumn[75];
                vXLColumnIndex = pXLColumn[75];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //35
                //-------------------------------------------------------------------

                // COL21_2            예정신고미환급세액
                vGDColumnIndex = pGDColumn[76];
                vXLColumnIndex = pXLColumn[76];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //36
                //-------------------------------------------------------------------

                // COL22_2            예정고지세액
                vGDColumnIndex = pGDColumn[77];
                vXLColumnIndex = pXLColumn[77];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //37
                //-------------------------------------------------------------------

                // PROXY_PAY_TAX_VAT            사업양수자의 대리납부 기납부세액 
                vGDColumnIndex = pGDColumn[202];
                vXLColumnIndex = pXLColumn[202];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //38
                //-------------------------------------------------------------------

                // SPECIAL_PAY_TAX_VAT            매입자 납부특례 기납부세액   
                vGDColumnIndex = pGDColumn[203];
                vXLColumnIndex = pXLColumn[203];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //39
                //-------------------------------------------------------------------

                // COL24_2            가산세액계
                vGDColumnIndex = pGDColumn[79];
                vXLColumnIndex = pXLColumn[79];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //40
                //-------------------------------------------------------------------

                // COL25              차가감하여납부할세액
                vGDColumnIndex = pGDColumn[80];
                vXLColumnIndex = pXLColumn[80];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //41
                //-------------------------------------------------------------------

                // TOT_REAL_VAT_AMOUNT              총괄납부사업자 납부할 세액 
                vGDColumnIndex = pGDColumn[197];
                vXLColumnIndex = pXLColumn[197];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 9; //49
                //-------------------------------------------------------------------

                // COL26_1            과세표준_업태1
                vGDColumnIndex = pGDColumn[81];
                vXLColumnIndex = pXLColumn[81];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL26_2            과세표준_종목1
                vGDColumnIndex = pGDColumn[82];
                vXLColumnIndex = pXLColumn[82];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL26_4            과세표준_종목1 생산요소 
                vGDColumnIndex = pGDColumn[198];
                vXLColumnIndex = pXLColumn[198];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////

                // COL26_3            과세표준_금액1
                vGDColumnIndex = pGDColumn[83];
                vXLColumnIndex = pXLColumn[83];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //50
                //-------------------------------------------------------------------

                // COL27_1            과세표준_업태2
                vGDColumnIndex = pGDColumn[84];
                vXLColumnIndex = pXLColumn[84];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL27_2            과세표준_종목2
                vGDColumnIndex = pGDColumn[85];
                vXLColumnIndex = pXLColumn[85];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL27_4            과세표준_종목2 생산요소 
                vGDColumnIndex = pGDColumn[199];
                vXLColumnIndex = pXLColumn[199];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL27_3            과세표준_금액2
                vGDColumnIndex = pGDColumn[86];
                vXLColumnIndex = pXLColumn[86];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //51
                //-------------------------------------------------------------------

                // COL28_1            과세표준_업태3
                vGDColumnIndex = pGDColumn[87];
                vXLColumnIndex = pXLColumn[87];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL28_2            과세표준_종목3
                vGDColumnIndex = pGDColumn[88];
                vXLColumnIndex = pXLColumn[88];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL28_4            과세표준_종목3 생산요소 
                vGDColumnIndex = pGDColumn[200];
                vXLColumnIndex = pXLColumn[200];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL28_3            과세표준_금액3
                vGDColumnIndex = pGDColumn[89];
                vXLColumnIndex = pXLColumn[89];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //52
                //-------------------------------------------------------------------

                // COL29_1            과세표준_업태4
                vGDColumnIndex = pGDColumn[90];
                vXLColumnIndex = pXLColumn[90];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL29_2            과세표준_종목4
                vGDColumnIndex = pGDColumn[91];
                vXLColumnIndex = pXLColumn[91];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL29_4            과세표준_종목4 생산요소
                vGDColumnIndex = pGDColumn[201];
                vXLColumnIndex = pXLColumn[201];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL29_3            과세표준_금액4
                vGDColumnIndex = pGDColumn[92];
                vXLColumnIndex = pXLColumn[92];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //53
                //-------------------------------------------------------------------

                // COL30              과세표준_합계
                vGDColumnIndex = pGDColumn[93];
                vXLColumnIndex = pXLColumn[93];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 9; //62
                //-------------------------------------------------------------------

                // COL31_1  예정신고_매출_과세_세금계산서_금액
                vGDColumnIndex = pGDColumn[100];
                vXLColumnIndex = pXLColumn[100];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL31_2  예정신고_매출_과세_세금계산서_세액
                vGDColumnIndex = pGDColumn[101];
                vXLColumnIndex = pXLColumn[101];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //63
                //-------------------------------------------------------------------

                // COL32_1  예정신고_매출_과세_기타_금액
                vGDColumnIndex = pGDColumn[102];
                vXLColumnIndex = pXLColumn[102];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL32_2  예정신고_매출_과세_기타_세액
                vGDColumnIndex = pGDColumn[103];
                vXLColumnIndex = pXLColumn[103];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //64
                //-------------------------------------------------------------------

                // COL33_1  예정신고_매출_영세율_세금계산서
                vGDColumnIndex = pGDColumn[104];
                vXLColumnIndex = pXLColumn[104];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //65
                //-------------------------------------------------------------------

                // COL34_1  예정신고_매출_영세율_기타
                vGDColumnIndex = pGDColumn[105];
                vXLColumnIndex = pXLColumn[105];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //66
                //-------------------------------------------------------------------

                // COL35_1  예정신고_매출_합계_금액
                vGDColumnIndex = pGDColumn[106];
                vXLColumnIndex = pXLColumn[106];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL35_2  예정신고_매출_합계_세액
                vGDColumnIndex = pGDColumn[107];
                vXLColumnIndex = pXLColumn[107];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //67
                //-------------------------------------------------------------------

                // COL36_1  예정신고_매입_세금계산서_금액
                vGDColumnIndex = pGDColumn[108];
                vXLColumnIndex = pXLColumn[108];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL36_2  예정신고_매입_세금계산서_세액
                vGDColumnIndex = pGDColumn[109];
                vXLColumnIndex = pXLColumn[109];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //68
                //-------------------------------------------------------------------

                // COL37_1  예정신고_매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[110];
                vXLColumnIndex = pXLColumn[110];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL37_2  예정신고_매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[111];
                vXLColumnIndex = pXLColumn[111];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //69
                //-------------------------------------------------------------------

                // COL38_1  예정신고_매입_합계_금액
                vGDColumnIndex = pGDColumn[112];
                vXLColumnIndex = pXLColumn[112];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL38_2  예정신고_매입_합계_세액
                vGDColumnIndex = pGDColumn[113];
                vXLColumnIndex = pXLColumn[113];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //72
                //-------------------------------------------------------------------

                // COL39_1  기타공제_신용카드_일반매입_금액
                vGDColumnIndex = pGDColumn[114];
                vXLColumnIndex = pXLColumn[114];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL39_2  기타공제_신용카드_일반매입_세액
                vGDColumnIndex = pGDColumn[115];
                vXLColumnIndex = pXLColumn[115];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //73
                //-------------------------------------------------------------------

                // COL40_1  기타공제_신용카드_고정자산매입_금액
                vGDColumnIndex = pGDColumn[116];
                vXLColumnIndex = pXLColumn[116];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL40_2  기타공제_신용카드_고정자산매입_세액
                vGDColumnIndex = pGDColumn[117];
                vXLColumnIndex = pXLColumn[117];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //74
                //-------------------------------------------------------------------

                // COL41_1  기타공제_의제매입세액_금액
                vGDColumnIndex = pGDColumn[118];
                vXLColumnIndex = pXLColumn[118];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL41_2  기타공제_의제매입세액_세액
                vGDColumnIndex = pGDColumn[119];
                vXLColumnIndex = pXLColumn[119];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //75
                //-------------------------------------------------------------------

                // COL42_1  기타공제_재활용폐자원등매입세액_금액
                vGDColumnIndex = pGDColumn[120];
                vXLColumnIndex = pXLColumn[120];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL42_2  기타공제_재활용폐자원등매입세액_세액
                vGDColumnIndex = pGDColumn[121];
                vXLColumnIndex = pXLColumn[121];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //76
                //-------------------------------------------------------------------
                // COL44_2  기타공제_과세사업전환매입세액_세액
                vGDColumnIndex = pGDColumn[124];
                vXLColumnIndex = pXLColumn[124];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //77
                //-------------------------------------------------------------------

                // COL45_2  기타공제_재고매입세액_세액
                vGDColumnIndex = pGDColumn[125];
                vXLColumnIndex = pXLColumn[125];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //78
                //-------------------------------------------------------------------

                // COL46_2  기타공제_변제대손세액_세액
                vGDColumnIndex = pGDColumn[126];
                vXLColumnIndex = pXLColumn[126];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //79
                //-------------------------------------------------------------------

                // E_FORE_TOUR_REFUND_VAT  외국인 관광객에 대한 환급세액 변제대손세액_세액
                vGDColumnIndex = pGDColumn[204];
                vXLColumnIndex = pXLColumn[204];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }


                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //80
                //-------------------------------------------------------------------

                // COL47_1  기타공제_합계_금액
                vGDColumnIndex = pGDColumn[127];
                vXLColumnIndex = pXLColumn[127];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL47_2  기타공제_헙계_세액
                vGDColumnIndex = pGDColumn[128];
                vXLColumnIndex = pXLColumn[128];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //83
                //-------------------------------------------------------------------

                // COL48_1  공제받지못할매입세액_공제받지못할_금액
                vGDColumnIndex = pGDColumn[129];
                vXLColumnIndex = pXLColumn[129];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL48_2  공제받지못할매입세액_공제받지못할_세액
                vGDColumnIndex = pGDColumn[130];
                vXLColumnIndex = pXLColumn[130];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //84
                //-------------------------------------------------------------------

                // COL49_1  공제받지못할매입세액_공통매입세액면세_금액
                vGDColumnIndex = pGDColumn[131];
                vXLColumnIndex = pXLColumn[131];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL49_2  공제받지못할매입세액_공통매입세액면세_세액
                vGDColumnIndex = pGDColumn[132];
                vXLColumnIndex = pXLColumn[132];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //85
                //-------------------------------------------------------------------

                // COL50_1  공제받지못할매입세액_대손처분받은세액_금액
                vGDColumnIndex = pGDColumn[133];
                vXLColumnIndex = pXLColumn[133];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL50_2  공제받지못할매입세액_대손처분받은세액_세액
                vGDColumnIndex = pGDColumn[134];
                vXLColumnIndex = pXLColumn[134];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //86
                //-------------------------------------------------------------------

                // COL51_1  공제받지못할매입세액_합계_금액
                vGDColumnIndex = pGDColumn[135];
                vXLColumnIndex = pXLColumn[135];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL51_2  공제받지못할매입세액_합계_세액
                vGDColumnIndex = pGDColumn[136];
                vXLColumnIndex = pXLColumn[136];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //89
                //-------------------------------------------------------------------

                // COL52_2  기탁경감공제세액_전자신고세액공제_세액
                vGDColumnIndex = pGDColumn[137];
                vXLColumnIndex = pXLColumn[137];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //90
                //-------------------------------------------------------------------

                // COL53_2  기타경감공제세액_전자세금계산서발급세액공제_세액
                vGDColumnIndex = pGDColumn[138];
                vXLColumnIndex = pXLColumn[138];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //91
                //-------------------------------------------------------------------

                // COL54_2  기타경감공제세액_택시운송사업자경감세액_세액
                vGDColumnIndex = pGDColumn[139];
                vXLColumnIndex = pXLColumn[139];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //92
                //-------------------------------------------------------------------
                // COL55_2  기타경감공제세액_현금영수증사업자세액공제_세액
                vGDColumnIndex = pGDColumn[140];
                vXLColumnIndex = pXLColumn[140];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //93
                //-------------------------------------------------------------------

                // COL56_2  기타경감공제세액_기타_세액
                vGDColumnIndex = pGDColumn[141];
                vXLColumnIndex = pXLColumn[141];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //94
                //-------------------------------------------------------------------

                // COL57_2  기타경감공제세액_합계_세액
                vGDColumnIndex = pGDColumn[142];
                vXLColumnIndex = pXLColumn[142];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //97
                //-------------------------------------------------------------------

                // COL58_1  가산세명세_사업자미등록등_금액
                vGDColumnIndex = pGDColumn[143];
                vXLColumnIndex = pXLColumn[143];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL58_2  가산세명세_사업자미등록등_세액
                vGDColumnIndex = pGDColumn[144];
                vXLColumnIndex = pXLColumn[144];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //98
                //-------------------------------------------------------------------

                // COL59_1  가산세명세_지연발급등_금액
                vGDColumnIndex = pGDColumn[145];
                vXLColumnIndex = pXLColumn[145];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL59_2  가산세명세_지연발급등_세액
                vGDColumnIndex = pGDColumn[146];
                vXLColumnIndex = pXLColumn[146];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //99
                //-------------------------------------------------------------------

                // 가산세명세 - 세금계산서 지연수취금액
                vGDColumnIndex = pGDColumn[183];
                vXLColumnIndex = pXLColumn[183];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // 가산세명세 - 세금계산서 지연수취세액
                vGDColumnIndex = pGDColumn[184];
                vXLColumnIndex = pXLColumn[184];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //100
                //-------------------------------------------------------------------

                // COL60_1  가산세명세_미발급등_금액
                vGDColumnIndex = pGDColumn[147];
                vXLColumnIndex = pXLColumn[147];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL60_2  가산세명세_미발급등_세액
                vGDColumnIndex = pGDColumn[148];
                vXLColumnIndex = pXLColumn[148];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //101
                //-------------------------------------------------------------------

                // COL61_1  가산세명세_다음달15일이후_금액
                vGDColumnIndex = pGDColumn[149];
                vXLColumnIndex = pXLColumn[149];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL61_2  가산세명세_다음달15일이후_세액
                vGDColumnIndex = pGDColumn[150];
                vXLColumnIndex = pXLColumn[150];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //102
                //-------------------------------------------------------------------

                // COL62_1  가산세명세_과세기간다음달15일이후_금액
                vGDColumnIndex = pGDColumn[151];
                vXLColumnIndex = pXLColumn[151];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL62_2  가산세명세_과세기간다음달15일이후_세액
                vGDColumnIndex = pGDColumn[152];
                vXLColumnIndex = pXLColumn[152];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //103
                //-------------------------------------------------------------------

                // COL63_1  가산세명세_세금계산서합계표제출불성실_금액
                vGDColumnIndex = pGDColumn[153];
                vXLColumnIndex = pXLColumn[153];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL63_2  가산세명세_세금계산서합계표제출불성실_세액
                vGDColumnIndex = pGDColumn[154];
                vXLColumnIndex = pXLColumn[154];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //104
                //-------------------------------------------------------------------

                //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
                vGDColumnIndex = pGDColumn[185];
                vXLColumnIndex = pXLColumn[185];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
                vGDColumnIndex = pGDColumn[186];
                vXLColumnIndex = pXLColumn[186];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //105
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[187];
                vXLColumnIndex = pXLColumn[187];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[188];
                vXLColumnIndex = pXLColumn[188];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //106
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
                vGDColumnIndex = pGDColumn[189];
                vXLColumnIndex = pXLColumn[189];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
                vGDColumnIndex = pGDColumn[190];
                vXLColumnIndex = pXLColumn[190];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //107
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[191];
                vXLColumnIndex = pXLColumn[191];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[192];
                vXLColumnIndex = pXLColumn[192];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //108
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
                vGDColumnIndex = pGDColumn[193];
                vXLColumnIndex = pXLColumn[193];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
                vGDColumnIndex = pGDColumn[194];
                vXLColumnIndex = pXLColumn[194];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }


                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //109
                //-------------------------------------------------------------------

                //가산세명세_납부불성싱_금액
                vGDColumnIndex = pGDColumn[157];
                vXLColumnIndex = pXLColumn[157];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세_납부불성실_세액
                vGDColumnIndex = pGDColumn[158];
                vXLColumnIndex = pXLColumn[158];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //110
                //-------------------------------------------------------------------

                // COL66_1  가산세명세_영세율과세표준신고불성실_금액
                vGDColumnIndex = pGDColumn[159];
                vXLColumnIndex = pXLColumn[159];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL66_2  가산세명세_영세율과세표준신고불성실_세액
                vGDColumnIndex = pGDColumn[160];
                vXLColumnIndex = pXLColumn[160];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //111
                //-------------------------------------------------------------------

                // COL67_1  가산세명세_현금매출명세서미제출등_금액
                vGDColumnIndex = pGDColumn[161];
                vXLColumnIndex = pXLColumn[161];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL67_2  가산세명세_현금매출명세서미제출등_세액
                vGDColumnIndex = pGDColumn[162];
                vXLColumnIndex = pXLColumn[162];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //112
                //-------------------------------------------------------------------

                //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
                vGDColumnIndex = pGDColumn[195];
                vXLColumnIndex = pXLColumn[195];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 
                vGDColumnIndex = pGDColumn[196];
                vXLColumnIndex = pXLColumn[196];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //113
                //-------------------------------------------------------------------

                //A_MISS_DEAL_ACCOUNT_AMT - 매입자 납부특례 거래계좌 미사용 AMT   
                vGDColumnIndex = pGDColumn[205];
                vXLColumnIndex = pXLColumn[205];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //A_MISS_DEAL_ACCOUNT_VAT - 매입자 납부특례 거래계좌 미사용 VAT 
                vGDColumnIndex = pGDColumn[206];
                vXLColumnIndex = pXLColumn[206];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //114
                //-------------------------------------------------------------------

                //A_DELAY_PAYMENT_AMT - 매입자 납부특례 거래계좌 지연입금 AMT 
                vGDColumnIndex = pGDColumn[207];
                vXLColumnIndex = pXLColumn[207];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //A_DELAY_PAYMENT_VAT - 매입자 납부특례 거래계좌 지연입금 VAT 
                vGDColumnIndex = pGDColumn[208];
                vXLColumnIndex = pXLColumn[208];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //115
                //-------------------------------------------------------------------

                // COL68_2  가산세명세_합계_세액
                vGDColumnIndex = pGDColumn[163];
                vXLColumnIndex = pXLColumn[163];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //117
                //-------------------------------------------------------------------

                // COL69_1  면세사업수입금액_업태1
                vGDColumnIndex = pGDColumn[164];
                vXLColumnIndex = pXLColumn[164];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL69_2  면세사업수입금액_종목1
                vGDColumnIndex = pGDColumn[165];
                vXLColumnIndex = pXLColumn[165];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL69_3  면세사업수입금액_금액1
                vGDColumnIndex = pGDColumn[166];
                vXLColumnIndex = pXLColumn[166];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //118
                //-------------------------------------------------------------------

                // COL70_1  면세사업수입금액_업태2
                vGDColumnIndex = pGDColumn[167];
                vXLColumnIndex = pXLColumn[167];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL70_2  면세사업수입금액_종목2
                vGDColumnIndex = pGDColumn[168];
                vXLColumnIndex = pXLColumn[168];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL70_3  면세사업수입금액_금액2
                vGDColumnIndex = pGDColumn[169];
                vXLColumnIndex = pXLColumn[169];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //119
                //-------------------------------------------------------------------

                // COL71_1  면세사업수입금액_업태3
                vGDColumnIndex = pGDColumn[170];
                vXLColumnIndex = pXLColumn[170];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL71_2  면세사업수입금액_종목3
                vGDColumnIndex = pGDColumn[171];
                vXLColumnIndex = pXLColumn[171];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL71_3  면세사업수입금액_금액3
                vGDColumnIndex = pGDColumn[172];
                vXLColumnIndex = pXLColumn[172];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //120
                //-------------------------------------------------------------------

                // COL72    면세사업수입금액_합계
                vGDColumnIndex = pGDColumn[173];
                vXLColumnIndex = pXLColumn[173];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //122
                //-------------------------------------------------------------------

                // COL73    계산서발급금액
                vGDColumnIndex = pGDColumn[180];
                vXLColumnIndex = pXLColumn[180];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //123
                //-------------------------------------------------------------------

                // COL74    계산서수취금액
                vGDColumnIndex = pGDColumn[181];
                vXLColumnIndex = pXLColumn[181];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1;
                //-------------------------------------------------------------------
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mAppInterface.OnAppMessageEvent(mMessageError);
                System.Windows.Forms.Application.DoEvents();
            }

            return vXLine;
        }


        private int XL_WRITE_013(System.Data.DataRow pRow, int[] pGDColumn, int[] pXLColumn)
        {
            int vXLine = 2; //엑셀에 내용이 표시되는 행 번호

            int vAddLine_01 = 54; //사업자등록번호_2장
            int vAddLine_02 = 30; //거래은행_1장
            int vAddLine_03 = 36; //신고인_1장

            int vGDColumnIndex = 0;
            int vXLColumnIndex = 0;

            object vObject = null;
            string vConvertString = string.Empty;
            decimal vConvertDecimal = 0m;
            bool IsConvert = false;
            bool IsBUSINESS_ITEM_CODE = false;

            try
            {
                mPrinting.XLActiveSheet("DESTINATION");

                // GUBUN_1      신고서구분_예정
                vGDColumnIndex = pGDColumn[0];
                vXLColumnIndex = pXLColumn[0];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // GUBUN_2      신고서구분_확정
                vGDColumnIndex = pGDColumn[1];
                vXLColumnIndex = pXLColumn[1];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //3
                //-------------------------------------------------------------------

                // GUBUN_3      신고서구분_기한후과세표준
                vGDColumnIndex = pGDColumn[2];
                vXLColumnIndex = pXLColumn[2];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //4
                //-------------------------------------------------------------------

                // GUBUN_4      신고서구분_영세율등조기환급
                vGDColumnIndex = pGDColumn[3];
                vXLColumnIndex = pXLColumn[3];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //6
                //-------------------------------------------------------------------

                // FISCAL_YEAR  신고기간_출력용
                vGDColumnIndex = pGDColumn[4];
                vXLColumnIndex = pXLColumn[4];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //7
                //-------------------------------------------------------------------

                // TITLE_2            상호
                vGDColumnIndex = pGDColumn[5];
                vXLColumnIndex = pXLColumn[5];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_3            성명
                vGDColumnIndex = pGDColumn[6];
                vXLColumnIndex = pXLColumn[6];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[7];
                vXLColumnIndex = pXLColumn[7];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[8];
                vXLColumnIndex = pXLColumn[8];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[9];
                vXLColumnIndex = pXLColumn[9];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[10];
                vXLColumnIndex = pXLColumn[10];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[11];
                vXLColumnIndex = pXLColumn[11];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[12];
                vXLColumnIndex = pXLColumn[12];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[13];
                vXLColumnIndex = pXLColumn[13];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[14];
                vXLColumnIndex = pXLColumn[14];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[15];
                vXLColumnIndex = pXLColumn[15];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[16];
                vXLColumnIndex = pXLColumn[16];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[17];
                vXLColumnIndex = pXLColumn[17];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[18];
                vXLColumnIndex = pXLColumn[18];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[19];
                vXLColumnIndex = pXLColumn[19];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[20];
                vXLColumnIndex = pXLColumn[20];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[21];
                vXLColumnIndex = pXLColumn[21];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[22];
                vXLColumnIndex = pXLColumn[22];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[23];
                vXLColumnIndex = pXLColumn[23];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[24];
                vXLColumnIndex = pXLColumn[24];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[25];
                vXLColumnIndex = pXLColumn[25];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[26];
                vXLColumnIndex = pXLColumn[26];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_01), vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //8
                //-------------------------------------------------------------------

                // TITLE_5            법인등록번호
                vGDColumnIndex = pGDColumn[27];
                vXLColumnIndex = pXLColumn[27];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //9
                //-------------------------------------------------------------------

                // TITLE_6            사업장전화
                vGDColumnIndex = pGDColumn[28];
                vXLColumnIndex = pXLColumn[28];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_7            주소지전화
                vGDColumnIndex = pGDColumn[29];
                vXLColumnIndex = pXLColumn[29];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_8            휴대전화
                vGDColumnIndex = pGDColumn[30];
                vXLColumnIndex = pXLColumn[30];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //10
                //-------------------------------------------------------------------

                // TITLE_9            사업장주소
                vGDColumnIndex = pGDColumn[31];
                vXLColumnIndex = pXLColumn[31];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_10           전자우편주소
                vGDColumnIndex = pGDColumn[32];
                vXLColumnIndex = pXLColumn[32];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //14
                //-------------------------------------------------------------------

                // DEAL_BANK          거래은행
                vGDColumnIndex = pGDColumn[33];
                vXLColumnIndex = pXLColumn[33];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 은행", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }

                // DEAL_BRANCH        거래지점
                vGDColumnIndex = pGDColumn[34];
                vXLColumnIndex = pXLColumn[34];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 지점", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }

                // ACC_NO             계좌번호
                vGDColumnIndex = pGDColumn[35];
                vXLColumnIndex = pXLColumn[35];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02), vXLColumnIndex, vConvertString);
                }

                // CLOSURE_DATE_PRINT 출력용 폐업일
                vGDColumnIndex = pGDColumn[36];
                vXLColumnIndex = pXLColumn[36];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 2), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 2), vXLColumnIndex, vConvertString);
                }

                // CLOSURE_REASON     폐업사유
                vGDColumnIndex = pGDColumn[37];
                vXLColumnIndex = pXLColumn[37];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 2), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 2), vXLColumnIndex, vConvertString);
                }

                // 영세율상호주의 적용여부
                vGDColumnIndex = pGDColumn[213];
                vXLColumnIndex = pXLColumn[213];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 3), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 3), vXLColumnIndex, vConvertString);
                }

                // 영세율상호주의 적용구분
                vGDColumnIndex = pGDColumn[214];
                vXLColumnIndex = pXLColumn[214];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 3), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 3), vXLColumnIndex, vConvertString);
                }

                // 영세율상호주의 업종
                vGDColumnIndex = pGDColumn[215];
                vXLColumnIndex = pXLColumn[215];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 3), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 3), vXLColumnIndex, vConvertString);
                }

                // 영세율상호주의 국가
                vGDColumnIndex = pGDColumn[216];
                vXLColumnIndex = pXLColumn[216];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 3), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_02 + 3), vXLColumnIndex, vConvertString);
                }

                // TITLE_14_PRINT     출력용 작성일자
                vGDColumnIndex = pGDColumn[38];
                vXLColumnIndex = pXLColumn[38];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_03), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_03), vXLColumnIndex, vConvertString);
                }

                // TITLE_15           신고인
                vGDColumnIndex = pGDColumn[39];
                vXLColumnIndex = pXLColumn[39];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 1), vXLColumnIndex, vConvertString);
                }

                // TITLE_16           세무서
                vGDColumnIndex = pGDColumn[40];
                vXLColumnIndex = pXLColumn[40];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 4), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vXLine + vAddLine_03 + 4), vXLColumnIndex, vConvertString);
                }

                // COL1_1             과세_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[41];
                vXLColumnIndex = pXLColumn[41];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL1_2             과세_세금계산서발급분_세액
                vGDColumnIndex = pGDColumn[42];
                vXLColumnIndex = pXLColumn[42];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //15
                //-------------------------------------------------------------------

                // COL2_1             과세_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[43];
                vXLColumnIndex = pXLColumn[43];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL2_2             과세_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[44];
                vXLColumnIndex = pXLColumn[44];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //16
                //-------------------------------------------------------------------

                // COL3_1             과세_신용카드_현금영수증발행분_금액
                vGDColumnIndex = pGDColumn[45];
                vXLColumnIndex = pXLColumn[45];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL3_2             과세_신용카드_현금영수증발행분_세액
                vGDColumnIndex = pGDColumn[46];
                vXLColumnIndex = pXLColumn[46];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //17
                //-------------------------------------------------------------------

                // COL4_1             과세_기타_금액
                vGDColumnIndex = pGDColumn[47];
                vXLColumnIndex = pXLColumn[47];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL4_2             과세_기타_세액
                vGDColumnIndex = pGDColumn[48];
                vXLColumnIndex = pXLColumn[48];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //18
                //-------------------------------------------------------------------

                // COL5_1             영세율_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[49];
                vXLColumnIndex = pXLColumn[49];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //19
                //-------------------------------------------------------------------

                // COL6_1             영세율_기타_금액
                vGDColumnIndex = pGDColumn[50];
                vXLColumnIndex = pXLColumn[50];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //20
                //-------------------------------------------------------------------

                // COL7_1             예정신고누락분_금액
                vGDColumnIndex = pGDColumn[51];
                vXLColumnIndex = pXLColumn[51];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL7_2             예정신고누락분_세액
                vGDColumnIndex = pGDColumn[52];
                vXLColumnIndex = pXLColumn[52];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //21
                //-------------------------------------------------------------------

                // COL8_2             대손세액가감_세액
                vGDColumnIndex = pGDColumn[53];
                vXLColumnIndex = pXLColumn[53];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //22
                //-------------------------------------------------------------------

                // COL9_1             합계_금액
                vGDColumnIndex = pGDColumn[54];
                vXLColumnIndex = pXLColumn[54];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL9_2             합계_세액
                vGDColumnIndex = pGDColumn[55];
                vXLColumnIndex = pXLColumn[55];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //23
                //-------------------------------------------------------------------

                // COL10_1            매입_일반매입_금액
                vGDColumnIndex = pGDColumn[56];
                vXLColumnIndex = pXLColumn[56];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL10_2            매입_일반매입_세액
                vGDColumnIndex = pGDColumn[57];
                vXLColumnIndex = pXLColumn[57];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                ////-------------------------------------------------------------------
                //vXLine = vXLine + 1; //24 
                ////-------------------------------------------------------------------
                //// COL10-1_2          수출기업 수입분 납부유예
                //vGDColumnIndex = pGDColumn[209];
                //vXLColumnIndex = pXLColumn[209];
                //vObject = pRow[vGDColumnIndex];
                //IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                //if (IsConvert == true)
                //{
                //    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                //    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //}
                //else
                //{
                //    vConvertString = string.Empty;
                //    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //}

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //24
                //-------------------------------------------------------------------

                // COL11_1            매입_고정자산매입_금액
                vGDColumnIndex = pGDColumn[58];
                vXLColumnIndex = pXLColumn[58];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL11_2            매입_고장자산매입_세액
                vGDColumnIndex = pGDColumn[59];
                vXLColumnIndex = pXLColumn[59];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //25
                //-------------------------------------------------------------------

                // COL12_1            매입_예정신고누락분_금액
                vGDColumnIndex = pGDColumn[60];
                vXLColumnIndex = pXLColumn[60];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL12_2            매입_예정신고누락분_세액
                vGDColumnIndex = pGDColumn[61];
                vXLColumnIndex = pXLColumn[61];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //26
                //-------------------------------------------------------------------

                // COL13_1            매입_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[62];
                vXLColumnIndex = pXLColumn[62];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL13_2            매입_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[63];
                vXLColumnIndex = pXLColumn[63];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //27
                //-------------------------------------------------------------------

                // COL14_1            매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[64];
                vXLColumnIndex = pXLColumn[64];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL14_2            매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[65];
                vXLColumnIndex = pXLColumn[65];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //28
                //-------------------------------------------------------------------

                // COL15_1            매입_합계_금액
                vGDColumnIndex = pGDColumn[66];
                vXLColumnIndex = pXLColumn[66];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL15_2            매입_합계_세액
                vGDColumnIndex = pGDColumn[67];
                vXLColumnIndex = pXLColumn[67];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //29
                //-------------------------------------------------------------------

                // COL16_1            매입_공제받지못할매입세액_금액
                vGDColumnIndex = pGDColumn[68];
                vXLColumnIndex = pXLColumn[68];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL16_2            매입_공제받지못할매입세액_세액
                vGDColumnIndex = pGDColumn[69];
                vXLColumnIndex = pXLColumn[69];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //30
                //-------------------------------------------------------------------

                // COL17_1            매입_차감계_금액
                vGDColumnIndex = pGDColumn[70];
                vXLColumnIndex = pXLColumn[70];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL17_2            매입_차감계_세액
                vGDColumnIndex = pGDColumn[71];
                vXLColumnIndex = pXLColumn[71];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //31
                //-------------------------------------------------------------------

                // COL_DA             납부세액
                vGDColumnIndex = pGDColumn[72];
                vXLColumnIndex = pXLColumn[72];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //32
                //-------------------------------------------------------------------

                // COL18_2            기타경감공제세액
                vGDColumnIndex = pGDColumn[73];
                vXLColumnIndex = pXLColumn[73];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //33
                //-------------------------------------------------------------------

                // COL19_2            신용카드매출전표등발행공제등
                vGDColumnIndex = pGDColumn[74];
                vXLColumnIndex = pXLColumn[74];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //34
                //-------------------------------------------------------------------

                // COL20_2            경감공제_합계
                vGDColumnIndex = pGDColumn[75];
                vXLColumnIndex = pXLColumn[75];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //35
                //-------------------------------------------------------------------

                // 소규모 개인사업장 부가가치세감면세액
                vGDColumnIndex = pGDColumn[211];
                vXLColumnIndex = pXLColumn[211];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //36
                //-------------------------------------------------------------------

                // COL21_2            예정신고미환급세액
                vGDColumnIndex = pGDColumn[76];
                vXLColumnIndex = pXLColumn[76];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //37
                //-------------------------------------------------------------------

                // COL22_2            예정고지세액
                vGDColumnIndex = pGDColumn[77];
                vXLColumnIndex = pXLColumn[77];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //38
                //-------------------------------------------------------------------

                // PROXY_PAY_TAX_VAT            사업양수자의 대리납부 기납부세액 
                vGDColumnIndex = pGDColumn[202];
                vXLColumnIndex = pXLColumn[202];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //39
                //-------------------------------------------------------------------

                // SPECIAL_PAY_TAX_VAT            매입자 납부특례 기납부세액   
                vGDColumnIndex = pGDColumn[203];
                vXLColumnIndex = pXLColumn[203];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //40
                //-------------------------------------------------------------------

                // 신용카드업자가 대리납부 기납부세액
                vGDColumnIndex = pGDColumn[210];
                vXLColumnIndex = pXLColumn[210];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //41
                //-------------------------------------------------------------------

                // COL24_2            가산세액계
                vGDColumnIndex = pGDColumn[79];
                vXLColumnIndex = pXLColumn[79];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //42
                //-------------------------------------------------------------------

                // COL25              차가감하여납부할세액
                vGDColumnIndex = pGDColumn[80];
                vXLColumnIndex = pXLColumn[80];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //43
                //-------------------------------------------------------------------

                // TOT_REAL_VAT_AMOUNT              총괄납부사업자 납부할 세액 
                vGDColumnIndex = pGDColumn[197];
                vXLColumnIndex = pXLColumn[197];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 8; //49
                //-------------------------------------------------------------------

                // COL26_1            과세표준_업태1
                vGDColumnIndex = pGDColumn[81];
                vXLColumnIndex = pXLColumn[81];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL26_2            과세표준_종목1
                vGDColumnIndex = pGDColumn[82];
                vXLColumnIndex = pXLColumn[82];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL26_4            과세표준_종목1 생산요소 
                vGDColumnIndex = pGDColumn[198];
                vXLColumnIndex = pXLColumn[198];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////

                // COL26_3            과세표준_금액1
                vGDColumnIndex = pGDColumn[83];
                vXLColumnIndex = pXLColumn[83];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //52
                //-------------------------------------------------------------------

                // COL27_1            과세표준_업태2
                vGDColumnIndex = pGDColumn[84];
                vXLColumnIndex = pXLColumn[84];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL27_2            과세표준_종목2
                vGDColumnIndex = pGDColumn[85];
                vXLColumnIndex = pXLColumn[85];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL27_4            과세표준_종목2 생산요소 
                vGDColumnIndex = pGDColumn[199];
                vXLColumnIndex = pXLColumn[199];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL27_3            과세표준_금액2
                vGDColumnIndex = pGDColumn[86];
                vXLColumnIndex = pXLColumn[86];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //53
                //-------------------------------------------------------------------

                // COL28_1            과세표준_업태3
                vGDColumnIndex = pGDColumn[87];
                vXLColumnIndex = pXLColumn[87];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL28_2            과세표준_종목3
                vGDColumnIndex = pGDColumn[88];
                vXLColumnIndex = pXLColumn[88];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL28_4            과세표준_종목3 생산요소 
                vGDColumnIndex = pGDColumn[200];
                vXLColumnIndex = pXLColumn[200];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL28_3            과세표준_금액3
                vGDColumnIndex = pGDColumn[89];
                vXLColumnIndex = pXLColumn[89];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //54
                //-------------------------------------------------------------------

                // COL29_1            과세표준_업태4
                vGDColumnIndex = pGDColumn[90];
                vXLColumnIndex = pXLColumn[90];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL29_2            과세표준_종목4
                vGDColumnIndex = pGDColumn[91];
                vXLColumnIndex = pXLColumn[91];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL29_4            과세표준_종목4 생산요소
                vGDColumnIndex = pGDColumn[201];
                vXLColumnIndex = pXLColumn[201];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL29_3            과세표준_금액4
                vGDColumnIndex = pGDColumn[92];
                vXLColumnIndex = pXLColumn[92];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //55
                //-------------------------------------------------------------------

                // COL30              과세표준_합계
                vGDColumnIndex = pGDColumn[93];
                vXLColumnIndex = pXLColumn[93];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 9; //64
                //-------------------------------------------------------------------

                // COL31_1  예정신고_매출_과세_세금계산서_금액
                vGDColumnIndex = pGDColumn[100];
                vXLColumnIndex = pXLColumn[100];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL31_2  예정신고_매출_과세_세금계산서_세액
                vGDColumnIndex = pGDColumn[101];
                vXLColumnIndex = pXLColumn[101];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //65
                //-------------------------------------------------------------------

                // COL32_1  예정신고_매출_과세_기타_금액
                vGDColumnIndex = pGDColumn[102];
                vXLColumnIndex = pXLColumn[102];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL32_2  예정신고_매출_과세_기타_세액
                vGDColumnIndex = pGDColumn[103];
                vXLColumnIndex = pXLColumn[103];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //66
                //-------------------------------------------------------------------

                // COL33_1  예정신고_매출_영세율_세금계산서
                vGDColumnIndex = pGDColumn[104];
                vXLColumnIndex = pXLColumn[104];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //67
                //-------------------------------------------------------------------

                // COL34_1  예정신고_매출_영세율_기타
                vGDColumnIndex = pGDColumn[105];
                vXLColumnIndex = pXLColumn[105];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //68
                //-------------------------------------------------------------------

                // COL35_1  예정신고_매출_합계_금액
                vGDColumnIndex = pGDColumn[106];
                vXLColumnIndex = pXLColumn[106];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL35_2  예정신고_매출_합계_세액
                vGDColumnIndex = pGDColumn[107];
                vXLColumnIndex = pXLColumn[107];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //69
                //-------------------------------------------------------------------

                // COL36_1  예정신고_매입_세금계산서_금액
                vGDColumnIndex = pGDColumn[108];
                vXLColumnIndex = pXLColumn[108];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL36_2  예정신고_매입_세금계산서_세액
                vGDColumnIndex = pGDColumn[109];
                vXLColumnIndex = pXLColumn[109];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //70
                //-------------------------------------------------------------------

                // COL37_1  예정신고_매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[110];
                vXLColumnIndex = pXLColumn[110];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL37_2  예정신고_매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[111];
                vXLColumnIndex = pXLColumn[111];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //71
                //-------------------------------------------------------------------

                // COL38_1  예정신고_매입_합계_금액
                vGDColumnIndex = pGDColumn[112];
                vXLColumnIndex = pXLColumn[112];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL38_2  예정신고_매입_합계_세액
                vGDColumnIndex = pGDColumn[113];
                vXLColumnIndex = pXLColumn[113];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //74
                //-------------------------------------------------------------------

                // COL39_1  기타공제_신용카드_일반매입_금액
                vGDColumnIndex = pGDColumn[114];
                vXLColumnIndex = pXLColumn[114];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL39_2  기타공제_신용카드_일반매입_세액
                vGDColumnIndex = pGDColumn[115];
                vXLColumnIndex = pXLColumn[115];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //75
                //-------------------------------------------------------------------

                // COL40_1  기타공제_신용카드_고정자산매입_금액
                vGDColumnIndex = pGDColumn[116];
                vXLColumnIndex = pXLColumn[116];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL40_2  기타공제_신용카드_고정자산매입_세액
                vGDColumnIndex = pGDColumn[117];
                vXLColumnIndex = pXLColumn[117];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //76
                //-------------------------------------------------------------------

                // COL41_1  기타공제_의제매입세액_금액
                vGDColumnIndex = pGDColumn[118];
                vXLColumnIndex = pXLColumn[118];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL41_2  기타공제_의제매입세액_세액
                vGDColumnIndex = pGDColumn[119];
                vXLColumnIndex = pXLColumn[119];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //7577
                //-------------------------------------------------------------------

                // COL42_1  기타공제_재활용폐자원등매입세액_금액
                vGDColumnIndex = pGDColumn[120];
                vXLColumnIndex = pXLColumn[120];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL42_2  기타공제_재활용폐자원등매입세액_세액
                vGDColumnIndex = pGDColumn[121];
                vXLColumnIndex = pXLColumn[121];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //78
                //-------------------------------------------------------------------
                // COL44_2  기타공제_과세사업전환매입세액_세액
                vGDColumnIndex = pGDColumn[124];
                vXLColumnIndex = pXLColumn[124];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //79
                //-------------------------------------------------------------------

                // COL45_2  기타공제_재고매입세액_세액
                vGDColumnIndex = pGDColumn[125];
                vXLColumnIndex = pXLColumn[125];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //80
                //-------------------------------------------------------------------

                // COL46_2  기타공제_변제대손세액_세액
                vGDColumnIndex = pGDColumn[126];
                vXLColumnIndex = pXLColumn[126];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //81
                //-------------------------------------------------------------------

                // E_FORE_TOUR_REFUND_VAT  외국인 관광객에 대한 환급세액 변제대손세액_세액
                vGDColumnIndex = pGDColumn[204];
                vXLColumnIndex = pXLColumn[204];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }


                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //83
                //-------------------------------------------------------------------

                // COL47_1  기타공제_합계_금액
                vGDColumnIndex = pGDColumn[127];
                vXLColumnIndex = pXLColumn[127];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL47_2  기타공제_헙계_세액
                vGDColumnIndex = pGDColumn[128];
                vXLColumnIndex = pXLColumn[128];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //86
                //-------------------------------------------------------------------

                // COL48_1  공제받지못할매입세액_공제받지못할_금액
                vGDColumnIndex = pGDColumn[129];
                vXLColumnIndex = pXLColumn[129];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL48_2  공제받지못할매입세액_공제받지못할_세액
                vGDColumnIndex = pGDColumn[130];
                vXLColumnIndex = pXLColumn[130];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //87
                //-------------------------------------------------------------------

                // COL49_1  공제받지못할매입세액_공통매입세액면세_금액
                vGDColumnIndex = pGDColumn[131];
                vXLColumnIndex = pXLColumn[131];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL49_2  공제받지못할매입세액_공통매입세액면세_세액
                vGDColumnIndex = pGDColumn[132];
                vXLColumnIndex = pXLColumn[132];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //88
                //-------------------------------------------------------------------

                // COL50_1  공제받지못할매입세액_대손처분받은세액_금액
                vGDColumnIndex = pGDColumn[133];
                vXLColumnIndex = pXLColumn[133];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL50_2  공제받지못할매입세액_대손처분받은세액_세액
                vGDColumnIndex = pGDColumn[134];
                vXLColumnIndex = pXLColumn[134];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //89
                //-------------------------------------------------------------------

                // COL51_1  공제받지못할매입세액_합계_금액
                vGDColumnIndex = pGDColumn[135];
                vXLColumnIndex = pXLColumn[135];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL51_2  공제받지못할매입세액_합계_세액
                vGDColumnIndex = pGDColumn[136];
                vXLColumnIndex = pXLColumn[136];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //92
                //-------------------------------------------------------------------

                // COL52_2  기탁경감공제세액_전자신고세액공제_세액
                vGDColumnIndex = pGDColumn[137];
                vXLColumnIndex = pXLColumn[137];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //93
                //-------------------------------------------------------------------

                // COL53_2  기타경감공제세액_전자세금계산서발급세액공제_세액
                vGDColumnIndex = pGDColumn[138];
                vXLColumnIndex = pXLColumn[138];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //94
                //-------------------------------------------------------------------

                // COL54_2  기타경감공제세액_택시운송사업자경감세액_세액
                vGDColumnIndex = pGDColumn[139];
                vXLColumnIndex = pXLColumn[139];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //95
                //-------------------------------------------------------------------
                // 대리납부 세액공제
                vGDColumnIndex = pGDColumn[212];
                vXLColumnIndex = pXLColumn[212];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //96
                //-------------------------------------------------------------------
                // COL55_2  기타경감공제세액_현금영수증사업자세액공제_세액
                vGDColumnIndex = pGDColumn[140];
                vXLColumnIndex = pXLColumn[140];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //97
                //-------------------------------------------------------------------

                // COL56_2  기타경감공제세액_기타_세액
                vGDColumnIndex = pGDColumn[141];
                vXLColumnIndex = pXLColumn[141];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //98
                //-------------------------------------------------------------------

                // COL57_2  기타경감공제세액_합계_세액
                vGDColumnIndex = pGDColumn[142];
                vXLColumnIndex = pXLColumn[142];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //101
                //-------------------------------------------------------------------

                // COL58_1  가산세명세_사업자미등록등_금액
                vGDColumnIndex = pGDColumn[143];
                vXLColumnIndex = pXLColumn[143];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL58_2  가산세명세_사업자미등록등_세액
                vGDColumnIndex = pGDColumn[144];
                vXLColumnIndex = pXLColumn[144];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //102
                //-------------------------------------------------------------------

                // COL59_1  가산세명세_지연발급등_금액
                vGDColumnIndex = pGDColumn[145];
                vXLColumnIndex = pXLColumn[145];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL59_2  가산세명세_지연발급등_세액
                vGDColumnIndex = pGDColumn[146];
                vXLColumnIndex = pXLColumn[146];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //103
                //-------------------------------------------------------------------

                // 가산세명세 - 세금계산서 지연수취금액
                vGDColumnIndex = pGDColumn[183];
                vXLColumnIndex = pXLColumn[183];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // 가산세명세 - 세금계산서 지연수취세액
                vGDColumnIndex = pGDColumn[184];
                vXLColumnIndex = pXLColumn[184];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //104
                //-------------------------------------------------------------------

                // COL60_1  가산세명세_미발급등_금액
                vGDColumnIndex = pGDColumn[147];
                vXLColumnIndex = pXLColumn[147];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL60_2  가산세명세_미발급등_세액
                vGDColumnIndex = pGDColumn[148];
                vXLColumnIndex = pXLColumn[148];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //105
                //-------------------------------------------------------------------

                // COL61_1  가산세명세_다음달15일이후_금액
                vGDColumnIndex = pGDColumn[149];
                vXLColumnIndex = pXLColumn[149];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL61_2  가산세명세_다음달15일이후_세액
                vGDColumnIndex = pGDColumn[150];
                vXLColumnIndex = pXLColumn[150];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //106
                //-------------------------------------------------------------------

                // COL62_1  가산세명세_과세기간다음달15일이후_금액
                vGDColumnIndex = pGDColumn[151];
                vXLColumnIndex = pXLColumn[151];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL62_2  가산세명세_과세기간다음달15일이후_세액
                vGDColumnIndex = pGDColumn[152];
                vXLColumnIndex = pXLColumn[152];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //107
                //-------------------------------------------------------------------

                // COL63_1  가산세명세_세금계산서합계표제출불성실_금액
                vGDColumnIndex = pGDColumn[153];
                vXLColumnIndex = pXLColumn[153];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL63_2  가산세명세_세금계산서합계표제출불성실_세액
                vGDColumnIndex = pGDColumn[154];
                vXLColumnIndex = pXLColumn[154];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //108
                //-------------------------------------------------------------------

                //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
                vGDColumnIndex = pGDColumn[185];
                vXLColumnIndex = pXLColumn[185];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
                vGDColumnIndex = pGDColumn[186];
                vXLColumnIndex = pXLColumn[186];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //109
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[187];
                vXLColumnIndex = pXLColumn[187];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[188];
                vXLColumnIndex = pXLColumn[188];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //110
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
                vGDColumnIndex = pGDColumn[189];
                vXLColumnIndex = pXLColumn[189];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
                vGDColumnIndex = pGDColumn[190];
                vXLColumnIndex = pXLColumn[190];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //111
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[191];
                vXLColumnIndex = pXLColumn[191];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[192];
                vXLColumnIndex = pXLColumn[192];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //112
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
                vGDColumnIndex = pGDColumn[193];
                vXLColumnIndex = pXLColumn[193];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
                vGDColumnIndex = pGDColumn[194];
                vXLColumnIndex = pXLColumn[194];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }


                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //113
                //-------------------------------------------------------------------

                //가산세명세_납부불성싱_금액
                vGDColumnIndex = pGDColumn[157];
                vXLColumnIndex = pXLColumn[157];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세_납부불성실_세액
                vGDColumnIndex = pGDColumn[158];
                vXLColumnIndex = pXLColumn[158];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //114
                //-------------------------------------------------------------------

                // COL66_1  가산세명세_영세율과세표준신고불성실_금액
                vGDColumnIndex = pGDColumn[159];
                vXLColumnIndex = pXLColumn[159];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL66_2  가산세명세_영세율과세표준신고불성실_세액
                vGDColumnIndex = pGDColumn[160];
                vXLColumnIndex = pXLColumn[160];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //115
                //-------------------------------------------------------------------

                // COL67_1  가산세명세_현금매출명세서미제출등_금액
                vGDColumnIndex = pGDColumn[161];
                vXLColumnIndex = pXLColumn[161];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL67_2  가산세명세_현금매출명세서미제출등_세액
                vGDColumnIndex = pGDColumn[162];
                vXLColumnIndex = pXLColumn[162];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //116
                //-------------------------------------------------------------------

                //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
                vGDColumnIndex = pGDColumn[195];
                vXLColumnIndex = pXLColumn[195];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 
                vGDColumnIndex = pGDColumn[196];
                vXLColumnIndex = pXLColumn[196];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //117
                //-------------------------------------------------------------------

                //A_MISS_DEAL_ACCOUNT_AMT - 매입자 납부특례 거래계좌 미사용 AMT   
                vGDColumnIndex = pGDColumn[205];
                vXLColumnIndex = pXLColumn[205];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //A_MISS_DEAL_ACCOUNT_VAT - 매입자 납부특례 거래계좌 미사용 VAT 
                vGDColumnIndex = pGDColumn[206];
                vXLColumnIndex = pXLColumn[206];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //118
                //-------------------------------------------------------------------

                //A_DELAY_PAYMENT_AMT - 매입자 납부특례 거래계좌 지연입금 AMT 
                vGDColumnIndex = pGDColumn[207];
                vXLColumnIndex = pXLColumn[207];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //A_DELAY_PAYMENT_VAT - 매입자 납부특례 거래계좌 지연입금 VAT 
                vGDColumnIndex = pGDColumn[208];
                vXLColumnIndex = pXLColumn[208];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //119
                //-------------------------------------------------------------------

                // COL68_2  가산세명세_합계_세액
                vGDColumnIndex = pGDColumn[163];
                vXLColumnIndex = pXLColumn[163];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //122
                //-------------------------------------------------------------------

                // COL69_1  면세사업수입금액_업태1
                vGDColumnIndex = pGDColumn[164];
                vXLColumnIndex = pXLColumn[164];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL69_2  면세사업수입금액_종목1
                vGDColumnIndex = pGDColumn[165];
                vXLColumnIndex = pXLColumn[165];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL69_3  면세사업수입금액_금액1
                vGDColumnIndex = pGDColumn[166];
                vXLColumnIndex = pXLColumn[166];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //123
                //-------------------------------------------------------------------

                // COL70_1  면세사업수입금액_업태2
                vGDColumnIndex = pGDColumn[167];
                vXLColumnIndex = pXLColumn[167];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL70_2  면세사업수입금액_종목2
                vGDColumnIndex = pGDColumn[168];
                vXLColumnIndex = pXLColumn[168];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL70_3  면세사업수입금액_금액2
                vGDColumnIndex = pGDColumn[169];
                vXLColumnIndex = pXLColumn[169];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //124
                //-------------------------------------------------------------------

                // COL71_1  면세사업수입금액_업태3
                vGDColumnIndex = pGDColumn[170];
                vXLColumnIndex = pXLColumn[170];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL71_2  면세사업수입금액_종목3
                vGDColumnIndex = pGDColumn[171];
                vXLColumnIndex = pXLColumn[171];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL71_3  면세사업수입금액_금액3
                vGDColumnIndex = pGDColumn[172];
                vXLColumnIndex = pXLColumn[172];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //125
                //-------------------------------------------------------------------

                // COL72    면세사업수입금액_합계
                vGDColumnIndex = pGDColumn[173];
                vXLColumnIndex = pXLColumn[173];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //127
                //-------------------------------------------------------------------

                // COL73    계산서발급금액
                vGDColumnIndex = pGDColumn[180];
                vXLColumnIndex = pXLColumn[180];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //128
                //-------------------------------------------------------------------

                // COL74    계산서수취금액
                vGDColumnIndex = pGDColumn[181];
                vXLColumnIndex = pXLColumn[181];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1;
                //-------------------------------------------------------------------
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mAppInterface.OnAppMessageEvent(mMessageError);
                System.Windows.Forms.Application.DoEvents();
            }

            return vXLine;
        }


        private int XL_WRITE_02(System.Data.DataRow pRow, System.Data.DataRow pRow_01, int[] pGDColumn, int[] pXLColumn)
        {
            int vXLine = 2; //엑셀에 내용이 표시되는 행 번호

            int vROW_VAT_TAX_NUM = 91; //사업자등록번호_2장
            int vROW_BANK_NAME = 69; //거래은행_1장
            int vROW_ISSUER_NAME = 76; //신고인_1장

            int vGDColumnIndex = 0;
            int vXLColumnIndex = 0;

            object vObject = null;
            string vConvertString = string.Empty;
            decimal vConvertDecimal = 0m;
            bool IsConvert = false;
            bool IsBUSINESS_ITEM_CODE = false;

            try
            {
                mPrinting.XLActiveSheet("DESTINATION");

                // GUBUN_1      신고서구분_예정
                vGDColumnIndex = pGDColumn[0];
                vXLColumnIndex = pXLColumn[0];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // GUBUN_2      신고서구분_확정
                vGDColumnIndex = pGDColumn[1];
                vXLColumnIndex = pXLColumn[1];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //3
                //-------------------------------------------------------------------

                // GUBUN_3      신고서구분_기한후과세표준
                vGDColumnIndex = pGDColumn[2];
                vXLColumnIndex = pXLColumn[2];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //4
                //-------------------------------------------------------------------

                // GUBUN_4      신고서구분_영세율등조기환급
                vGDColumnIndex = pGDColumn[3];
                vXLColumnIndex = pXLColumn[3];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //6
                //-------------------------------------------------------------------

                // FISCAL_YEAR  신고기간_출력용
                vGDColumnIndex = pGDColumn[4];
                vXLColumnIndex = pXLColumn[4];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //7
                //-------------------------------------------------------------------

                // TITLE_2            상호
                vGDColumnIndex = pGDColumn[5];
                vXLColumnIndex = pXLColumn[5];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_3            성명
                vGDColumnIndex = pGDColumn[6];
                vXLColumnIndex = pXLColumn[6];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[7];
                vXLColumnIndex = pXLColumn[7];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[8];
                vXLColumnIndex = pXLColumn[8];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[9];
                vXLColumnIndex = pXLColumn[9];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[10];
                vXLColumnIndex = pXLColumn[10];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[11];
                vXLColumnIndex = pXLColumn[11];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[12];
                vXLColumnIndex = pXLColumn[12];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[13];
                vXLColumnIndex = pXLColumn[13];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[14];
                vXLColumnIndex = pXLColumn[14];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[15];
                vXLColumnIndex = pXLColumn[15];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[16];
                vXLColumnIndex = pXLColumn[16];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[17];
                vXLColumnIndex = pXLColumn[17];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[18];
                vXLColumnIndex = pXLColumn[18];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[19];
                vXLColumnIndex = pXLColumn[19];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[20];
                vXLColumnIndex = pXLColumn[20];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[21];
                vXLColumnIndex = pXLColumn[21];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[22];
                vXLColumnIndex = pXLColumn[22];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[23];
                vXLColumnIndex = pXLColumn[23];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[24];
                vXLColumnIndex = pXLColumn[24];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[25];
                vXLColumnIndex = pXLColumn[25];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[26];
                vXLColumnIndex = pXLColumn[26];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //8
                //-------------------------------------------------------------------

                // TITLE_5            법인등록번호
                vGDColumnIndex = pGDColumn[27];
                vXLColumnIndex = pXLColumn[27];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //9
                //-------------------------------------------------------------------

                // TITLE_6            사업장전화
                vGDColumnIndex = pGDColumn[28];
                vXLColumnIndex = pXLColumn[28];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_7            주소지전화
                vGDColumnIndex = pGDColumn[29];
                vXLColumnIndex = pXLColumn[29];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_8            휴대전화
                vGDColumnIndex = pGDColumn[30];
                vXLColumnIndex = pXLColumn[30];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //10
                //-------------------------------------------------------------------

                // TITLE_9            사업장주소
                vGDColumnIndex = pGDColumn[31];
                vXLColumnIndex = pXLColumn[31];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_10           전자우편주소
                vGDColumnIndex = pGDColumn[32];
                vXLColumnIndex = pXLColumn[32];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //14
                //-------------------------------------------------------------------

                // DEAL_BANK          거래은행
                vGDColumnIndex = pGDColumn[33];
                vXLColumnIndex = pXLColumn[33];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 은행", vConvertString);
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }

                // DEAL_BRANCH        거래지점
                vGDColumnIndex = pGDColumn[34];
                vXLColumnIndex = pXLColumn[34];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 지점", vConvertString);
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }

                // ACC_NO             계좌번호
                vGDColumnIndex = pGDColumn[35];
                vXLColumnIndex = pXLColumn[35];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }

                // CLOSURE_DATE_PRINT 출력용 폐업일
                vGDColumnIndex = pGDColumn[36];
                vXLColumnIndex = pXLColumn[36];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_BANK_NAME + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_BANK_NAME + 1), vXLColumnIndex, vConvertString);
                }

                // CLOSURE_REASON     폐업사유
                vGDColumnIndex = pGDColumn[37];
                vXLColumnIndex = pXLColumn[37];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_BANK_NAME + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_BANK_NAME + 1), vXLColumnIndex, vConvertString);
                }

                // TITLE_14_PRINT     출력용 작성일자
                vGDColumnIndex = pGDColumn[38];
                vXLColumnIndex = pXLColumn[38];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_ISSUER_NAME - 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_ISSUER_NAME - 1), vXLColumnIndex, vConvertString);
                }

                // TITLE_15           신고인
                vGDColumnIndex = pGDColumn[39];
                vXLColumnIndex = pXLColumn[39];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vROW_ISSUER_NAME, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vROW_ISSUER_NAME, vXLColumnIndex, vConvertString);
                }

                // TITLE_16           세무서
                vGDColumnIndex = pGDColumn[40];
                vXLColumnIndex = pXLColumn[40];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_ISSUER_NAME + 6), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_ISSUER_NAME + 6), vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                // COL1_1             과세_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[41];
                vXLColumnIndex = pXLColumn[41];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정분
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;                    
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);
                
                // COL1_2             과세_세금계산서발급분_세액
                vGDColumnIndex = pGDColumn[42];
                vXLColumnIndex = pXLColumn[42];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정분
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //16
                //-------------------------------------------------------------------
                // COL2_1             과세_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[43];
                vXLColumnIndex = pXLColumn[43];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL2_2             과세_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[44];
                vXLColumnIndex = pXLColumn[44];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정분
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //18
                //-------------------------------------------------------------------
                // COL3_1             과세_신용카드_현금영수증발행분_금액
                vGDColumnIndex = pGDColumn[45];
                vXLColumnIndex = pXLColumn[45];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL3_2             과세_신용카드_현금영수증발행분_세액
                vGDColumnIndex = pGDColumn[46];
                vXLColumnIndex = pXLColumn[46];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //20
                //-------------------------------------------------------------------

                // COL4_1             과세_기타_금액
                vGDColumnIndex = pGDColumn[47];
                vXLColumnIndex = pXLColumn[47];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL4_2             과세_기타_세액
                vGDColumnIndex = pGDColumn[48];
                vXLColumnIndex = pXLColumn[48];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //22
                //-------------------------------------------------------------------

                // COL5_1             영세율_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[49];
                vXLColumnIndex = pXLColumn[49];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //24
                //-------------------------------------------------------------------

                // COL6_1             영세율_기타_금액
                vGDColumnIndex = pGDColumn[50];
                vXLColumnIndex = pXLColumn[50];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //26
                //-------------------------------------------------------------------

                // COL7_1             예정신고누락분_금액
                vGDColumnIndex = pGDColumn[51];
                vXLColumnIndex = pXLColumn[51];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL7_2             예정신고누락분_세액
                vGDColumnIndex = pGDColumn[52];
                vXLColumnIndex = pXLColumn[52];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //28
                //-------------------------------------------------------------------

                // COL8_2             대손세액가감_세액
                vGDColumnIndex = pGDColumn[53];
                vXLColumnIndex = pXLColumn[53];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //30
                //-------------------------------------------------------------------

                // COL9_1             합계_금액
                vGDColumnIndex = pGDColumn[54];
                vXLColumnIndex = pXLColumn[54];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL9_2             합계_세액
                vGDColumnIndex = pGDColumn[55];
                vXLColumnIndex = pXLColumn[55];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //32
                //-------------------------------------------------------------------

                // COL10_1            매입_일반매입_금액
                vGDColumnIndex = pGDColumn[56];
                vXLColumnIndex = pXLColumn[56];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL10_2            매입_일반매입_세액
                vGDColumnIndex = pGDColumn[57];
                vXLColumnIndex = pXLColumn[57];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //34
                //-------------------------------------------------------------------

                // COL11_1            매입_고정자산매입_금액
                vGDColumnIndex = pGDColumn[58];
                vXLColumnIndex = pXLColumn[58];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);
                
                // COL11_2            매입_고장자산매입_세액
                vGDColumnIndex = pGDColumn[59];
                vXLColumnIndex = pXLColumn[59];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //36
                //-------------------------------------------------------------------

                // COL12_1            매입_예정신고누락분_금액
                vGDColumnIndex = pGDColumn[60];
                vXLColumnIndex = pXLColumn[60];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);
                
                // COL12_2            매입_예정신고누락분_세액
                vGDColumnIndex = pGDColumn[61];
                vXLColumnIndex = pXLColumn[61];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;

                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;

                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //38
                //-------------------------------------------------------------------

                // COL13_1            매입_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[62];
                vXLColumnIndex = pXLColumn[62];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL13_2            매입_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[63];
                vXLColumnIndex = pXLColumn[63];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //40
                //-------------------------------------------------------------------

                // COL14_1            매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[64];
                vXLColumnIndex = pXLColumn[64];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL14_2            매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[65];
                vXLColumnIndex = pXLColumn[65];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //42
                //-------------------------------------------------------------------

                // COL15_1            매입_합계_금액
                vGDColumnIndex = pGDColumn[66];
                vXLColumnIndex = pXLColumn[66];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL15_2            매입_합계_세액
                vGDColumnIndex = pGDColumn[67];
                vXLColumnIndex = pXLColumn[67];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);


                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //44
                //-------------------------------------------------------------------

                // COL16_1            매입_공제받지못할매입세액_금액
                vGDColumnIndex = pGDColumn[68];
                vXLColumnIndex = pXLColumn[68];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL16_2            매입_공제받지못할매입세액_세액
                vGDColumnIndex = pGDColumn[69];
                vXLColumnIndex = pXLColumn[69];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //46
                //-------------------------------------------------------------------

                // COL17_1            매입_차감계_금액
                vGDColumnIndex = pGDColumn[70];
                vXLColumnIndex = pXLColumn[70];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL17_2            매입_차감계_세액
                vGDColumnIndex = pGDColumn[71];
                vXLColumnIndex = pXLColumn[71];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //48
                //-------------------------------------------------------------------

                // COL_DA             납부세액
                vGDColumnIndex = pGDColumn[72];
                vXLColumnIndex = pXLColumn[72];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //50
                //-------------------------------------------------------------------

                // COL18_2            기타경감공제세액
                vGDColumnIndex = pGDColumn[73];
                vXLColumnIndex = pXLColumn[73];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //52
                //-------------------------------------------------------------------

                // COL19_2            신용카드매출전표등발행공제등
                vGDColumnIndex = pGDColumn[74];
                vXLColumnIndex = pXLColumn[74];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //54
                //-------------------------------------------------------------------

                // COL20_2            경감공제_합계
                vGDColumnIndex = pGDColumn[75];
                vXLColumnIndex = pXLColumn[75];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //56
                //-------------------------------------------------------------------

                // COL21_2            예정신고미환급세액
                vGDColumnIndex = pGDColumn[76];
                vXLColumnIndex = pXLColumn[76];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //58
                //-------------------------------------------------------------------

                // COL22_2            예정고지세액
                vGDColumnIndex = pGDColumn[77];
                vXLColumnIndex = pXLColumn[77];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //60
                //-------------------------------------------------------------------

                // COL23_2            금지금_매입자_납부특례_기납부세액
                vGDColumnIndex = pGDColumn[78];
                vXLColumnIndex = pXLColumn[78];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);                    
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //62
                //-------------------------------------------------------------------

                // COL24_2            가산세액계
                vGDColumnIndex = pGDColumn[79];
                vXLColumnIndex = pXLColumn[79];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //64
                //-------------------------------------------------------------------

                // COL25              차가감하여납부할세액
                vGDColumnIndex = pGDColumn[80];
                vXLColumnIndex = pXLColumn[80];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //66
                //-------------------------------------------------------------------
                //총괄납부사업자가 납부할 세액(환급받을 세액)
                vGDColumnIndex = pGDColumn[197];
                vXLColumnIndex = pXLColumn[197];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);


                //-------------------------------------------------------------------
                vXLine = vXLine + 10; //76
                //-------------------------------------------------------------------

                // COL26_1            과세표준_업태1
                vGDColumnIndex = pGDColumn[81];
                vXLColumnIndex = pXLColumn[81];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL26_2            과세표준_종목1
                vGDColumnIndex = pGDColumn[82];
                vXLColumnIndex = pXLColumn[82];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////

                // COL26_3            과세표준_금액1
                vGDColumnIndex = pGDColumn[83];
                vXLColumnIndex = pXLColumn[83];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //78
                //-------------------------------------------------------------------

                // COL27_1            과세표준_업태2
                vGDColumnIndex = pGDColumn[84];
                vXLColumnIndex = pXLColumn[84];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL27_2            과세표준_종목2
                vGDColumnIndex = pGDColumn[85];
                vXLColumnIndex = pXLColumn[85];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL27_3            과세표준_금액2
                vGDColumnIndex = pGDColumn[86];
                vXLColumnIndex = pXLColumn[86];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //80
                //-------------------------------------------------------------------

                // COL28_1            과세표준_업태3
                vGDColumnIndex = pGDColumn[87];
                vXLColumnIndex = pXLColumn[87];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL28_2            과세표준_종목3
                vGDColumnIndex = pGDColumn[88];
                vXLColumnIndex = pXLColumn[88];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL28_3            과세표준_금액3
                vGDColumnIndex = pGDColumn[89];
                vXLColumnIndex = pXLColumn[89];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);


                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //82
                //-------------------------------------------------------------------

                // COL29_1            과세표준_업태4
                vGDColumnIndex = pGDColumn[90];
                vXLColumnIndex = pXLColumn[90];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL29_2            과세표준_종목4
                vGDColumnIndex = pGDColumn[91];
                vXLColumnIndex = pXLColumn[91];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL29_3            과세표준_금액4
                vGDColumnIndex = pGDColumn[92];
                vXLColumnIndex = pXLColumn[92];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //84
                //-------------------------------------------------------------------

                // COL30              과세표준_합계
                vGDColumnIndex = pGDColumn[93];
                vXLColumnIndex = pXLColumn[93];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = 94; //94
                //-------------------------------------------------------------------

                // COL31_1  예정신고_매출_과세_세금계산서_금액
                vGDColumnIndex = pGDColumn[100];
                vXLColumnIndex = pXLColumn[100];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL31_2  예정신고_매출_과세_세금계산서_세액
                vGDColumnIndex = pGDColumn[101];
                vXLColumnIndex = pXLColumn[101];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //96
                //-------------------------------------------------------------------

                // COL32_1  예정신고_매출_과세_기타_금액
                vGDColumnIndex = pGDColumn[102];
                vXLColumnIndex = pXLColumn[102];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL32_2  예정신고_매출_과세_기타_세액
                vGDColumnIndex = pGDColumn[103];
                vXLColumnIndex = pXLColumn[103];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //98
                //-------------------------------------------------------------------

                // COL33_1  예정신고_매출_영세율_세금계산서
                vGDColumnIndex = pGDColumn[104];
                vXLColumnIndex = pXLColumn[104];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //100
                //-------------------------------------------------------------------

                // COL34_1  예정신고_매출_영세율_기타
                vGDColumnIndex = pGDColumn[105];
                vXLColumnIndex = pXLColumn[105];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //102
                //-------------------------------------------------------------------

                // COL35_1  예정신고_매출_합계_금액
                vGDColumnIndex = pGDColumn[106];
                vXLColumnIndex = pXLColumn[106];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL35_2  예정신고_매출_합계_세액
                vGDColumnIndex = pGDColumn[107];
                vXLColumnIndex = pXLColumn[107];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //104
                //-------------------------------------------------------------------

                // COL36_1  예정신고_매입_세금계산서_금액
                vGDColumnIndex = pGDColumn[108];
                vXLColumnIndex = pXLColumn[108];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL36_2  예정신고_매입_세금계산서_세액
                vGDColumnIndex = pGDColumn[109];
                vXLColumnIndex = pXLColumn[109];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //106
                //-------------------------------------------------------------------

                // COL37_1  예정신고_매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[110];
                vXLColumnIndex = pXLColumn[110];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL37_2  예정신고_매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[111];
                vXLColumnIndex = pXLColumn[111];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //108
                //-------------------------------------------------------------------

                // COL38_1  예정신고_매입_합계_금액
                vGDColumnIndex = pGDColumn[112];
                vXLColumnIndex = pXLColumn[112];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL38_2  예정신고_매입_합계_세액
                vGDColumnIndex = pGDColumn[113];
                vXLColumnIndex = pXLColumn[113];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //112
                //-------------------------------------------------------------------

                // COL39_1  기타공제_신용카드_일반매입_금액
                vGDColumnIndex = pGDColumn[114];
                vXLColumnIndex = pXLColumn[114];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL39_2  기타공제_신용카드_일반매입_세액
                vGDColumnIndex = pGDColumn[115];
                vXLColumnIndex = pXLColumn[115];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //114
                //-------------------------------------------------------------------

                // COL40_1  기타공제_신용카드_고정자산매입_금액
                vGDColumnIndex = pGDColumn[116];
                vXLColumnIndex = pXLColumn[116];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL40_2  기타공제_신용카드_고정자산매입_세액
                vGDColumnIndex = pGDColumn[117];
                vXLColumnIndex = pXLColumn[117];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //116
                //-------------------------------------------------------------------

                // COL41_1  기타공제_의제매입세액_금액
                vGDColumnIndex = pGDColumn[118];
                vXLColumnIndex = pXLColumn[118];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL41_2  기타공제_의제매입세액_세액
                vGDColumnIndex = pGDColumn[119];
                vXLColumnIndex = pXLColumn[119];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //118
                //-------------------------------------------------------------------

                // COL42_1  기타공제_재활용폐자원등매입세액_금액
                vGDColumnIndex = pGDColumn[120];
                vXLColumnIndex = pXLColumn[120];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL42_2  기타공제_재활용폐자원등매입세액_세액
                vGDColumnIndex = pGDColumn[121];
                vXLColumnIndex = pXLColumn[121];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //120
                //-------------------------------------------------------------------

                // COL43_1  기타공제_고금의제매입세액_금액
                vGDColumnIndex = pGDColumn[122];
                vXLColumnIndex = pXLColumn[122];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);
                
                // COL43_2  기타공제_고금의제매입세액_세액
                vGDColumnIndex = pGDColumn[123];
                vXLColumnIndex = pXLColumn[123];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //122
                //-------------------------------------------------------------------

                // COL44_2  기타공제_과세사업전환매입세액_세액
                vGDColumnIndex = pGDColumn[124];
                vXLColumnIndex = pXLColumn[124];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //124
                //-------------------------------------------------------------------

                // COL45_2  기타공제_재고매입세액_세액
                vGDColumnIndex = pGDColumn[125];
                vXLColumnIndex = pXLColumn[125];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //126
                //-------------------------------------------------------------------

                // COL46_2  기타공제_변제대손세액_세액
                vGDColumnIndex = pGDColumn[126];
                vXLColumnIndex = pXLColumn[126];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //128
                //-------------------------------------------------------------------

                // COL47_1  기타공제_합계_금액
                vGDColumnIndex = pGDColumn[127];
                vXLColumnIndex = pXLColumn[127];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL47_2  기타공제_헙계_세액
                vGDColumnIndex = pGDColumn[128];
                vXLColumnIndex = pXLColumn[128];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //132
                //-------------------------------------------------------------------

                // COL48_1  공제받지못할매입세액_공제받지못할_금액
                vGDColumnIndex = pGDColumn[129];
                vXLColumnIndex = pXLColumn[129];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL48_2  공제받지못할매입세액_공제받지못할_세액
                vGDColumnIndex = pGDColumn[130];
                vXLColumnIndex = pXLColumn[130];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //134
                //-------------------------------------------------------------------

                // COL49_1  공제받지못할매입세액_공통매입세액면세_금액
                vGDColumnIndex = pGDColumn[131];
                vXLColumnIndex = pXLColumn[131];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL49_2  공제받지못할매입세액_공통매입세액면세_세액
                vGDColumnIndex = pGDColumn[132];
                vXLColumnIndex = pXLColumn[132];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //136
                //-------------------------------------------------------------------

                // COL50_1  공제받지못할매입세액_대손처분받은세액_금액
                vGDColumnIndex = pGDColumn[133];
                vXLColumnIndex = pXLColumn[133];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL50_2  공제받지못할매입세액_대손처분받은세액_세액
                vGDColumnIndex = pGDColumn[134];
                vXLColumnIndex = pXLColumn[134];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //138
                //-------------------------------------------------------------------

                // COL51_1  공제받지못할매입세액_합계_금액
                vGDColumnIndex = pGDColumn[135];
                vXLColumnIndex = pXLColumn[135];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL51_2  공제받지못할매입세액_합계_세액
                vGDColumnIndex = pGDColumn[136];
                vXLColumnIndex = pXLColumn[136];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //142
                //-------------------------------------------------------------------

                // COL52_2  기탁경감공제세액_전자신고세액공제_세액
                vGDColumnIndex = pGDColumn[137];
                vXLColumnIndex = pXLColumn[137];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //144
                //-------------------------------------------------------------------

                // COL53_2  기타경감공제세액_전자세금계산서발급세액공제_세액
                vGDColumnIndex = pGDColumn[138];
                vXLColumnIndex = pXLColumn[138];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //146
                //-------------------------------------------------------------------

                // COL54_2  기타경감공제세액_택시운송사업자경감세액_세액
                vGDColumnIndex = pGDColumn[139];
                vXLColumnIndex = pXLColumn[139];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //148
                //-------------------------------------------------------------------

                // R_ORIGIN_PLACE_VAT  기타경감공제세액_원산지확인서 발급공제세액
                vGDColumnIndex = pGDColumn[182];
                vXLColumnIndex = pXLColumn[182];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //150
                //-------------------------------------------------------------------

                // COL55_2  기타경감공제세액_현금영수증사업자세액공제_세액
                vGDColumnIndex = pGDColumn[140];
                vXLColumnIndex = pXLColumn[140];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //152
                //-------------------------------------------------------------------

                // COL56_2  기타경감공제세액_기타_세액
                vGDColumnIndex = pGDColumn[141];
                vXLColumnIndex = pXLColumn[141];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //154
                //-------------------------------------------------------------------

                // COL57_2  기타경감공제세액_합계_세액
                vGDColumnIndex = pGDColumn[142];
                vXLColumnIndex = pXLColumn[142];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //158
                //-------------------------------------------------------------------

                // COL58_1  가산세명세_사업자미등록등_금액
                vGDColumnIndex = pGDColumn[143];
                vXLColumnIndex = pXLColumn[143];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL58_2  가산세명세_사업자미등록등_세액
                vGDColumnIndex = pGDColumn[144];
                vXLColumnIndex = pXLColumn[144];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //160
                //-------------------------------------------------------------------

                // COL59_1  가산세명세_지연발급등_금액
                vGDColumnIndex = pGDColumn[145];
                vXLColumnIndex = pXLColumn[145];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL59_2  가산세명세_지연발급등_세액
                vGDColumnIndex = pGDColumn[146];
                vXLColumnIndex = pXLColumn[146];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //162
                //-------------------------------------------------------------------

                // 가산세명세 - 세금계산서 지연수취금액
                vGDColumnIndex = pGDColumn[183];
                vXLColumnIndex = pXLColumn[183];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // 가산세명세 - 세금계산서 지연수취세액
                vGDColumnIndex = pGDColumn[184];
                vXLColumnIndex = pXLColumn[184];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //164
                //-------------------------------------------------------------------

                // COL60_1  가산세명세_미발급등_금액
                vGDColumnIndex = pGDColumn[147];
                vXLColumnIndex = pXLColumn[147];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL60_2  가산세명세_미발급등_세액
                vGDColumnIndex = pGDColumn[148];
                vXLColumnIndex = pXLColumn[148];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //166
                //-------------------------------------------------------------------

                // COL61_1  가산세명세_다음달15일이후_금액
                vGDColumnIndex = pGDColumn[149];
                vXLColumnIndex = pXLColumn[149];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL61_2  가산세명세_다음달15일이후_세액
                vGDColumnIndex = pGDColumn[150];
                vXLColumnIndex = pXLColumn[150];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //168
                //-------------------------------------------------------------------

                // COL62_1  가산세명세_과세기간다음달15일이후_미전송
                vGDColumnIndex = pGDColumn[151];
                vXLColumnIndex = pXLColumn[151];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL62_2  가산세명세_과세기간다음달15일이후_미전송
                vGDColumnIndex = pGDColumn[152];
                vXLColumnIndex = pXLColumn[152];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //170
                //-------------------------------------------------------------------

                // COL63_1  가산세명세_세금계산서합계표제출불성실_금액
                vGDColumnIndex = pGDColumn[153];
                vXLColumnIndex = pXLColumn[153];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL63_2  가산세명세_세금계산서합계표제출불성실_세액
                vGDColumnIndex = pGDColumn[154];
                vXLColumnIndex = pXLColumn[154];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //172
                //-------------------------------------------------------------------

                //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
                vGDColumnIndex = pGDColumn[185];
                vXLColumnIndex = pXLColumn[185];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
                vGDColumnIndex = pGDColumn[186];
                vXLColumnIndex = pXLColumn[186];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //174
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[187];
                vXLColumnIndex = pXLColumn[187];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[188];
                vXLColumnIndex = pXLColumn[188];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //176
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
                vGDColumnIndex = pGDColumn[189];
                vXLColumnIndex = pXLColumn[189];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
                vGDColumnIndex = pGDColumn[190];
                vXLColumnIndex = pXLColumn[190];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //178
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[191];
                vXLColumnIndex = pXLColumn[191];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[192];
                vXLColumnIndex = pXLColumn[192];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //180
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
                vGDColumnIndex = pGDColumn[193];
                vXLColumnIndex = pXLColumn[193];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
                vGDColumnIndex = pGDColumn[194];
                vXLColumnIndex = pXLColumn[194];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //182
                //-------------------------------------------------------------------

                //가산세명세_납부불성실_금액
                vGDColumnIndex = pGDColumn[157];
                vXLColumnIndex = pXLColumn[157];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세_납부불성실_세액
                vGDColumnIndex = pGDColumn[158];
                vXLColumnIndex = pXLColumn[158];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //184
                //-------------------------------------------------------------------

                // COL66_1  가산세명세_영세율과세표준신고불성실_금액
                vGDColumnIndex = pGDColumn[159];
                vXLColumnIndex = pXLColumn[159];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL66_2  가산세명세_영세율과세표준신고불성실_세액
                vGDColumnIndex = pGDColumn[160];
                vXLColumnIndex = pXLColumn[160];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //186
                //-------------------------------------------------------------------

                // COL67_1  가산세명세_현금매출명세서미제출등_금액
                vGDColumnIndex = pGDColumn[161];
                vXLColumnIndex = pXLColumn[161];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL67_2  가산세명세_현금매출명세서미제출등_세액
                vGDColumnIndex = pGDColumn[162];
                vXLColumnIndex = pXLColumn[162];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //188
                //-------------------------------------------------------------------

                //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
                vGDColumnIndex = pGDColumn[195];
                vXLColumnIndex = pXLColumn[195];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 
                vGDColumnIndex = pGDColumn[196];
                vXLColumnIndex = pXLColumn[196];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //190
                //-------------------------------------------------------------------

                // COL68_2  가산세명세_합계_세액
                vGDColumnIndex = pGDColumn[163];
                vXLColumnIndex = pXLColumn[163];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //194
                //-------------------------------------------------------------------

                // COL69_1  면세사업수입금액_업태1
                vGDColumnIndex = pGDColumn[164];
                vXLColumnIndex = pXLColumn[164];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL69_2  면세사업수입금액_종목1
                vGDColumnIndex = pGDColumn[165];
                vXLColumnIndex = pXLColumn[165];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL69_3  면세사업수입금액_금액1
                vGDColumnIndex = pGDColumn[166];
                vXLColumnIndex = pXLColumn[166];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //196
                //-------------------------------------------------------------------

                // COL70_1  면세사업수입금액_업태2
                vGDColumnIndex = pGDColumn[167];
                vXLColumnIndex = pXLColumn[167];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL70_2  면세사업수입금액_종목2
                vGDColumnIndex = pGDColumn[168];
                vXLColumnIndex = pXLColumn[168];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL70_3  면세사업수입금액_금액2
                vGDColumnIndex = pGDColumn[169];
                vXLColumnIndex = pXLColumn[169];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //198
                //-------------------------------------------------------------------

                // COL71_1  면세사업수입금액_업태3
                vGDColumnIndex = pGDColumn[170];
                vXLColumnIndex = pXLColumn[170];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL71_2  면세사업수입금액_종목3
                vGDColumnIndex = pGDColumn[171];
                vXLColumnIndex = pXLColumn[171];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL71_3  면세사업수입금액_금액3
                vGDColumnIndex = pGDColumn[172];
                vXLColumnIndex = pXLColumn[172];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //200
                //-------------------------------------------------------------------

                // COL72    면세사업수입금액_합계
                vGDColumnIndex = pGDColumn[173];
                vXLColumnIndex = pXLColumn[173];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //203
                //-------------------------------------------------------------------

                // COL73    계산서발급금액
                vGDColumnIndex = pGDColumn[180];
                vXLColumnIndex = pXLColumn[180];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //205
                //-------------------------------------------------------------------

                // COL74    계산서수취금액
                vGDColumnIndex = pGDColumn[181];
                vXLColumnIndex = pXLColumn[181];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 1;
                //-------------------------------------------------------------------
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mAppInterface.OnAppMessageEvent(mMessageError);
                System.Windows.Forms.Application.DoEvents();
            }

            return vXLine;
        }

        private int XL_WRITE_02_201401(System.Data.DataRow pRow, System.Data.DataRow pRow_01, int[] pGDColumn, int[] pXLColumn)
        {
            int vXLine = 2; //엑셀에 내용이 표시되는 행 번호

            int vROW_VAT_TAX_NUM = 93; //사업자등록번호_2장
            int vROW_BANK_NAME = 71; //거래은행_1장
            int vROW_ISSUER_NAME = 78; //신고인_1장

            int vGDColumnIndex = 0;
            int vXLColumnIndex = 0;

            object vObject = null;
            string vConvertString = string.Empty;
            decimal vConvertDecimal = 0m;
            bool IsConvert = false;
            bool IsBUSINESS_ITEM_CODE = false;

            try
            {
                mPrinting.XLActiveSheet("DESTINATION");

                // GUBUN_1      신고서구분_예정
                vGDColumnIndex = pGDColumn[0];
                vXLColumnIndex = pXLColumn[0];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // GUBUN_2      신고서구분_확정
                vGDColumnIndex = pGDColumn[1];
                vXLColumnIndex = pXLColumn[1];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //3
                //-------------------------------------------------------------------

                // GUBUN_3      신고서구분_기한후과세표준
                vGDColumnIndex = pGDColumn[2];
                vXLColumnIndex = pXLColumn[2];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //4
                //-------------------------------------------------------------------

                // GUBUN_4      신고서구분_영세율등조기환급
                vGDColumnIndex = pGDColumn[3];
                vXLColumnIndex = pXLColumn[3];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    if (vConvertString == "Y")
                    {
                        vConvertString = "√";
                    }
                    else
                    {
                        vConvertString = string.Empty;
                    }
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //6
                //-------------------------------------------------------------------

                // FISCAL_YEAR  신고기간_출력용
                vGDColumnIndex = pGDColumn[4];
                vXLColumnIndex = pXLColumn[4];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //7
                //-------------------------------------------------------------------

                // TITLE_2            상호
                vGDColumnIndex = pGDColumn[5];
                vXLColumnIndex = pXLColumn[5];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_3            성명
                vGDColumnIndex = pGDColumn[6];
                vXLColumnIndex = pXLColumn[6];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[7];
                vXLColumnIndex = pXLColumn[7];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[8];
                vXLColumnIndex = pXLColumn[8];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[9];
                vXLColumnIndex = pXLColumn[9];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[10];
                vXLColumnIndex = pXLColumn[10];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[11];
                vXLColumnIndex = pXLColumn[11];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[12];
                vXLColumnIndex = pXLColumn[12];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[13];
                vXLColumnIndex = pXLColumn[13];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[14];
                vXLColumnIndex = pXLColumn[14];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[15];
                vXLColumnIndex = pXLColumn[15];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[16];
                vXLColumnIndex = pXLColumn[16];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_4_01         출력용 사업자등록번호_01
                vGDColumnIndex = pGDColumn[17];
                vXLColumnIndex = pXLColumn[17];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_02         출력용 사업자등록번호_02
                vGDColumnIndex = pGDColumn[18];
                vXLColumnIndex = pXLColumn[18];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_03         출력용 사업자등록번호_03
                vGDColumnIndex = pGDColumn[19];
                vXLColumnIndex = pXLColumn[19];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_04         출력용 사업자등록번호_04
                vGDColumnIndex = pGDColumn[20];
                vXLColumnIndex = pXLColumn[20];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_05         출력용 사업자등록번호_05
                vGDColumnIndex = pGDColumn[21];
                vXLColumnIndex = pXLColumn[21];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_06         출력용 사업자등록번호_06
                vGDColumnIndex = pGDColumn[22];
                vXLColumnIndex = pXLColumn[22];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_07         출력용 사업자등록번호_07
                vGDColumnIndex = pGDColumn[23];
                vXLColumnIndex = pXLColumn[23];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_08         출력용 사업자등록번호_08
                vGDColumnIndex = pGDColumn[24];
                vXLColumnIndex = pXLColumn[24];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_09         출력용 사업자등록번호_09
                vGDColumnIndex = pGDColumn[25];
                vXLColumnIndex = pXLColumn[25];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                // TITLE_4_10         출력용 사업자등록번호_10
                vGDColumnIndex = pGDColumn[26];
                vXLColumnIndex = pXLColumn[26];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_VAT_TAX_NUM), vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //8
                //-------------------------------------------------------------------

                // TITLE_5            법인등록번호
                vGDColumnIndex = pGDColumn[27];
                vXLColumnIndex = pXLColumn[27];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //9
                //-------------------------------------------------------------------

                // TITLE_6            사업장전화
                vGDColumnIndex = pGDColumn[28];
                vXLColumnIndex = pXLColumn[28];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_7            주소지전화
                vGDColumnIndex = pGDColumn[29];
                vXLColumnIndex = pXLColumn[29];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_8            휴대전화
                vGDColumnIndex = pGDColumn[30];
                vXLColumnIndex = pXLColumn[30];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 1; //10
                //-------------------------------------------------------------------

                // TITLE_9            사업장주소
                vGDColumnIndex = pGDColumn[31];
                vXLColumnIndex = pXLColumn[31];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // TITLE_10           전자우편주소
                vGDColumnIndex = pGDColumn[32];
                vXLColumnIndex = pXLColumn[32];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //14
                //-------------------------------------------------------------------

                // DEAL_BANK          거래은행
                vGDColumnIndex = pGDColumn[33];
                vXLColumnIndex = pXLColumn[33];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 은행", vConvertString);
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }

                // DEAL_BRANCH        거래지점
                vGDColumnIndex = pGDColumn[34];
                vXLColumnIndex = pXLColumn[34];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0} 지점", vConvertString);
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }

                // ACC_NO             계좌번호
                vGDColumnIndex = pGDColumn[35];
                vXLColumnIndex = pXLColumn[35];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vROW_BANK_NAME, vXLColumnIndex, vConvertString);
                }

                // CLOSURE_DATE_PRINT 출력용 폐업일
                vGDColumnIndex = pGDColumn[36];
                vXLColumnIndex = pXLColumn[36];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_BANK_NAME + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_BANK_NAME + 1), vXLColumnIndex, vConvertString);
                }

                // CLOSURE_REASON     폐업사유
                vGDColumnIndex = pGDColumn[37];
                vXLColumnIndex = pXLColumn[37];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_BANK_NAME + 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_BANK_NAME + 1), vXLColumnIndex, vConvertString);
                }

                // TITLE_14_PRINT     출력용 작성일자
                vGDColumnIndex = pGDColumn[38];
                vXLColumnIndex = pXLColumn[38];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_ISSUER_NAME - 1), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_ISSUER_NAME - 1), vXLColumnIndex, vConvertString);
                }

                // TITLE_15           신고인
                vGDColumnIndex = pGDColumn[39];
                vXLColumnIndex = pXLColumn[39];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vROW_ISSUER_NAME, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vROW_ISSUER_NAME, vXLColumnIndex, vConvertString);
                }

                // TITLE_16           세무서
                vGDColumnIndex = pGDColumn[40];
                vXLColumnIndex = pXLColumn[40];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell((vROW_ISSUER_NAME + 6), vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell((vROW_ISSUER_NAME + 6), vXLColumnIndex, vConvertString);
                }

                //-------------------------------------------------------------------
                // COL1_1             과세_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[41];
                vXLColumnIndex = pXLColumn[41];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정분
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL1_2             과세_세금계산서발급분_세액
                vGDColumnIndex = pGDColumn[42];
                vXLColumnIndex = pXLColumn[42];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정분
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //16
                //-------------------------------------------------------------------
                // COL2_1             과세_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[43];
                vXLColumnIndex = pXLColumn[43];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL2_2             과세_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[44];
                vXLColumnIndex = pXLColumn[44];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정분
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //18
                //-------------------------------------------------------------------
                // COL3_1             과세_신용카드_현금영수증발행분_금액
                vGDColumnIndex = pGDColumn[45];
                vXLColumnIndex = pXLColumn[45];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL3_2             과세_신용카드_현금영수증발행분_세액
                vGDColumnIndex = pGDColumn[46];
                vXLColumnIndex = pXLColumn[46];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //20
                //-------------------------------------------------------------------

                // COL4_1             과세_기타_금액
                vGDColumnIndex = pGDColumn[47];
                vXLColumnIndex = pXLColumn[47];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL4_2             과세_기타_세액
                vGDColumnIndex = pGDColumn[48];
                vXLColumnIndex = pXLColumn[48];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //22
                //-------------------------------------------------------------------

                // COL5_1             영세율_세금계산서발급분_금액
                vGDColumnIndex = pGDColumn[49];
                vXLColumnIndex = pXLColumn[49];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //24
                //-------------------------------------------------------------------

                // COL6_1             영세율_기타_금액
                vGDColumnIndex = pGDColumn[50];
                vXLColumnIndex = pXLColumn[50];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //26
                //-------------------------------------------------------------------

                // COL7_1             예정신고누락분_금액
                vGDColumnIndex = pGDColumn[51];
                vXLColumnIndex = pXLColumn[51];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL7_2             예정신고누락분_세액
                vGDColumnIndex = pGDColumn[52];
                vXLColumnIndex = pXLColumn[52];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //28
                //-------------------------------------------------------------------

                // COL8_2             대손세액가감_세액
                vGDColumnIndex = pGDColumn[53];
                vXLColumnIndex = pXLColumn[53];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //30
                //-------------------------------------------------------------------

                // COL9_1             합계_금액
                vGDColumnIndex = pGDColumn[54];
                vXLColumnIndex = pXLColumn[54];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL9_2             합계_세액
                vGDColumnIndex = pGDColumn[55];
                vXLColumnIndex = pXLColumn[55];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //32
                //-------------------------------------------------------------------

                // COL10_1            매입_일반매입_금액
                vGDColumnIndex = pGDColumn[56];
                vXLColumnIndex = pXLColumn[56];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL10_2            매입_일반매입_세액
                vGDColumnIndex = pGDColumn[57];
                vXLColumnIndex = pXLColumn[57];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //34
                //-------------------------------------------------------------------

                // COL11_1            매입_고정자산매입_금액
                vGDColumnIndex = pGDColumn[58];
                vXLColumnIndex = pXLColumn[58];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL11_2            매입_고장자산매입_세액
                vGDColumnIndex = pGDColumn[59];
                vXLColumnIndex = pXLColumn[59];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //36
                //-------------------------------------------------------------------

                // COL12_1            매입_예정신고누락분_금액
                vGDColumnIndex = pGDColumn[60];
                vXLColumnIndex = pXLColumn[60];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL12_2            매입_예정신고누락분_세액
                vGDColumnIndex = pGDColumn[61];
                vXLColumnIndex = pXLColumn[61];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;

                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;

                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //38
                //-------------------------------------------------------------------

                // COL13_1            매입_매입자발행세금계산서_금액
                vGDColumnIndex = pGDColumn[62];
                vXLColumnIndex = pXLColumn[62];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL13_2            매입_매입자발행세금계산서_세액
                vGDColumnIndex = pGDColumn[63];
                vXLColumnIndex = pXLColumn[63];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //40
                //-------------------------------------------------------------------

                // COL14_1            매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[64];
                vXLColumnIndex = pXLColumn[64];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL14_2            매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[65];
                vXLColumnIndex = pXLColumn[65];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //42
                //-------------------------------------------------------------------

                // COL15_1            매입_합계_금액
                vGDColumnIndex = pGDColumn[66];
                vXLColumnIndex = pXLColumn[66];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL15_2            매입_합계_세액
                vGDColumnIndex = pGDColumn[67];
                vXLColumnIndex = pXLColumn[67];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);


                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //44
                //-------------------------------------------------------------------

                // COL16_1            매입_공제받지못할매입세액_금액
                vGDColumnIndex = pGDColumn[68];
                vXLColumnIndex = pXLColumn[68];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL16_2            매입_공제받지못할매입세액_세액
                vGDColumnIndex = pGDColumn[69];
                vXLColumnIndex = pXLColumn[69];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //46
                //-------------------------------------------------------------------

                // COL17_1            매입_차감계_금액
                vGDColumnIndex = pGDColumn[70];
                vXLColumnIndex = pXLColumn[70];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL17_2            매입_차감계_세액
                vGDColumnIndex = pGDColumn[71];
                vXLColumnIndex = pXLColumn[71];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //48
                //-------------------------------------------------------------------

                // COL_DA             납부세액
                vGDColumnIndex = pGDColumn[72];
                vXLColumnIndex = pXLColumn[72];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //50
                //-------------------------------------------------------------------

                // COL18_2            기타경감공제세액
                vGDColumnIndex = pGDColumn[73];
                vXLColumnIndex = pXLColumn[73];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //52
                //-------------------------------------------------------------------

                // COL19_2            신용카드매출전표등발행공제등
                vGDColumnIndex = pGDColumn[74];
                vXLColumnIndex = pXLColumn[74];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //54
                //-------------------------------------------------------------------

                // COL20_2            경감공제_합계
                vGDColumnIndex = pGDColumn[75];
                vXLColumnIndex = pXLColumn[75];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //56
                //-------------------------------------------------------------------

                // COL21_2            예정신고미환급세액
                vGDColumnIndex = pGDColumn[76];
                vXLColumnIndex = pXLColumn[76];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //58
                //-------------------------------------------------------------------

                // COL22_2            예정고지세액
                vGDColumnIndex = pGDColumn[77];
                vXLColumnIndex = pXLColumn[77];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //60
                //-------------------------------------------------------------------

                // PROXY_PAY_TAX_VAT            사업양수자의 대리납부 기납부세액 
                vGDColumnIndex = pGDColumn[202];
                vXLColumnIndex = pXLColumn[202];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //61
                //-------------------------------------------------------------------

                // SPECIAL_PAY_TAX_VAT            매입자 납부특례 기납부세액 
                vGDColumnIndex = pGDColumn[203];
                vXLColumnIndex = pXLColumn[203];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //62
                //-------------------------------------------------------------------

                // COL24_2            가산세액계
                vGDColumnIndex = pGDColumn[79];
                vXLColumnIndex = pXLColumn[79];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //64
                //-------------------------------------------------------------------

                // COL25              차가감하여납부할세액
                vGDColumnIndex = pGDColumn[80];
                vXLColumnIndex = pXLColumn[80];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //66
                //-------------------------------------------------------------------
                //총괄납부사업자가 납부할 세액(환급받을 세액)
                vGDColumnIndex = pGDColumn[197];
                vXLColumnIndex = pXLColumn[197];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);


                //-------------------------------------------------------------------
                vXLine = vXLine + 10; //76
                //-------------------------------------------------------------------

                // COL26_1            과세표준_업태1
                vGDColumnIndex = pGDColumn[81];
                vXLColumnIndex = pXLColumn[81];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL26_2            과세표준_종목1
                vGDColumnIndex = pGDColumn[82];
                vXLColumnIndex = pXLColumn[82];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL26_4            과세표준_종목1 생산요소
                vGDColumnIndex = pGDColumn[198];
                vXLColumnIndex = pXLColumn[198];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////

                // COL26_3            과세표준_금액1
                vGDColumnIndex = pGDColumn[83];
                vXLColumnIndex = pXLColumn[83];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //78
                //-------------------------------------------------------------------

                // COL27_1            과세표준_업태2
                vGDColumnIndex = pGDColumn[84];
                vXLColumnIndex = pXLColumn[84];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL27_2            과세표준_종목2
                vGDColumnIndex = pGDColumn[85];
                vXLColumnIndex = pXLColumn[85];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL27_4            과세표준_종목2 생산요소
                vGDColumnIndex = pGDColumn[199];
                vXLColumnIndex = pXLColumn[199];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL27_3            과세표준_금액2
                vGDColumnIndex = pGDColumn[86];
                vXLColumnIndex = pXLColumn[86];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //80
                //-------------------------------------------------------------------

                // COL28_1            과세표준_업태3
                vGDColumnIndex = pGDColumn[87];
                vXLColumnIndex = pXLColumn[87];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL28_2            과세표준_종목3
                vGDColumnIndex = pGDColumn[88];
                vXLColumnIndex = pXLColumn[88];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL28_4            과세표준_종목3 생산요소
                vGDColumnIndex = pGDColumn[200];
                vXLColumnIndex = pXLColumn[200];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL28_3            과세표준_금액3
                vGDColumnIndex = pGDColumn[89];
                vXLColumnIndex = pXLColumn[89];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);


                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //82
                //-------------------------------------------------------------------

                // COL29_1            과세표준_업태4
                vGDColumnIndex = pGDColumn[90];
                vXLColumnIndex = pXLColumn[90];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL29_2            과세표준_종목4
                vGDColumnIndex = pGDColumn[91];
                vXLColumnIndex = pXLColumn[91];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                // COL29_4            과세표준_종목4 생산요소
                vGDColumnIndex = pGDColumn[201];
                vXLColumnIndex = pXLColumn[201];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {
                    vGDColumnIndex = pGDColumn[94];
                    vXLColumnIndex = pXLColumn[94];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2         출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[95];
                    vXLColumnIndex = pXLColumn[95];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3         출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[96];
                    vXLColumnIndex = pXLColumn[96];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4         출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[97];
                    vXLColumnIndex = pXLColumn[97];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5         출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[98];
                    vXLColumnIndex = pXLColumn[98];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6         출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[99];
                    vXLColumnIndex = pXLColumn[99];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL29_3            과세표준_금액4
                vGDColumnIndex = pGDColumn[92];
                vXLColumnIndex = pXLColumn[92];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //84
                //-------------------------------------------------------------------

                // COL30              과세표준_합계
                vGDColumnIndex = pGDColumn[93];
                vXLColumnIndex = pXLColumn[93];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = 94; //94
                //-------------------------------------------------------------------

                // COL31_1  예정신고_매출_과세_세금계산서_금액
                vGDColumnIndex = pGDColumn[100];
                vXLColumnIndex = pXLColumn[100];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL31_2  예정신고_매출_과세_세금계산서_세액
                vGDColumnIndex = pGDColumn[101];
                vXLColumnIndex = pXLColumn[101];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //96
                //-------------------------------------------------------------------

                // COL32_1  예정신고_매출_과세_기타_금액
                vGDColumnIndex = pGDColumn[102];
                vXLColumnIndex = pXLColumn[102];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL32_2  예정신고_매출_과세_기타_세액
                vGDColumnIndex = pGDColumn[103];
                vXLColumnIndex = pXLColumn[103];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //98
                //-------------------------------------------------------------------

                // COL33_1  예정신고_매출_영세율_세금계산서
                vGDColumnIndex = pGDColumn[104];
                vXLColumnIndex = pXLColumn[104];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //100
                //-------------------------------------------------------------------

                // COL34_1  예정신고_매출_영세율_기타
                vGDColumnIndex = pGDColumn[105];
                vXLColumnIndex = pXLColumn[105];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //102
                //-------------------------------------------------------------------

                // COL35_1  예정신고_매출_합계_금액
                vGDColumnIndex = pGDColumn[106];
                vXLColumnIndex = pXLColumn[106];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL35_2  예정신고_매출_합계_세액
                vGDColumnIndex = pGDColumn[107];
                vXLColumnIndex = pXLColumn[107];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //104
                //-------------------------------------------------------------------

                // COL36_1  예정신고_매입_세금계산서_금액
                vGDColumnIndex = pGDColumn[108];
                vXLColumnIndex = pXLColumn[108];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL36_2  예정신고_매입_세금계산서_세액
                vGDColumnIndex = pGDColumn[109];
                vXLColumnIndex = pXLColumn[109];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //106
                //-------------------------------------------------------------------

                // COL37_1  예정신고_매입_기타공제매입세액_금액
                vGDColumnIndex = pGDColumn[110];
                vXLColumnIndex = pXLColumn[110];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL37_2  예정신고_매입_기타공제매입세액_세액
                vGDColumnIndex = pGDColumn[111];
                vXLColumnIndex = pXLColumn[111];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //108
                //-------------------------------------------------------------------

                // COL38_1  예정신고_매입_합계_금액
                vGDColumnIndex = pGDColumn[112];
                vXLColumnIndex = pXLColumn[112];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL38_2  예정신고_매입_합계_세액
                vGDColumnIndex = pGDColumn[113];
                vXLColumnIndex = pXLColumn[113];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //112
                //-------------------------------------------------------------------

                // COL39_1  기타공제_신용카드_일반매입_금액
                vGDColumnIndex = pGDColumn[114];
                vXLColumnIndex = pXLColumn[114];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL39_2  기타공제_신용카드_일반매입_세액
                vGDColumnIndex = pGDColumn[115];
                vXLColumnIndex = pXLColumn[115];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //114
                //-------------------------------------------------------------------

                // COL40_1  기타공제_신용카드_고정자산매입_금액
                vGDColumnIndex = pGDColumn[116];
                vXLColumnIndex = pXLColumn[116];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL40_2  기타공제_신용카드_고정자산매입_세액
                vGDColumnIndex = pGDColumn[117];
                vXLColumnIndex = pXLColumn[117];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //116
                //-------------------------------------------------------------------

                // COL41_1  기타공제_의제매입세액_금액
                vGDColumnIndex = pGDColumn[118];
                vXLColumnIndex = pXLColumn[118];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL41_2  기타공제_의제매입세액_세액
                vGDColumnIndex = pGDColumn[119];
                vXLColumnIndex = pXLColumn[119];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //118
                //-------------------------------------------------------------------

                // COL42_1  기타공제_재활용폐자원등매입세액_금액
                vGDColumnIndex = pGDColumn[120];
                vXLColumnIndex = pXLColumn[120];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL42_2  기타공제_재활용폐자원등매입세액_세액
                vGDColumnIndex = pGDColumn[121];
                vXLColumnIndex = pXLColumn[121];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //120
                //-------------------------------------------------------------------

                // COL44_2  기타공제_과세사업전환매입세액_세액
                vGDColumnIndex = pGDColumn[124];
                vXLColumnIndex = pXLColumn[124];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //124
                //-------------------------------------------------------------------

                // COL45_2  기타공제_재고매입세액_세액
                vGDColumnIndex = pGDColumn[125];
                vXLColumnIndex = pXLColumn[125];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //126
                //-------------------------------------------------------------------

                // COL46_2  기타공제_변제대손세액_세액
                vGDColumnIndex = pGDColumn[126];
                vXLColumnIndex = pXLColumn[126];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //126
                //-------------------------------------------------------------------

                // E_FORE_TOUR_REFUND_VAT  외국인 관광객에 대한 환급세액 
                vGDColumnIndex = pGDColumn[204];
                vXLColumnIndex = pXLColumn[204];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //128
                //-------------------------------------------------------------------

                // COL47_1  기타공제_합계_금액
                vGDColumnIndex = pGDColumn[127];
                vXLColumnIndex = pXLColumn[127];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL47_2  기타공제_합계_세액
                vGDColumnIndex = pGDColumn[128];
                vXLColumnIndex = pXLColumn[128];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //132
                //-------------------------------------------------------------------

                // COL48_1  공제받지못할매입세액_공제받지못할_금액
                vGDColumnIndex = pGDColumn[129];
                vXLColumnIndex = pXLColumn[129];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL48_2  공제받지못할매입세액_공제받지못할_세액
                vGDColumnIndex = pGDColumn[130];
                vXLColumnIndex = pXLColumn[130];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //134
                //-------------------------------------------------------------------

                // COL49_1  공제받지못할매입세액_공통매입세액면세_금액
                vGDColumnIndex = pGDColumn[131];
                vXLColumnIndex = pXLColumn[131];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL49_2  공제받지못할매입세액_공통매입세액면세_세액
                vGDColumnIndex = pGDColumn[132];
                vXLColumnIndex = pXLColumn[132];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //136
                //-------------------------------------------------------------------

                // COL50_1  공제받지못할매입세액_대손처분받은세액_금액
                vGDColumnIndex = pGDColumn[133];
                vXLColumnIndex = pXLColumn[133];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL50_2  공제받지못할매입세액_대손처분받은세액_세액
                vGDColumnIndex = pGDColumn[134];
                vXLColumnIndex = pXLColumn[134];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //138
                //-------------------------------------------------------------------

                // COL51_1  공제받지못할매입세액_합계_금액
                vGDColumnIndex = pGDColumn[135];
                vXLColumnIndex = pXLColumn[135];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL51_2  공제받지못할매입세액_합계_세액
                vGDColumnIndex = pGDColumn[136];
                vXLColumnIndex = pXLColumn[136];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //142
                //-------------------------------------------------------------------

                // COL52_2  기타경감공제세액_전자신고세액공제_세액
                vGDColumnIndex = pGDColumn[137];
                vXLColumnIndex = pXLColumn[137];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //144
                //-------------------------------------------------------------------

                // COL53_2  기타경감공제세액_전자세금계산서발급세액공제_세액
                vGDColumnIndex = pGDColumn[138];
                vXLColumnIndex = pXLColumn[138];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //146
                //-------------------------------------------------------------------

                // COL54_2  기타경감공제세액_택시운송사업자경감세액_세액
                vGDColumnIndex = pGDColumn[139];
                vXLColumnIndex = pXLColumn[139];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);
                
                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //150
                //-------------------------------------------------------------------

                // COL55_2  기타경감공제세액_현금영수증사업자세액공제_세액
                vGDColumnIndex = pGDColumn[140];
                vXLColumnIndex = pXLColumn[140];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //152
                //-------------------------------------------------------------------

                // COL56_2  기타경감공제세액_기타_세액
                vGDColumnIndex = pGDColumn[141];
                vXLColumnIndex = pXLColumn[141];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //154
                //-------------------------------------------------------------------

                // COL57_2  기타경감공제세액_합계_세액
                vGDColumnIndex = pGDColumn[142];
                vXLColumnIndex = pXLColumn[142];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //158
                //-------------------------------------------------------------------

                // COL58_1  가산세명세_사업자미등록등_금액
                vGDColumnIndex = pGDColumn[143];
                vXLColumnIndex = pXLColumn[143];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL58_2  가산세명세_사업자미등록등_세액
                vGDColumnIndex = pGDColumn[144];
                vXLColumnIndex = pXLColumn[144];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //160
                //-------------------------------------------------------------------

                // COL59_1  가산세명세_지연발급등_금액
                vGDColumnIndex = pGDColumn[145];
                vXLColumnIndex = pXLColumn[145];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL59_2  가산세명세_지연발급등_세액
                vGDColumnIndex = pGDColumn[146];
                vXLColumnIndex = pXLColumn[146];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //162
                //-------------------------------------------------------------------

                // 가산세명세 - 세금계산서 지연수취금액
                vGDColumnIndex = pGDColumn[183];
                vXLColumnIndex = pXLColumn[183];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // 가산세명세 - 세금계산서 지연수취세액
                vGDColumnIndex = pGDColumn[184];
                vXLColumnIndex = pXLColumn[184];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //164
                //-------------------------------------------------------------------

                // COL60_1  가산세명세_미발급등_금액
                vGDColumnIndex = pGDColumn[147];
                vXLColumnIndex = pXLColumn[147];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL60_2  가산세명세_미발급등_세액
                vGDColumnIndex = pGDColumn[148];
                vXLColumnIndex = pXLColumn[148];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //166
                //-------------------------------------------------------------------

                // COL61_1  가산세명세_다음달15일이후_금액
                vGDColumnIndex = pGDColumn[149];
                vXLColumnIndex = pXLColumn[149];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL61_2  가산세명세_다음달15일이후_세액
                vGDColumnIndex = pGDColumn[150];
                vXLColumnIndex = pXLColumn[150];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //168
                //-------------------------------------------------------------------

                // COL62_1  가산세명세_과세기간다음달15일이후_미전송
                vGDColumnIndex = pGDColumn[151];
                vXLColumnIndex = pXLColumn[151];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL62_2  가산세명세_과세기간다음달15일이후_미전송
                vGDColumnIndex = pGDColumn[152];
                vXLColumnIndex = pXLColumn[152];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //170
                //-------------------------------------------------------------------

                // COL63_1  가산세명세_세금계산서합계표제출불성실_금액
                vGDColumnIndex = pGDColumn[153];
                vXLColumnIndex = pXLColumn[153];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL63_2  가산세명세_세금계산서합계표제출불성실_세액
                vGDColumnIndex = pGDColumn[154];
                vXLColumnIndex = pXLColumn[154];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //172
                //-------------------------------------------------------------------

                //가산세명세 - 세금계산서 합계표 지연제출(AMT-금액) 
                vGDColumnIndex = pGDColumn[185];
                vXLColumnIndex = pXLColumn[185];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 세금계산서 합계표 지연제출(VAT-세액)
                vGDColumnIndex = pGDColumn[186];
                vXLColumnIndex = pXLColumn[186];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //174
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[187];
                vXLColumnIndex = pXLColumn[187];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 신고불성실(VAT-세액)-무신고(일반) 
                vGDColumnIndex = pGDColumn[188];
                vXLColumnIndex = pXLColumn[188];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //176
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-무신고(부당) 
                vGDColumnIndex = pGDColumn[189];
                vXLColumnIndex = pXLColumn[189];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 신고불성실(VAT-세액)-무신고(부당)
                vGDColumnIndex = pGDColumn[190];
                vXLColumnIndex = pXLColumn[190];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //178
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[191];
                vXLColumnIndex = pXLColumn[191];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(일반) 
                vGDColumnIndex = pGDColumn[192];
                vXLColumnIndex = pXLColumn[192];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //180
                //-------------------------------------------------------------------

                //가산세명세 - 신고불성실(AMT-금액)-과소/초과 환급신고(부당)
                vGDColumnIndex = pGDColumn[193];
                vXLColumnIndex = pXLColumn[193];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 신고불성실(VAT-세액)-과소/초과 환급신고(부당) 
                vGDColumnIndex = pGDColumn[194];
                vXLColumnIndex = pXLColumn[194];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //182
                //-------------------------------------------------------------------

                //가산세명세_납부불성실_금액
                vGDColumnIndex = pGDColumn[157];
                vXLColumnIndex = pXLColumn[157];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세_납부불성실_세액
                vGDColumnIndex = pGDColumn[158];
                vXLColumnIndex = pXLColumn[158];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //184
                //-------------------------------------------------------------------

                // COL66_1  가산세명세_영세율과세표준신고불성실_금액
                vGDColumnIndex = pGDColumn[159];
                vXLColumnIndex = pXLColumn[159];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL66_2  가산세명세_영세율과세표준신고불성실_세액
                vGDColumnIndex = pGDColumn[160];
                vXLColumnIndex = pXLColumn[160];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //186
                //-------------------------------------------------------------------

                // COL67_1  가산세명세_현금매출명세서미제출등_금액
                vGDColumnIndex = pGDColumn[161];
                vXLColumnIndex = pXLColumn[161];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                // COL67_2  가산세명세_현금매출명세서미제출등_세액
                vGDColumnIndex = pGDColumn[162];
                vXLColumnIndex = pXLColumn[162];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //188
                //-------------------------------------------------------------------

                //가산세명세 - 부동산임대공급가액명세서 불성실(AMT-금액) 
                vGDColumnIndex = pGDColumn[195];
                vXLColumnIndex = pXLColumn[195];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - 부동산임대공급가액명세서 불성실(VAT-세액) 
                vGDColumnIndex = pGDColumn[196];
                vXLColumnIndex = pXLColumn[196];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //189
                //-------------------------------------------------------------------

                //가산세명세 - A_MISS_DEAL_ACCOUNT_AMT 매입자 납부특례 거래계좌 미사용 AMT 
                vGDColumnIndex = pGDColumn[205];
                vXLColumnIndex = pXLColumn[205];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - A_MISS_DEAL_ACCOUNT_VAT 매입자 납부특례 거래계좌 미사용 VAT
                vGDColumnIndex = pGDColumn[206];
                vXLColumnIndex = pXLColumn[206];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //190
                //-------------------------------------------------------------------

                //가산세명세 - A_DELAY_PAYMENT_AMT 매입자 납부특례 거래계좌 지연입금 AMT 
                vGDColumnIndex = pGDColumn[207];
                vXLColumnIndex = pXLColumn[207];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //가산세명세 - A_DELAY_PAYMENT_VAT 매입자 납부특례 거래계좌 지연입금 VAT 
                vGDColumnIndex = pGDColumn[208];
                vXLColumnIndex = pXLColumn[208];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);


                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //191
                //-------------------------------------------------------------------

                // COL68_2  가산세명세_합계_세액
                vGDColumnIndex = pGDColumn[163];
                vXLColumnIndex = pXLColumn[163];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 4; //194
                //-------------------------------------------------------------------

                // COL69_1  면세사업수입금액_업태1
                vGDColumnIndex = pGDColumn[164];
                vXLColumnIndex = pXLColumn[164];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL69_2  면세사업수입금액_종목1
                vGDColumnIndex = pGDColumn[165];
                vXLColumnIndex = pXLColumn[165];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL69_3  면세사업수입금액_금액1
                vGDColumnIndex = pGDColumn[166];
                vXLColumnIndex = pXLColumn[166];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //196
                //-------------------------------------------------------------------

                // COL70_1  면세사업수입금액_업태2
                vGDColumnIndex = pGDColumn[167];
                vXLColumnIndex = pXLColumn[167];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL70_2  면세사업수입금액_종목2
                vGDColumnIndex = pGDColumn[168];
                vXLColumnIndex = pXLColumn[168];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL70_3  면세사업수입금액_금액2
                vGDColumnIndex = pGDColumn[169];
                vXLColumnIndex = pXLColumn[169];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //198
                //-------------------------------------------------------------------

                // COL71_1  면세사업수입금액_업태3
                vGDColumnIndex = pGDColumn[170];
                vXLColumnIndex = pXLColumn[170];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                // COL71_2  면세사업수입금액_종목3
                vGDColumnIndex = pGDColumn[171];
                vXLColumnIndex = pXLColumn[171];
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertString(vObject, out vConvertString);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0}", vConvertString);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                IsBUSINESS_ITEM_CODE = IsConvert;
                // TITLE_13_1         출력용 업종코드_01
                if (IsBUSINESS_ITEM_CODE == true)
                {

                    // TITLE_13_1  출력용 업종코드_01
                    vGDColumnIndex = pGDColumn[174];
                    vXLColumnIndex = pXLColumn[174];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_2  출력용 업종코드_02
                    vGDColumnIndex = pGDColumn[175];
                    vXLColumnIndex = pXLColumn[175];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_3  출력용 업종코드_03
                    vGDColumnIndex = pGDColumn[176];
                    vXLColumnIndex = pXLColumn[176];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_4  출력용 업종코드_04
                    vGDColumnIndex = pGDColumn[177];
                    vXLColumnIndex = pXLColumn[177];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_5  출력용 업종코드_05
                    vGDColumnIndex = pGDColumn[178];
                    vXLColumnIndex = pXLColumn[178];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }

                    // TITLE_13_6  출력용 업종코드_06
                    vGDColumnIndex = pGDColumn[179];
                    vXLColumnIndex = pXLColumn[179];
                    vObject = pRow[vGDColumnIndex];
                    IsConvert = IsConvertString(vObject, out vConvertString);
                    if (IsConvert == true)
                    {
                        vConvertString = string.Format("{0}", vConvertString);
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                    else
                    {
                        vConvertString = string.Empty;
                        mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                    }
                }

                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////
                //////////////////////////////////////////////////////////////////////////////////////////////


                // COL71_3  면세사업수입금액_금액3
                vGDColumnIndex = pGDColumn[172];
                vXLColumnIndex = pXLColumn[172];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //200
                //-------------------------------------------------------------------

                // COL72    면세사업수입금액_합계
                vGDColumnIndex = pGDColumn[173];
                vXLColumnIndex = pXLColumn[173];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 3; //203
                //-------------------------------------------------------------------

                // COL73    계산서발급금액
                vGDColumnIndex = pGDColumn[180];
                vXLColumnIndex = pXLColumn[180];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 2; //205
                //-------------------------------------------------------------------

                // COL74    계산서수취금액
                vGDColumnIndex = pGDColumn[181];
                vXLColumnIndex = pXLColumn[181];
                vObject = pRow_01[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                else
                {
                    vConvertString = string.Empty;
                    mPrinting.XLSetCell(vXLine, vXLColumnIndex, vConvertString);
                }
                //수정
                vObject = pRow[vGDColumnIndex];
                IsConvert = IsConvertNumber(vObject, out vConvertDecimal);
                if (IsConvert == true)
                {
                    vConvertString = string.Format("{0:##,###,###,###,###,###,###,###,###}", vConvertDecimal);
                }
                else
                {
                    vConvertString = string.Empty;
                }
                mPrinting.XLSetCell(vXLine + 1, vXLColumnIndex, vConvertString);

                //-------------------------------------------------------------------
                vXLine = vXLine + 1;
                //-------------------------------------------------------------------
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mAppInterface.OnAppMessageEvent(mMessageError);
                System.Windows.Forms.Application.DoEvents();
            }

            return vXLine;
        }

        #endregion;

        #endregion;

        #region ----- Excel Wirte [Line] Methods ----

        public int LineWrite(InfoSummit.Win.ControlAdv.ISDataAdapter p_adapter_LIST_SURTAX_CARD)
        {
            mPageNumber = 0;
            string vMessage = string.Empty;

            int vPrintingLine = 0;

            int[] vGDColumn;
            int[] vXLColumn;

            try
            {
                #region ----- XL_WRITE Write ----

                int vTotal1ROW = p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows.Count;

                if (vTotal1ROW > 0)
                {
                    SetArray1(p_adapter_LIST_SURTAX_CARD.OraSelectData, out vGDColumn, out vXLColumn);

                    mCopyLineSUM = CopyAndPaste(mCopyLineSUM);

                    mAppInterface.OnAppMessageEvent("Data Writing...");
                    System.Windows.Forms.Application.DoEvents();

                    vPrintingLine = XL_WRITE(p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows[0], vGDColumn, vXLColumn);
                }

                #endregion;
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mPrinting.XLOpenFileClose();
                mPrinting.XLClose();
            }

            return mPageNumber;
        }

        public int LineWrite_201401(InfoSummit.Win.ControlAdv.ISDataAdapter p_adapter_LIST_SURTAX_CARD)
        {
            mPageNumber = 0;
            string vMessage = string.Empty;

            int vPrintingLine = 0;

            int[] vGDColumn;
            int[] vXLColumn;

            try
            {
                #region ----- XL_WRITE Write ----

                int vTotal1ROW = p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows.Count;

                if (vTotal1ROW > 0)
                {
                    SetArray1_201401(p_adapter_LIST_SURTAX_CARD.OraSelectData, out vGDColumn, out vXLColumn);

                    mCopyLineSUM = CopyAndPaste(mCopyLineSUM);

                    mAppInterface.OnAppMessageEvent("Data Writing...");
                    System.Windows.Forms.Application.DoEvents();

                    vPrintingLine = XL_WRITE_201401(p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows[0], vGDColumn, vXLColumn);
                }

                #endregion;
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mPrinting.XLOpenFileClose();
                mPrinting.XLClose();
            }

            return mPageNumber;
        }


        public int LineWrite_013(InfoSummit.Win.ControlAdv.ISDataAdapter p_adapter_LIST_SURTAX_CARD)
        {
            mPageNumber = 0;
            string vMessage = string.Empty;

            int vPrintingLine = 0;

            int[] vGDColumn;
            int[] vXLColumn;

            try
            {
                #region ----- XL_WRITE Write ----

                int vTotal1ROW = p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows.Count;

                if (vTotal1ROW > 0)
                {
                    SetArray1_013(p_adapter_LIST_SURTAX_CARD.OraSelectData, out vGDColumn, out vXLColumn);

                    mCopyLineSUM = CopyAndPaste(mCopyLineSUM);

                    mAppInterface.OnAppMessageEvent("Data Writing...");
                    System.Windows.Forms.Application.DoEvents();

                    vPrintingLine = XL_WRITE_013(p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows[0], vGDColumn, vXLColumn);
                }

                #endregion;
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mPrinting.XLOpenFileClose();
                mPrinting.XLClose();
            }

            return mPageNumber;
        }


        public int LineWrite_02(InfoSummit.Win.ControlAdv.ISDataAdapter p_adapter_LIST_SURTAX_CARD
                                , InfoSummit.Win.ControlAdv.ISDataAdapter pSurtax_Card_01)
        {
            mPageNumber = 0;
            string vMessage = string.Empty;

            int vPrintingLine = 0;

            int[] vGDColumn;
            int[] vXLColumn;

            try
            {
                #region ----- XL_WRITE Write ----

                int vTotal1ROW = p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows.Count;

                if (vTotal1ROW > 0)
                {
                    SetArray1(p_adapter_LIST_SURTAX_CARD.OraSelectData, out vGDColumn, out vXLColumn);


                    mCopyLineSUM = 1;         //엑셀의 선택된 쉬트의 복사되어질 시작 행 위치, 복사 행 누적
                    mIncrementCopyMAX = 207;  //복사되어질 행의 범위

                    mCopyColumnSTART = 1; //복사되어  진 행 누적 수
                    mCopyColumnEND = 50;  //엑셀의 선택된 쉬트의 복사되어질 끝 열 위치

                    mCopyLineSUM = CopyAndPaste(mCopyLineSUM);

                    mAppInterface.OnAppMessageEvent("Data Writing...");
                    System.Windows.Forms.Application.DoEvents();

                    vPrintingLine = XL_WRITE_02(p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows[0], pSurtax_Card_01.OraSelectData.Rows[0], vGDColumn, vXLColumn);
                }

                #endregion;
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mPrinting.XLOpenFileClose();
                mPrinting.XLClose();
            }

            return mPageNumber;
        }

        public int LineWrite_02_201401(InfoSummit.Win.ControlAdv.ISDataAdapter p_adapter_LIST_SURTAX_CARD
                                , InfoSummit.Win.ControlAdv.ISDataAdapter pSurtax_Card_01)
        {
            mPageNumber = 0;
            string vMessage = string.Empty;

            int vPrintingLine = 0;

            int[] vGDColumn;
            int[] vXLColumn;

            try
            {
                #region ----- XL_WRITE Write ----

                int vTotal1ROW = p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows.Count;

                if (vTotal1ROW > 0)
                {
                    SetArray1_201401(p_adapter_LIST_SURTAX_CARD.OraSelectData, out vGDColumn, out vXLColumn);


                    mCopyLineSUM = 1;         //엑셀의 선택된 쉬트의 복사되어질 시작 행 위치, 복사 행 누적
                    mIncrementCopyMAX = 209;  //복사되어질 행의 범위

                    mCopyColumnSTART = 1; //복사되어  진 행 누적 수
                    mCopyColumnEND = 50;  //엑셀의 선택된 쉬트의 복사되어질 끝 열 위치

                    mCopyLineSUM = CopyAndPaste(mCopyLineSUM);

                    mAppInterface.OnAppMessageEvent("Data Writing...");
                    System.Windows.Forms.Application.DoEvents();

                    vPrintingLine = XL_WRITE_02(p_adapter_LIST_SURTAX_CARD.OraSelectData.Rows[0], pSurtax_Card_01.OraSelectData.Rows[0], vGDColumn, vXLColumn);
                }

                #endregion;
            }
            catch (System.Exception ex)
            {
                mMessageError = ex.Message;
                mPrinting.XLOpenFileClose();
                mPrinting.XLClose();
            }

            return mPageNumber;
        }

        #endregion;

        #region ----- Copy&Paste Sheet Method ----

        //첫번째 페이지 복사
        private int CopyAndPaste(int pCopySumPrintingLine)
        {
            int vCopySumPrintingLine = pCopySumPrintingLine;

            int vCopyPrintingRowSTART = vCopySumPrintingLine;
            vCopySumPrintingLine = vCopySumPrintingLine + mIncrementCopyMAX;
            int vCopyPrintingRowEnd = vCopySumPrintingLine;

            mPrinting.XLActiveSheet("SOURCE1");

            object vRangeSource = mPrinting.XLGetRange(mCopyColumnSTART, 1, mIncrementCopyMAX, mCopyColumnEND); //[원본], [Sheet2.Cell("A1:AS67")], 엑셀 쉬트에서 복사 시작할 행번호, 엑셀 쉬트에서 복사 시작할 열번호, 엑셀 쉬트에서 복사 종료할 행번호, 엑셀 쉬트에서 복사 종료할 열번호
            mPrinting.XLActiveSheet("DESTINATION");
            object vRangeDestination = mPrinting.XLGetRange(vCopyPrintingRowSTART, 1, vCopyPrintingRowEnd, mCopyColumnEND); //[대상], [Sheet1.Cell("A1:AS67")], 엑셀 쉬트에서 복사 시작할 행번호, 엑셀 쉬트에서 복사 시작할 열번호, 엑셀 쉬트에서 복사 종료할 행번호, 엑셀 쉬트에서 복사 종료할 열번호
            mPrinting.XLCopyRange(vRangeSource, vRangeDestination);

            mPageNumber++; //페이지 번호
            mPageNumber++; //페이지 번호

            return vCopySumPrintingLine;
        }

        #endregion;

        #region ----- Printing Methods ----

        public void Printing(int pPageSTART, int pPageEND)
        {
            mPrinting.XLPreviewPrinting(pPageSTART, pPageEND, 1);
        }

        #endregion;

        #region ----- Save Methods ----

        public void SAVE(string pSaveFileName)
        {
            System.IO.DirectoryInfo vWallpaperFolder = new System.IO.DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory));
            int vMaxNumber = 0;
            try
            {
                vMaxNumber = MaxIncrement(vWallpaperFolder.ToString(), pSaveFileName);
            }
            catch
            {
                vMaxNumber = 0;
            }

            vMaxNumber = vMaxNumber + 1;
            string vSaveFileName = string.Format("{0}{1:D3}", pSaveFileName, vMaxNumber);

            vSaveFileName = string.Format("{0}\\{1}.xls", vWallpaperFolder, vSaveFileName);
            mPrinting.XLSave(vSaveFileName);
        }

        #endregion;
    }
}
